<?xml version="1.0" encoding="ISO-8859-1" ?>
<taglib xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
        version="2.1">
  <description>Tags for the OpenFaces library</description>
  <tlib-version>__OpenFacesVersion__</tlib-version>
  <short-name>o</short-name>
  <uri>http://openfaces.org/</uri>


  <!-- TABLE-RELATED TAGS DECLARATION -->

  <tag>
    <description>The DataTable component is used to display data in a tabular format and effectively
      manipulate it. It supports all the features of the standard JSF HtmlDataTable component and,
      in addition, provides a number of features of its own. Child tags: {@link column}, {@link selectionColumn},
      {@link checkboxColumn}, {@link singleRowSelection}, {@link multipleRowSelection},
      {@link dataTablePaginator}, {@link cell}, {@link row}, {@link columnResizing}.
    </description>
    <name>dataTable</name>
    <tag-class>org.openfaces.taglib.jsp.table.DataTableJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>

      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the DataTable with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.DataTable</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. DataTable -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to use Ajax for sorting, filternig and pagination.</description>
      <name>useAjax</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to apply the default style.</description>
      <name>applyDefaultStyle</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies a numeric value that defines input focus traversing order for this component.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the table content.</description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @value "left" -->
      <!-- @value "center" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The background color behind the table content.</description>
      <name>bgcolor</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The reading order of the table columns and content. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left)
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ltr" -->
      <!-- @value "ltr" from left to right -->
      <!-- @value "rtl" from right to left -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies which gridlines are displayed between the cells in the DataTable component.</description>
      <name>rules</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none" -->
      <!-- @value "all" between all rows and columns-->
      <!-- @value "cols" between columns only-->
      <!-- @value "groups" between row groups and column groups only -->
      <!-- @value "none" no grid lines -->
      <!-- @value "rows" between rows only -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the DataTable. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The number of pixels in the DataTable border. The value Integer.MIN_VALUE means
        there is no border rendered.
      </description>
      <name>border</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The amount of space between the cells in the DataTable. The value null means
        there is no cell spacing rendered.
      </description>
      <name>cellspacing</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The amount of space between the border of the cell and
        its content. The value null means there is no cell spacing rendered.
      </description>
      <name>cellpadding</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The sorting order of the data in the DataTable component. The "true" value means the table is sorted
        in ascending order.
      </description>
      <name>sortAscending</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The identifier of a column by which the DataTable component is sorted.
      </description>
      <name>sortColumnId</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The name of a request-scope variable under which the current row data is available when
        specifying columns.
      </description>
      <name>var</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of the variable under which the current row index is available when declaring
        components
        inside columns or specifying a condition for the {@link row} and {@link cell} tags.
      </description>
      <name>rowIndexVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of the variable under which the column index is available when specifying
        a condition for the {@link cell} tag.
      </description>
      <name>columnIndexVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of the variable under which the column identifier is available when specifying
        a condition for the {@link cell} tag.
      </description>
      <name>columnIdVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>If this attribute is set to "true", then it is the responsibility of a developer to provide
        the paged data through the "value" attribute. In this case, two additional request-scope variables
        are available when evaluating the "value" attribute: rangeStart and rangeSize. These variables
        specify which rows the "value" attribute should return. rangeStart is the index of the first returned
        row, and rangeSize defines the number of rows that should be returned. When this attribute is set
        to "true", the "totalRowCount" and "rowDataByKey" attributes must also be defined.
      </description>
      <name>customDataProviding</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The number of rows on all table pages according to current filtering options. Must be
        specified if the "customPaging" attribute is set to "true".
      </description>
      <name>totalRowCount</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A value-binding expression that should return row data by a request-scope rowKey variable.
        This variable is required when the "customPaging" attribute is set to "true".
      </description>
      <name>rowDataByKey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Specifies a set of rows displayed in the DataTable component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array -->
      <!-- @bindingType java.util.Collection -->
      <!-- @bindingType java.sql.ResultSet -->
      <!-- @bindingType javax.servlet.jsp.jstl.sql.Result -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A row key that must uniquely identify an appropriate row. All rowKey objects should be
        serializable and correctly implement the equals() and hashCode() methods.
      </description>
      <name>rowKey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The number of rows to be displayed on each table page. If it is set to "0", no pagination is
        available.
      </description>
      <name>pageSize</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The number of a currently displayed page. This attribute is effective only if the "pageSize"
        attribute is specified.
      </description>
      <name>pageIndex</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies the delay in milliseconds when the filtering is performed automatically after the user has
        entered some value in an associated filter, or turns off automatic filtering in case -1 is specified as a value
        for this attribute.
      </description>
      <name>autoFilterDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int-->
      <!-- @default 700 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;All&gt;" in the "comboBox" or
        "dropDownField" when filtering is used.
      </description>
      <name>allRecordsFilterText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<All>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;Empty&gt;" in the "comboBox" or
        "dropDownField" when filtering is used.
      </description>
      <name>emptyRecordsFilterText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Empty>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;Non-empty&gt;" in the "comboBox" or
        "dropDownField" when filtering is used.
      </description>
      <name>nonEmptyRecordsFilterText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Non-empty>"  -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The order of columns in the DataTable component. This attribute should be bound to a list
        containing column IDs for each column in the order you want them to be displayed. If the "columnsOrder"
        attribute is not specified, all the columns are rendered in the order they are defined.
      </description>
      <name>columnsOrder</name>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.List -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to enable the keyboard support for pagination.</description>
      <name>paginationKeyboardSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that displays the ascending sort direction.
      </description>
      <name>sortedAscendingImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that displays the descending sort direction.
      </description>
      <name>sortedDescendingImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire DataTable component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire DataTable component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DataTable header section.</description>
      <name>headerSectionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTable header section.</description>
      <name>headerSectionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DataTable body section.</description>
      <name>bodySectionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTable body section.</description>
      <name>bodySectionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DataTable footer section.</description>
      <name>footerSectionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTable footer section.</description>
      <name>footerSectionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire sorted column.</description>
      <name>sortedColumnStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire sorted column.</description>
      <name>sortedColumnClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the sorted column's header.</description>
      <name>sortedColumnHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the sorted column's header.</description>
      <name>sortedColumnHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the sorted column's body.</description>
      <name>sortedColumnBodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the sorted column's body.</description>
      <name>sortedColumnBodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the sorted column's footer.</description>
      <name>sortedColumnFooterStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the sorted column's footer.</description>
      <name>sortedColumnFooterClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is applied to the header of a sortable column.</description>
      <name>sortableHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name that is applied to the header of a sortable column.</description>
      <name>sortableHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is applied to the header of a sortable column in the rollover state.</description>
      <name>sortableHeaderRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name that is applied to the header of a sortable column in the rollover state.
      </description>
      <name>sortableHeaderRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for DataTable rows.</description>
      <name>bodyRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for DataTable rows.</description>
      <name>bodyRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for DataTable odd rows, if should be different from bodyRowStyle.</description>
      <name>bodyOddRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for DataTable odd rows, if it should be different from bodyRowClass.</description>
      <name>bodyOddRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column header row.</description>
      <name>headerRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column header row.</description>
      <name>headerRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DataTable header row.</description>
      <name>commonHeaderRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTable header row.</description>
      <name>commonHeaderRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column footer row.</description>
      <name>footerRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column footer row.</description>
      <name>footerRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DataTable footer row.</description>
      <name>commonFooterRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTable footer row.</description>
      <name>commonFooterRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the row that displays "noDataMessage".</description>
      <name>noDataRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the row that displays "noDataMessage".</description>
      <name>noDataRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show "noDataMessage".</description>
      <name>noDataMessageAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for horizontal lines in the DataTable body. Should be specified as the
        CSS "border" property but without the prefix "border:".
      </description>
      <name>horizontalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #e0e0e0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines in the DataTable body. Should be specified as the
        CSS "border" property but without the prefix "border:". This attribute can also accept the comma-separated
        list of similarly-formatted gridline styles for specifying separators between different levels of column groups.
        The first item in this list corresponds to separators between the columns, the second one specifies styles for
        separators between group separators, and so on if more separators are required in case of a deeper hierarchy of
        column groups.
      </description>
      <name>verticalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #e0e0e0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the table header from the rest of the table.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>commonHeaderSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the table footer from the rest of the table.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>commonFooterSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the header section from the body section.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>headerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column headers. Should be specified as the
        CSS "border" property but without the prefix "border:". It can also be specified as a list of comma-separated
        gridline styles when column groups are used and group separators should be different from column separators.
        See verticalGridLines attribute for details.
      </description>
      <name>headerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple header rows when column groups are used. It can also be
        specified as a list of comma-separated gridline styles when there are multiple levels of nested column groups.
      </description>
      <name>multiHeaderSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple footer rows when column groups are used. It can also be
        specified as a list of comma-separated gridline styles when there are multiple levels of nested column groups.
      </description>
      <name>multiFooterSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the footer section from the body section.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>footerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column footers. Should be specified as the
        CSS "border" property but without the prefix "border:". It can also be specified as a list of comma-separated
        gridline styles when column groups are used and group separators should be different from column separators.
        See verticalGridLines attribute for details.
      </description>
      <name>footerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the sub-header row (usually contains the filter components).</description>
      <name>subHeaderRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the sub-header row (usually contains the filter components).</description>
      <name>subHeaderRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates a sub-header row and the column header.
      </description>
      <name>subHeaderRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the DataTable component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTable component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a DataTable row in the rollover state.</description>
      <name>rolloverRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a DataTable row in the rollover state.</description>
      <name>rolloverRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style of the DataTable component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the DataTable component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the DataTable.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the DataTable.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the DataTable with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the DataTable.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the DataTable.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the DataTable.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button
        over the DataTable.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the DataTable receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the DataTable loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the DataTable.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the DataTable.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a
        key over the DataTable.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The Column component is used to specify a separate column. Child components
      of the &lt;o:column&gt; tag are used to render each cell of the current row.
      Can be specified only as a child tag for the {@link dataTable}, {@link treeTable} or
      {@link dropDownField} components. Please note that the if you use the Column component
      in the {@link dropDownField}, you cannot use attributes related to filtering, sorting, selection.
    </description>
    <name>column</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the column with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.Column</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. Column -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the column is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;header&quot; facet, or serve for identifying the column name in such components as &lt;o:comopsitefilter&gt;
        or &lt;o:columnVisibilityMenu&gt;.
      </description>
      <name>header</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;footer&quot; facet.
      </description>
      <name>footer</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines the row's value that is used during sorting. Is used to make the column sortable.
      </description>
      <name>sortingExpression</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Is used to compare the values provided by the "sortingExpression" attribute.</description>
      <name>sortingComparator</name>
      <deferred-value>
        <type>java.util.Comparator</type>
      </deferred-value>
      <!-- @bindingType java.util.Comparator -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The width of the column. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the column content.</description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The vertical alignment of the column content.</description>
      <name>valign</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. This attribute can be used to disable
        manual resizing for a particular column.
      </description>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. Specifies the minimum width that this
        column can take when the user resizes this column. It can be specified using any CSS units except percent.
      </description>
      <name>minResizingWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when horizontal scrolling is enabled for a table. Assigning true to this attribute
        "fixes" the column which means that it is excluded from horizontal scrolling and is always visible regardless of
        scroll position.
      </description>
      <name>fixed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire column.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for entire column.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column's header.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column's header.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the cell in the sub-header row.</description>
      <name>subHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the cell in the sub-header row.
      </description>
      <name>subHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column's body.</description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column's body.</description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column's footer.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column's footer.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the column with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the column.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the column.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the column.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the column.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column's header.
      </description>
      <name>headerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column's header.
      </description>
      <name>headerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the column's header with either mouse button.
      </description>
      <name>headerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the column's header.
      </description>
      <name>headerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the column's header.
      </description>
      <name>headerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the column's header.
      </description>
      <name>headerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the column's header.
      </description>
      <name>headerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column's body.
      </description>
      <name>bodyOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column's body.
      </description>
      <name>bodyOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button over the column's body.
      </description>
      <name>bodyOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the column's body.
      </description>
      <name>bodyOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the column's body.
      </description>
      <name>bodyOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the column's body.
      </description>
      <name>bodyOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the column's
        body.
      </description>
      <name>bodyOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column's footer.
      </description>
      <name>footerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column's footer.
      </description>
      <name>footerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button
        over the column's footer.
      </description>
      <name>footerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the column's footer.
      </description>
      <name>footerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the column's footer.
      </description>
      <name>footerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the column's footer.
      </description>
      <name>footerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the column's footer.
      </description>
      <name>footerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <name>inputTextFilter</name>
    <tag-class>org.openfaces.taglib.jsp.filter.InputTextFilterJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the component with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.DataTable</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. DataTable -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Specifies the delay in milliseconds when the filtering is performed automatically after the user has
        entered some value in the filter, or turns off automatic filtering in case -1 is specified as a value for this
        attribute.
      </description>
      <name>autoFilterDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int-->
      <!-- @default 700 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>ID of a filterable component that should be filtered with this component. It should be defined in
        the same way as the "for" property of the standard HTMLOutputLabel component. If this attribute is not specified
        then this filter component should be located inside of a filterable component (DataTable or TreeTable).
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Defines an expression that is used to obtain a record's value by which records are to be filtered.
      </description>
      <name>expression</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current filtering criterion selected in this filter component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter. ExpressionFilterCriterion -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The filtering condition that should be used for comparing the values specified in this filter
        component
        to the values specified in data records. It should have a format of "&lt;condition&gt;" or "not &lt;condition&gt;",
        where &lt;condition&gt; is one of the following values: equals, contains, beginsWith, endsWith, less, greater,
        lessOrEqual, greaterOrEqual. This attribute is not effective when the "value" attribute is defined. In case of
        specifying the "value" attribute, you should specify the condition as part of the ExpressionFilterCriterion
        object bound to the "value" attribute.
      </description>
      <name>condition</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter.FilterCondition -->
      <!-- @default null -->
      <!-- @value "equals" -->
      <!-- @value "contains" -->
      <!-- @value "beginsWith" -->
      <!-- @value "endsWith" -->
      <!-- @value "less" -->
      <!-- @value "greater" -->
      <!-- @value "lessOrEqual" -->
      <!-- @value "greaterOrEqual" -->
      <!-- @value "not equals" -->
      <!-- @value "not contains" -->
      <!-- @value "not beginsWith" -->
      <!-- @value "not endsWith" -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies whether letter case should be exactly matched when obtaining filtering results.
      </description>
      <name>caseSensitive</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean-->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A converter for the filter value. Should be specified as a value-binding expression or converter
        identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire filter component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire filter component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the filter component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the filter component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style of the filter component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name of the filter component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether the "autocomplete" attribute is rendered for this input element, which
        makes a browser provide suggestions based on the previosly typed values.
      </description>
      <name>autocomplete</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ltr" -->
      <!-- @value "ltr" left to right -->
      <!-- @value "rtl" right to left -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the filter component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An access key for the filter component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Alternate textual description of the element rendered by this component.</description>
      <name>alt</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The maximum number of characters that can be entered in the filter.</description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>dropDownFieldFilter</name>
    <tag-class>org.openfaces.taglib.jsp.filter.DropDownFieldFilterJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the component with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.DataTable</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. DataTable -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Specifies the delay in milliseconds when the filtering is performed automatically after the user has
        entered some value in the filter, or turns off automatic filtering in case -1 is specified as a value for this
        attribute.
      </description>
      <name>autoFilterDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int-->
      <!-- @default 700 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>ID of a filterable component that should be filtered with this component. It should be defined in
        the same way as the "for" property of the standard HTMLOutputLabel component. If this attribute is not specified
        then this filter component should be located inside of a filterable component (DataTable or TreeTable).
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Defines an expression that is used to obtain a record's value by which records are to be filtered.
      </description>
      <name>expression</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current filtering criterion selected in this filter component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter. ExpressionFilterCriterion -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the filter value. Should be specified as a value-binding expression or converter
        identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The filtering condition that should be used for comparing the values specified in this filter
        component
        to the values specified in data records. It should have a format of "&lt;condition&gt;" or "not &lt;condition&gt;",
        where &lt;condition&gt; is one of the following values: equals, contains, beginsWith, endsWith, less, greater,
        lessOrEqual, greaterOrEqual. This attribute is not effective when the "value" attribute is defined. In case of
        specifying the "value" attribute, you should specify the condition as part of the ExpressionFilterCriterion
        object bound to the "value" attribute.
      </description>
      <name>condition</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter.FilterCondition -->
      <!-- @default null -->
      <!-- @value "equals" -->
      <!-- @value "contains" -->
      <!-- @value "beginsWith" -->
      <!-- @value "endsWith" -->
      <!-- @value "less" -->
      <!-- @value "greater" -->
      <!-- @value "lessOrEqual" -->
      <!-- @value "greaterOrEqual" -->
      <!-- @value "not equals" -->
      <!-- @value "not contains" -->
      <!-- @value "not beginsWith" -->
      <!-- @value "not endsWith" -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The filtering options that appear in the filter's drop-down list instead of displaying all of the
        possible values.
      </description>
      <name>options</name>
      <deferred-value>
        <type>java.util.Collection</type>
      </deferred-value>
      <!-- @bindingType java.util.Collection -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Specifies whether letter case should be exactly matched when obtaining filtering results.
      </description>
      <name>caseSensitive</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean-->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the text field of this filter component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the filter component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The maximum number of characters that can be entered in the filter field.
        It is still possible to select any text from the drop-down list no matter how long it is.
      </description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether the field completes incompletely entered text
        as the user types it. The text is completed to the first drop-down item that
        starts with the typed text. The part that was added as a result of auto-completion
        is marked as selected. See also the suggestionMinChars and suggestionDelay
        attributes which define when auto-completion starts.
      </description>
      <name>autoComplete</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether and how the drop-down list with suggestions should
        be shown when typing in the field. Any value except "none" means that suggestions
        are displayed. See also the suggestionMinChars and suggestionDelay attributes which
        define when auto-suggestion starts. Note that it's possible to specify all values except the "custom"
        suggestion mode (which is only available for DropDownField and SuggestionField components).
      </description>
      <name>suggestionMode</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. SuggestionMode -->
      <!-- @default "stringStart" -->
      <!-- @value "stringStart" works on the client side. Shows suggestions that begin with the entered value -->
      <!-- @value "substring" works on the client side. Shows suggestions that contain the entered value -->
      <!-- @value "stringEnd" works on the client side. Shows suggestions that end with the entered value -->
      <!-- @value "custom" works on the server side using Ajax. Sends an Ajax request when
entering a value and returns a list of suggestions from the server -->
      <!-- @value "all" works on the client side. Shows all drop-down items in the list of suggestions -->
      <!-- @value "none" suggestion mode is turned off -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The minimal number of characters that should be typed for auto-completion
        and auto-suggestion features to be activated.
      </description>
      <name>suggestionMinChars</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The time period in milliseconds that specifies the delay
        after the last key press that should pass before starting auto-completion
        or auto-suggestion. This delay can be used to avoid too much
        Ajax requests to be sent to the server when the user is typing text,
        and only send one request when the user has stopped typing.
      </description>
      <name>suggestionDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether it is possible to specify only a value that exists in the list of this
        component's drop-down items ("false"), or whether it is possible to enter any value ("true").
      </description>
      <name>customValueAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>Defines whether the button that opens the drop-down list is positioned to the right or to
        the left of the text field.
      </description>
      <name>buttonAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "right" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines how items in the drop-down list are aligned.</description>
      <name>listAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "left" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>A style for the entire filter component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire filter component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire DropDownField component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the DropDownField component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field.</description>
      <name>fieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the rollover state.</description>
      <name>rolloverFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button.</description>
      <name>buttonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button in the rollover state.</description>
      <name>rolloverButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button in the pressed state.</description>
      <name>pressedButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down list.</description>
      <name>listStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down list in the rollover state.</description>
      <name>rolloverListStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a list item.</description>
      <name>listItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a list item in the rollover state.</description>
      <name>rolloverListItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the entire DropDownField component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the DropDownField component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field.</description>
      <name>fieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field in the rollover state.</description>
      <name>rolloverFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button.</description>
      <name>buttonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button in the rollover state.</description>
      <name>rolloverButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button in the pressed state.</description>
      <name>pressedButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down list.</description>
      <name>listClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down list in the rollover state.</description>
      <name>rolloverListClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a list item.</description>
      <name>listItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a list item in the rollover state.</description>
      <name>rolloverListItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for an odd list item, if different from listItemStyle.</description>
      <name>oddListItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for an odd list item, if different from listItemClass.</description>
      <name>oddListItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for horizontal lines in the drop-down list.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>horizontalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image file for the drop-down button.</description>
      <name>buttonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image file for the drop-down button in the disabled state.</description>
      <name>disabledButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A time period after which the drop-down list is closed automatically.
        The value "-1" means that the list does not close automatically.
      </description>
      <name>timeout</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -1 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Text that is displayed instead of "&lt;All&gt;" in the filter's drop-down list.
      </description>
      <name>allRecordsText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<All>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;Empty&gt;" in the filter's drop-down list.
      </description>
      <name>emptyRecordsText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Empty>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;Non-empty&gt;" in the filter's drop-down list.
      </description>
      <name>nonEmptyRecordsText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Non-empty>"  -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>comboBoxFilter</name>
    <tag-class>org.openfaces.taglib.jsp.filter.ComboBoxFilterJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the component with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.DataTable</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. DataTable -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>ID of a filterable component that should be filtered with this component. It should be defined in
        the same way as the "for" property of the standard HTMLOutputLabel component. If this attribute is not specified
        then this filter component should be located inside of a filterable component (DataTable or TreeTable).
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Defines an expression that is used to obtain a record's value by which records are to be filtered.
      </description>
      <name>expression</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current filtering criterion selected in this filter component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter. ExpressionFilterCriterion -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the filter value. Should be specified as a value-binding expression or converter
        identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The filtering condition that should be used for comparing the values specified in this filter
        component
        to the values specified in data records. It should have a format of "&lt;condition&gt;" or "not &lt;condition&gt;",
        where &lt;condition&gt; is one of the following values: equals, contains, beginsWith, endsWith, less, greater,
        lessOrEqual, greaterOrEqual. This attribute is not effective when the "value" attribute is defined. In case of
        specifying the "value" attribute, you should specify the condition as part of the ExpressionFilterCriterion
        object bound to the "value" attribute.
      </description>
      <name>condition</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter.FilterCondition -->
      <!-- @default null -->
      <!-- @value "equals" -->
      <!-- @value "contains" -->
      <!-- @value "beginsWith" -->
      <!-- @value "endsWith" -->
      <!-- @value "less" -->
      <!-- @value "greater" -->
      <!-- @value "lessOrEqual" -->
      <!-- @value "greaterOrEqual" -->
      <!-- @value "not equals" -->
      <!-- @value "not contains" -->
      <!-- @value "not beginsWith" -->
      <!-- @value "not endsWith" -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The filtering options that appear in the filter's drop-down list instead of displaying all of the
        possible values.
      </description>
      <name>options</name>
      <deferred-value>
        <type>java.util.Collection</type>
      </deferred-value>
      <!-- @bindingType java.util.Collection -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Specifies whether letter case should be exactly matched when obtaining filtering results.
      </description>
      <name>caseSensitive</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean-->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ltr" -->
      <!-- @value "ltr" left to right -->
      <!-- @value "rtl" right to left -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire filter component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire filter component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Text that is displayed instead of "&lt;All&gt;" in the filter's drop-down list.
      </description>
      <name>allRecordsText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<All>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;Empty&gt;" in the filter's drop-down list.
      </description>
      <name>emptyRecordsText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Empty>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed instead of "&lt;Non-empty&gt;" in the filter's drop-down list.
      </description>
      <name>nonEmptyRecordsText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Non-empty>"  -->
      <!-- @el true -->
    </attribute>

  </tag>


  <tag>
    <description>The Columns component is used to specify dynamic number of columns in the {@link dataTable} or
      {@link treeTable} components. Child components of the &lt;o:columns&gt; tag are used to render each cell.
      All of the attributes of &lt;o:columns&gt; tag are analogous to their counterparts in the &lt;o:column&gt;
      tag but they have one valuable difference - an ability for the attributes to be specified as value binding
      expressions that allow specifying column attributes on a per-column basis. When specify child components
      of the &lt;o:columns&gt; tag, the "var" request-scope variables from the &lt;o:dataTable&gt; and
      &lt;o:columns&gt; tags can be used (apart form "value" and "var" attributes).
      Component can be specified only as a child tag for the {@link dataTable} or {@link treeTable}.
    </description>
    <name>columns</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnsJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Specifies an array or a collection of objects that serve as column data objects.
        &lt;The o:columns&gt; tag results in adding one column per each object found in this collection.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array -->
      <!-- @bindingType java.util.Collection -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The name of the request-scope variable under which the current column data object is
        available when evaluating value binding expressions specified in this tag's attributes.
      </description>
      <name>var</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that should reference an identifier for each dynamic column. You
        can use a column data variable specified in the "var" in the expression for this attribute. Note that
        column IDs evaluated for columns inside the o:columns tag are used in the same way as "id" attributes
        of ordinary &lt;o:column&gt; tags, so the identifiers evaluated using this expression should be unique in
        bounds of the containing table.
      </description>
      <name>columnId</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not each dynamic column is visible. Can be specified
        right on the page (one and the same value for all dynamic columns is used) or as a value-binding
        expression. You can use a column data variable specified in the "var" in the expression for this
        attribute.
      </description>
      <name>columnRendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;header&quot; facet, or serve for identifying the column name in such components as &lt;o:comopsitefilter&gt;
        or &lt;o:columnVisibilityMenu&gt;. You can use a column data variable specified in the "var" in the expression
        for this
        attribute.
      </description>
      <name>header</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;footer&quot; facet.
      </description>
      <name>footer</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not each dynamic column is sortable. Can be specified
        right on the page (one and the same value for all dynamic columns is used) or as a value-binding
        expression.
        You can use a column data variable specified in the "var" in the expression for this attribute.
      </description>
      <name>sortingEnabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that should reference a row's value that is used during sorting.
        You can use a column data variable specified in the "var" in the expression for this attribute.
        Specifying this attribute makes all dynamic columns to be sortable. Some dynamic columns can be made
        non-sortable by using the "sortingEnabled" attribute if needed.
      </description>
      <name>sortingExpression</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A value-binding expression that should reference a comparator for comparing the values
        provided by the "sortingExpression" attribute. You can use a column data variable specified in
        the "var" in the expression for this attribute.
      </description>
      <name>sortingComparator</name>
      <deferred-value>
        <type>java.util.Comparator</type>
      </deferred-value>
      <!-- @bindingType java.util.Comparator -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A style for the entire dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the cell in the sub-header row.
        Can be specified as a value-binding expression that uses a column data variable specified
        in the "var" attribute.
      </description>
      <name>subHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the cell in the sub-header row.
        Can be specified as a value-binding expression that uses a column data variable specified
        in the "var" attribute.
      </description>
      <name>subHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dynamic column's footer. Can be specified as a value-binding
        expression that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The width of the dynamic column. Can be specified in any units (px, mm, em, etc.).
        Can be specified as a value-binding expression that uses a column data variable specified
        in the "var" attribute.
      </description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the dynamic column content. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The vertical alignment of the dynamic column content. Can be specified as a value-binding
        expression that uses a column data variable specified in the "var" attribute.
      </description>
      <name>valign</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. This attribute can be used to disable
        manual resizing for a particular column. It can be specified as a value-binding expression that uses a column
        data
        variable specified in the "var" attribute.
      </description>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. Specifies the minimum width that this
        column can take when the user resizes this column. It can be specified using any CSS units except percent. This
        attribute can be specified as a value-binding expression that uses a column data variable specified in the
        "var" attribute.
      </description>
      <name>minResizingWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when horizontal scrolling is enabled for a table. Assigning true to this attribute
        "fixes" the column which means that it is excluded from horizontal scrolling and is always visible regardless of
        scroll position.
      </description>
      <name>fixed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default false -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the dynamic column with either mouse button. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the dynamic column. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the dynamic column's header with either mouse button. Can be specified as a value-binding
        expression that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the dynamic column's header. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>headerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button
        over the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the dynamic column's body. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>bodyOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button
        over the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the dynamic column's footer. Can be specified as a value-binding expression
        that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that should reference JavaScript code that should be executed when
        the user releases the mouse button over the dynamic column's footer. Can be specified as a value-binding
        expression that uses a column data variable specified in the "var" attribute.
      </description>
      <name>footerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The ColumnGroup component can be used to combine several columns into a group. The columns inside that
      are combined into a group can have an additional header and/or footer that spans across all of these columns. It
      is also possible to specify style and events for column groups. The set of attributes of &lt;o:columnGroup&gt; tag
      is similar to that of &lt;o:column&gt; tag. In order to create a group of columns, it is just needed to
      enclose the appropriate &lt;o:column&gt; tags into a &lt;o:columnGroup&gt; tag.
    </description>
    <name>columnGroup</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnGroupJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A value-binding expression that associates the column group with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.ColumnGroup</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. ColumnGroup -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column group's &quot;header&quot; facet.
      </description>
      <name>header</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column group's &quot;footer&quot; facet.
      </description>
      <name>footer</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when horizontal scrolling is enabled for a table. Assigning true to this attribute
        "fixes" the column group which means that it is excluded from horizontal scrolling and is always visible
        regardless of scroll position.
      </description>
      <name>fixed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that should be applied to each column in this group.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name that should be applied to each column in this group.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column group's header.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column group's header.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column group's body.</description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column group's body.</description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column group's footer.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column group's footer.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over any column in this group.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over any column in this group.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over any column in this group with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto any column in this
        group.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over any column in this
        group.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from any column in
        this group.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over any column in
        this group.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column group's header.
      </description>
      <name>headerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column group's header.
      </description>
      <name>headerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the column group's header with either mouse button.
      </description>
      <name>headerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the column group's header.
      </description>
      <name>headerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the column group's header.
      </description>
      <name>headerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the column group's header.
      </description>
      <name>headerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the column group's header.
      </description>
      <name>headerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column group's body.
      </description>
      <name>bodyOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column group's body.
      </description>
      <name>bodyOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button
        over the column group's body.
      </description>
      <name>bodyOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the column group's body.
      </description>
      <name>bodyOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the column group's body.
      </description>
      <name>bodyOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the column group's body.
      </description>
      <name>bodyOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the column group's body.
      </description>
      <name>bodyOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the column group's footer.
      </description>
      <name>footerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the column group's footer.
      </description>
      <name>footerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button
        over the column group's footer.
      </description>
      <name>footerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the column group's footer.
      </description>
      <name>footerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the column group's footer.
      </description>
      <name>footerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the column group's footer.
      </description>
      <name>footerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the column group's footer.
      </description>
      <name>footerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>
      Adding this tag as a child tag for the {@link dataTable} or {@link treeTable} component turns on the scrolling
      feature for the appropriate DataTable or TreeTable.
    </description>
    <name>scrolling</name>
    <tag-class>org.openfaces.taglib.jsp.table.ScrollingJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>Defines whether horizontal scroling should be activated (false by default).</description>
      <name>horizontal</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines the current scrolling position</description>
      <name>position</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.awt.Point -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>
  <tag>
    <description>
      Adding this tag as a child tag for the {@link dataTable} or {@link treeTable} component turns on the column
      resizing feature for the appropriate DataTable or TreeTable.
    </description>
    <name>columnResizing</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnResizingJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>Minimal width that a column can take as a result of resizing. Can be specified in any CSS units
        except percent. Example: "50px".
      </description>
      <name>minColWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "10px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Width of the area near column headers separator that can be dragged in order to resize columns.
        Can be specified in any CSS units except percent. Example: "5px".
      </description>
      <name>resizeHandleWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "9px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines the table's resizing state. This attribute can be used for saving resizing state between
        different visits of an appropriate page.
      </description>
      <name>resizingState</name>
      <!-- @bindingType org.openfaces.component.table.ColumnResizingState -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <tag>
    <description>Turns on drag&amp;drop column reordering feature for a DataTable or TreeTable where this tag is
      inserted.
    </description>
    <name>columnReordering</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnReorderingJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A style for the dragged header cell.</description>
      <name>draggedCellStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dragged header cell.</description>
      <name>draggedCellClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Allows customizing transparency effect for the dragged header cell. This should be a floating-point
        number in range 0..1. 0 corresponds to fully opaque display, and 1 corresponds to fully transparent display.
      </description>
      <name>draggedCellTransparency</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.5 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style for for the area that highlights the possible drop target when the user drags a column.
        The usual attributes that should be configured in this style are the "background" and "width" CSS attributes.
      </description>
      <name>dropTargetStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS class name for for the area that highlights the possible drop target when the user drags a
        column. The usual attributes that should be configured in this style are the "background" and "width" CSS
        attributes.
      </description>
      <name>dropTargetClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Image that is displayed above the drop target when column dragging is in progress.</description>
      <name>dropTargetTopImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Image that is displayed below the drop target when column dragging is in progress.</description>
      <name>dropTargetBottomImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style for the header's area that allows scrolling the area for dragging to make all columns
        available for reordering even in scrollable tables.
      </description>
      <name>autoScrollAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS class name for the header's area that allows scrolling the area for dragging to make all columns
        available for reordering even in scrollable tables.
      </description>
      <name>autoScrollAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies the transparency level for the area that allows horizontal scrolling during column
        reordering.
      </description>
      <name>autoScrollAreaTransparency</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.5 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Image that will be displayed in the right auto-scrolling area that appears when reordering columns in
        a scrollable table.
      </description>
      <name>autoScrollRightImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Image that will be displayed in the left auto-scrolling area that appears when reordering columns in
        a scrollable table.
      </description>
      <name>autoScrollLeftImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>A popup menu that can be placed into the "columnMenu" facet of &lt;o:dataTable> or &lt;o:treeTable>
      components to provide standard column operations.
    </description>
    <name>columnMenu</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnMenuJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TwoListSelection component with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.ColumnVisibilityMenu</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table.ColumnVisibilityMenu -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass between user makes mouseover of
        menu item and child popup menu becomes visible.
      </description>
      <name>submenuShowDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 500 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass between user makes mouseout
        of menu item and child popup menu hides.
      </description>
      <name>submenuHideDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 500 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the popup menu component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the popup menu component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the popup menu component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the popup menu component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for menu item of the popup menu component.</description>
      <name>itemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for menu item of the popup menu component.</description>
      <name>itemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for selected menu items of the popup menu component.</description>
      <name>selectedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for selected menu items of the popup menu component.</description>
      <name>selectedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for content of menu items of the popup menu component.</description>
      <name>itemContentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of menu items of the popup menu component.</description>
      <name>itemContentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for indent area of the popup menu component.</description>
      <name>indentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the popup menu component.</description>
      <name>indentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A default style for submenu icon area of menu items of the popup menu component.</description>
      <name>itemSubmenuIconStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for submenu icon area of menu items of the popup menu component.</description>
      <name>itemSubmenuIconClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the popup menu.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the popup menu.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse popup menu.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the popup menu.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the popup menu.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the popup menu.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the popup menu.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the popup menu.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the popup menu.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu shows.</description>
      <name>onshow</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu hides.</description>
      <name>onhide</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass between user makes mouseover of
        menu item and child PopupMenu becomes visible.
      </description>
      <name>submenuShowDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 500 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass between user makes mouseout
        of menu item and child PopupMenu hides.
      </description>
      <name>submenuHideDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 500 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An URL of image which is marker to show user that some menu item has submenu.</description>
      <name>submenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image file that is used for disabled menu items which have submenu.</description>
      <name>disabledSubmenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image file that is used for selected menu items which have submenu.</description>
      <name>selectedSubmenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A default style for submenu icon area of menu items of the PopupMenu component.</description>
      <name>itemSubmenuIconStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for submenu icon area of menu items of the PopupMenu component.</description>
      <name>itemSubmenuIconClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>A popup menu that can be placed inside of the menu specified with DataTable's "columnMenu" facet to
      allow user customize column visibility. This menu displays the list of all columns in the table with the check-box
      against each one.
    </description>
    <name>columnVisibilityMenu</name>
    <tag-class>org.openfaces.taglib.jsp.table.ColumnVisibilityMenuJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TwoListSelection component with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.ColumnVisibilityMenu</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table.ColumnVisibilityMenu -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A style for the popup menu component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the popup menu component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the popup menu component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the popup menu component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for menu item of the popup menu component.</description>
      <name>itemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for menu item of the popup menu component.</description>
      <name>itemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for selected menu items of the popup menu component.</description>
      <name>selectedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for selected menu items of the popup menu component.</description>
      <name>selectedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for content of menu items of the popup menu component.</description>
      <name>itemContentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of menu items of the popup menu component.</description>
      <name>itemContentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for indent area of the popup menu component.</description>
      <name>indentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the popup menu component.</description>
      <name>indentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the popup menu.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the popup menu.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse popup menu.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the popup menu.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the popup menu.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the popup menu.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the popup menu.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the popup menu.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the popup menu.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu shows.</description>
      <name>onshow</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the popup menu hides.</description>
      <name>onhide</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The Row component is used to specify content, style or client-side events for specific rows
      selectively. The attributes and contents specified in this tag are applied to all rows that meet
      the criterion specified in the "condition" attribute. This tag can be specified only as a child tag of
      the {@link dataTable} or {@link treeTable} components. You can only specify the {@link cell} components
      as child tags for the Row component.
    </description>
    <name>row</name>
    <tag-class>org.openfaces.taglib.jsp.table.RowJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The condition that defines the rows customized with this tag. Should be specified as a EL
        expression that uses the request-scope variables those refer to the current row (or current node in TreeTable).
        See DataTable and TreeTable documentation in OpenFaces Developer's Guide for information on these
        variables.
      </description>
      <name>condition</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A style for rows that meet criterion specified in the condition attribute. Can be specified as
        a value-binding expression that uses request-scope variables those refer to the current row.
      </description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for rows that meet criterion specified in the condition attribute. Can be
        specified as a value-binding expression that uses request-scope variables those refer to the current row.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks the left mouse
        button over the row.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks the left
        mouse button over the row.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses any mouse button over the row.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the row.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the row.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the row.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the row.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the row.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the row.</description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the row.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The Cell component is used to specify content, style or client-side events for specific cells
      selectively. This component is also used for merging cells. If the column attribute is not specified, the cells
      are applied in the order they are declared starting from the first column. If there are cells with column
      attributre specified and without the column attribute, cells without column attribute are applied first.
      Child tags of the Cell component are used to render content of the appropriate cells. This tag can be
      specified only as a child tag of the {@link row} component.
    </description>
    <name>cell</name>
    <tag-class>org.openfaces.taglib.jsp.table.CellJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Ids of the columns in which the cells are customized. This attribute is mutually exclusive with the
        condition attribute.
      </description>
      <name>columnIds</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array of java.lang.String -->
      <!-- @bindingType java.util.Collection of java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The condition that determines the columns in which the cells are customized. This condition can use
        the DataTable's request-scope variables those refer to the current cell. This attribute is mutually exclusive
        with the columnIds attribute.
      </description>
      <name>condition</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Number of cells that should be merged. When the cells are merged, the content, styles and events
        from the first of the merged cells is used.
      </description>
      <name>span</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 1 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is applied for the appropriate cells. Can be specified as a value-binding
        expression that uses request-scope variables of the DataTable (or TreeTable) component.
      </description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the appropriate cells. Can be specified as a value-binding
        expression that uses request-scope variables of the DataTable (or TreeTable) component.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks the left mouse
        button over the cell.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks the left
        mouse button over the cell.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses any mouse button over the cell.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the cell.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the cell.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the cell.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the cell.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the row.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the cell.</description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the cell.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The SingleRowSelection component is used for single row selection. Can be specified only as
      a child tag for the {@link dataTable} component.
    </description>
    <name>singleRowSelection</name>
    <tag-class>org.openfaces.taglib.jsp.table.SingleRowSelectionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The index of the selected row. The index of the first row is 0.
        The value "-1" means there is no row currently selected or the selected row
        is not visible because of another page being viewed or filtering applied.
      </description>
      <name>rowIndex</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The row data object for a currently selected row.
        The value "null" means no row is currently selected.
      </description>
      <name>rowData</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the user can change selection.</description>
      <name>enabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a method-binding expression.
        Defining the "action" attribute causes form submission when the user changes selection.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the mouse.</description>
      <name>mouseSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the keyboard.</description>
      <name>keyboardSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected row.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected row.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed every time the user changes selection.</description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The MultipleRowSelection component is used for multiple row selection. Can be specified only as
      a child tag for the {@link dataTable} component.
    </description>
    <name>multipleRowSelection</name>
    <tag-class>org.openfaces.taglib.jsp.table.MultipleRowSelectionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Indexes of the selected rows. The index of the first row is 0.</description>
      <name>rowIndexes</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType list of int -->
      <!-- @bindingType set of int -->
      <!-- @bindingType array of int -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Row data objects for currently selected rows.</description>
      <name>rowDatas</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType list of data objects -->
      <!-- @bindingType set of data objects -->
      <!-- @bindingType array of data objects -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the user can change selection.</description>
      <name>enabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Is similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a method-binding expression.
        Defining the "action" attribute causes form submission when the user changes selection.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the mouse.</description>
      <name>mouseSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the keyboard.</description>
      <name>keyboardSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for selected rows.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for selected rows.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed every time the user changes selection.</description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The SelectionColumn component is used to specify a selection
      column that displays check boxes for multiple-row selection or radio buttons
      for single-row selection. The "selection column" is an alternative way for
      the user to change selection and see which row(s) is selected.
      Can be specified only as a child tag for the {@link dataTable} component.
      In one of the facets can be specified {@link selectAllCheckbox} tag.
    </description>
    <name>selectionColumn</name>
    <tag-class>org.openfaces.taglib.jsp.table.SelectionColumnJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the selectionColumn with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.SelectionColumn</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. SelectionColumn -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;header&quot; facet, or serve for identifying the column name in such components as &lt;o:comopsitefilter&gt;
        or &lt;o:columnVisibilityMenu&gt;.
      </description>
      <name>header</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;footer&quot; facet.
      </description>
      <name>footer</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not this column can be sorted.</description>
      <name>sortable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the column. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the column content.</description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The vertical alignment of the column content.</description>
      <name>valign</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. This attribute can be used to disable
        manual resizing for a particular column.
      </description>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. Specifies the minimum width that this
        column can take when the user resizes this column. It can be specified using any CSS units except percent.
      </description>
      <name>minResizingWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when horizontal scrolling is enabled for a table. Assigning true to this attribute
        "fixes" the column which means that it is excluded from horizontal scrolling and is always visible regardless of
        scroll position.
      </description>
      <name>fixed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire selection column.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire selection column.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the selection column's header.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the selection column's header.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the cell in the sub-header row.</description>
      <name>subHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the cell in the sub-header row.
      </description>
      <name>subHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the selection column's body.</description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the selection column's body.</description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the selection column's footer.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the selection column's footer.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the selection column.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the selection column.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the selection column with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the selection column.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the selection column.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the selection column.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the selection column.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the selection column's header.
      </description>
      <name>headerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        left mouse button over the selection column's header.
      </description>
      <name>headerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the selection column's header with either mouse button.
      </description>
      <name>headerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the selection column's header.
      </description>
      <name>headerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the selection column's header.
      </description>
      <name>headerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the selection column's header.
      </description>
      <name>headerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the selection column's header.
      </description>
      <name>headerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the selection column's body.
      </description>
      <name>bodyOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the selection column's body.
      </description>
      <name>bodyOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the selection column's body with either mouse button.
      </description>
      <name>bodyOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the selection column's body.
      </description>
      <name>bodyOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the selection column's body.
      </description>
      <name>bodyOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the selection column's body.
      </description>
      <name>bodyOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the selection column's body.
      </description>
      <name>bodyOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the selection column's footer.
      </description>
      <name>footerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the selection column's footer.
      </description>
      <name>footerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the selection column's footer with either mouse button.
      </description>
      <name>footerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the selection column's footer.
      </description>
      <name>footerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the selection column's footer.
      </description>
      <name>footerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the selection column's footer.
      </description>
      <name>footerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the selection column's footer.
      </description>
      <name>footerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The CheckboxColumn component is used to specify a checkbox column, which is a special visual component
      that is rendered as a column of check boxes and whose values are not stored in the row's data object.
      You can use it as an alternative of or in addition to multiple selection or to implement complex selection models.
      Can be specified only as a child tag for the {@link dataTable} or {@link treeTable} component.
      In one of the facets can be specified {@link selectAllCheckbox} tag.
    </description>
    <name>checkboxColumn</name>
    <tag-class>org.openfaces.taglib.jsp.table.CheckboxColumnJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the checkboxColumn with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.CheckboxColumn</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. CheckboxColumn -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not this column can be sorted.</description>
      <name>sortable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Indexes of selected rows. The index of the first row is 0.
        The attribute is only effective for the {@link dataTable} component.
      </description>
      <name>rowIndexes</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.util.List of int -->
      <!-- @bindingType java.util.Set of int -->
      <!-- @bindingType array of int -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Row data objects for currently selected rows.</description>
      <name>rowDatas</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.util.List of data Object -->
      <!-- @bindingType java.util.Set of data Object -->
      <!-- @bindingType array of data Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The full path to a currently checked node. The value "null" means that no node is currently checked.
        The attribute is only effective for the {@link treeTable} component.
      </description>
      <name>nodePaths</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.util.List of org.openfaces.component.table. TreePath -->
      <!-- @bindingType java.util.Set of org.openfaces.component.table. TreePath -->
      <!-- @bindingType array of org.openfaces.component.table. TreePath -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The width of the column. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the column content.</description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The vertical alignment of the column content.</description>
      <name>valign</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. This attribute can be used to disable
        manual resizing for a particular column.
      </description>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. Specifies the minimum width that this
        column can take when the user resizes this column. It can be specified using any CSS units except percent.
      </description>
      <name>minResizingWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when horizontal scrolling is enabled for a table. Assigning true to this attribute
        "fixes" the column which means that it is excluded from horizontal scrolling and is always visible regardless of
        scroll position.
      </description>
      <name>fixed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire checkbox column.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire checkbox column.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the checkbox column's header.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the checkbox column's header.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the cell in the sub-header row.</description>
      <name>subHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the cell in the sub-header row.
      </description>
      <name>subHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the checkbox column's body.</description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the checkbox column's body.</description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the checkbox column's footer.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the checkbox column's footer.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the checkbox column.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the checkbox column.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the checkbox column with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the checkbox column.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the checkbox column.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the checkbox column.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the checkbox column.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the checkbox column's header.
      </description>
      <name>headerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the checkbox column's header.
      </description>
      <name>headerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the checkbox column's header with either mouse button.
      </description>
      <name>headerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the checkbox column's header.
      </description>
      <name>headerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the checkbox column's header.
      </description>
      <name>headerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the checkbox column's header.
      </description>
      <name>headerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the checkbox column's header.
      </description>
      <name>headerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the checkbox column's body.
      </description>
      <name>bodyOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the checkbox column's body.
      </description>
      <name>bodyOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the checkbox column's body with either mouse button.
      </description>
      <name>bodyOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the checkbox column's body.
      </description>
      <name>bodyOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the checkbox column's body.
      </description>
      <name>bodyOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the checkbox column's body.
      </description>
      <name>bodyOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the checkbox column's body.
      </description>
      <name>bodyOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the checkbox column's footer.
      </description>
      <name>footerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the checkbox column's footer.
      </description>
      <name>footerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the mouse button
        over the checkbox column's footer.
      </description>
      <name>footerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the checkbox column's footer.
      </description>
      <name>footerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the checkbox column's footer.
      </description>
      <name>footerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the checkbox column's footer.
      </description>
      <name>footerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the checkbox column's footer.
      </description>
      <name>footerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;header&quot; facet, or serve for identifying the column name in such components as &lt;o:comopsitefilter&gt;
        or &lt;o:columnVisibilityMenu&gt;.
      </description>
      <name>header</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;footer&quot; facet.
      </description>
      <name>footer</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The selectAllCheckbox component adds a check box
      to the column header or footer. When the user selects this check box, all the check
      boxes within the column get selected. And if the user clears this check box, all
      the check boxes in the column are cleared too. It should be defined as a child tag for the column's
      ({@link checkboxColumn}, {@link selectionColumn}) "header" or "footer" facets, or both.
    </description>
    <name>selectAllCheckbox</name>
    <tag-class>org.openfaces.taglib.jsp.table.SelectAllCheckboxJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the component with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.SelectAllCheckbox</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. SelectAllCheckbox -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The dataTablePaginator component allows the user to see the current page of the
      table records and jump from it to any other. The component displays the total
      number of pages, the number of the current page, a text field to type in the number
      of the page to go to, and a set of the Previous, Next, First and Last images to navigate
      between the pages. It should be placed within the {@link dataTable} component,
      inside any of its facets.
    </description>
    <name>dataTablePaginator</name>
    <tag-class>org.openfaces.taglib.jsp.table.DataTablePaginatorJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the component with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.DataTablePaginator</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. DataTablePaginator -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DataTablePaginator component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DataTablePaginator component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the DataTablePaginator component
        if all the records provided by the "value" attribute fit into one page.
      </description>
      <name>showIfOnePage</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the total number of pages.</description>
      <name>showPageCount</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that precedes the page number field.</description>
      <name>pageNumberPrefix</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Page" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that separates the text field and the total number of pages.</description>
      <name>pageCountPreposition</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "of" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the First image button.</description>
      <name>firstImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the Last image button.</description>
      <name>lastImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the Previous image button.</description>
      <name>previousImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the Next image button.</description>
      <name>nextImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL to the image file that is used to render a disabled First image button.</description>
      <name>firstDisabledImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render a disabled Last image button.</description>
      <name>lastDisabledImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render a disabled Previous image button.</description>
      <name>previousDisabledImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render a disabled Next image button.</description>
      <name>nextDisabledImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not to show disabled images.</description>
      <name>showDisabledImages</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Text that is displayed in the tooltip for the First image button.</description>
      <name>firstText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Go to first page" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed in the tooltip for the Last image button.</description>
      <name>lastText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Go to last page" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed in the tooltip for the Previous image button.</description>
      <name>previousText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Go to previous page" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is displayed in the tooltip for the Next image button.</description>
      <name>nextText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Go to next page" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the text field for entering a page number.</description>
      <name>pageNumberFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field for entering a page number.</description>
      <name>pageNumberFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- TREE-TABLE-RELATED TAGS DECLARATION -->

  <tag>
    <description>The TreeTable component displays hierarchical data in a tabular format. One of the component's columns
      displays a tree structure in which each row representing a node can be expanded to reveal lower-level rows of
      data. In general, the TreeTable provides most of the functionality of the OpenFaces DataTable component. Child
      tags: {@link treeColumn}, {@link staticTreeStructure}, {@link dynamicTreeStructure}, {@link column},
      {@link selectionColumn}, {@link checkboxColumn}, {@link singleNodeSelection}, {@link multipleNodeSelection},
      {@link cell}, {@link row}, {@link columnResizing}.
    </description>
    <name>treeTable</name>
    <tag-class>org.openfaces.taglib.jsp.table.TreeTableJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TreeTable with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.TreeTable</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. TreeTable -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Defines the state of the TreeTable nodes when the component is loaded.</description>
      <name>expansionState</name>
      <deferred-value>
        <type>org.openfaces.component.table.ExpansionState</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. ExpansionState -->
      <!-- @default "allCollapsed" -->
      <!-- @value "allExpanded" all nodes are displayed in the expanded state -->
      <!-- @value "allCollapsed" all nodes are displayed in the collapsed state -->
      <!-- @value "levelsExpanded:NUMBER" where NUMBER is an integer
    number greater than or equal to zero. It specifies the hierarchy level
    at which the nodes are displayed in the expanded state, while all nodes
    below this level are collapsed. For example, expansionState="levelsExpanded:1"
    means that only the root nodes are expanded. The value of "0" means that no nodes
    are expanded -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The sorting order of the data in the TreeTable component. The "true" value means the table is sorted
        in ascending order.
      </description>
      <name>sortAscending</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>ID of the column by which the TreeTable is sorted.
      </description>
      <name>sortColumnId</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The level at which to perform sorting. The value "-1" means that sorting
        is applied to all levels of the hierarchy. When set to "0" (topmost level)
        or greater, sorting in the TreeTable is restricted to only one specified level.
      </description>
      <name>sortLevel</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -1 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the user can expand and collapse nodes in the TreeTable.
      </description>
      <name>foldingEnabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines whether child nodes of collapsed nodes are preloaded to the client. When a collapsed
        node whose child nodes are preloaded is expanded by the user, these nodes are
        shown immediately without any server request being sent.
      </description>
      <name>preloadedNodes</name>
      <deferred-value>
        <type>org.openfaces.component.table.PreloadedNodes</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. PreloadedNodes -->
      <!-- @default "none" -->
      <!-- @value "none" no children of collapsed nodes are preloaded -->
      <!-- @value "all" all children of collapsed nodes at all levels are
   preloaded. So the entire TreeTable can be browsed without any requests
   to the server -->
      <!-- @value "levelsPreloaded:NUMBER" where NUMBER is a positive integer number.
It specifies the total number of node levels, starting from the top-most
one, in which the nodes are preloaded. For example, preloadedNodes="levelsPreloaded:2"
means that only root nodes and their immediate children are preloaded -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to use Ajax for sorting, filtering and node expansion.
      </description>
      <name>useAjax</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies the delay in milliseconds when the filtering is performed automatically after the user has
        entered some value in an associated filter, or turns off automatic filtering in case -1 is specified as a value
        for this attribute.
      </description>
      <name>autoFilterDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int-->
      <!-- @default 700 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that is displayed instead of "&lt;All&gt;" in the "comboBox" or
        "dropDownField" when filtering is used.
      </description>
      <name>allRecordsFilterText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<All>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that is displayed instead of "&lt;Empty&gt;" in the "comboBox" or
        "dropDownField" when filtering is used.
      </description>
      <name>emptyRecordsFilterText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Empty>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that is displayed instead of "&lt;Non-empty&gt;" in the "comboBox" or
        "dropDownField" when filtering is used.
      </description>
      <name>nonEmptyRecordsFilterText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "<Non-empty>" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The order of columns in the TreeTable component. This attribute should be bound to a list
        containing column IDs for each column in the order you want them to be displayed. If the "columnsOrder"
        attribute is not specified, all the columns are rendered in the order they are defined.
      </description>
      <name>columnsOrder</name>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.List -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>URL to the image file that is used to render the image that displays the ascending sort direction.
      </description>
      <name>sortedAscendingImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image that displays the descending sort direction.
      </description>
      <name>sortedDescendingImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>A style for the sub-header row (usually contains the filter components).</description>
      <name>subHeaderRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the sub-header row (usually contains the filter components).</description>
      <name>subHeaderRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the line that separates the sub-header row.</description>
      <name>subHeaderRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not to apply the default style.</description>
      <name>applyDefaultStyle</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies a numeric value that defines input focus traversing order for this component.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the table content.</description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @value "left" -->
      <!-- @value "center" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The background color behind the table content.</description>
      <name>bgcolor</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The reading order of the table columns and content.</description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ltr" -->
      <!-- @value "ltr" left to right -->
      <!-- @value "rtl" right to left -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies what gridlines are displayed between the cells within the TreeTable.</description>
      <name>rules</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none" -->
      <!-- @value "all" between all rows and columns-->
      <!-- @value "cols" between columns only-->
      <!-- @value "groups" between row groups and column groups only -->
      <!-- @value "none" no grid lines -->
      <!-- @value "rows" between rows only -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the TreeTable component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The number of pixels in the TreeTable border. The value Integer.MIN_VALUE means
        there is no border rendered.
      </description>
      <name>border</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The amount of space between cells in the TreeTable. The value null means
        there is no cell spacing rendered.
      </description>
      <name>cellspacing</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The amount of space between the border of the cell and its content.
        The value null means there is no cell spacing rendered.
      </description>
      <name>cellpadding</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The name of a request-scope variable under which the current row data is available when
        specifying the columns.
      </description>
      <name>var</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of an Integer request-scope variable under which the level number
        of the current node is available, where "0" corresponds to the topmost level.
      </description>
      <name>nodeLevelVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of a request-scope variable under which the full path of a node
        for the current node is available. This variable has the org.openfaces.component.table.TreePath type.
        Instances of the TreePath class are used to reference a node in the tree structure
        by its node value and node values of all its parent nodes.
      </description>
      <name>nodePathVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of a boolean request-scope variable under which the
        flag that indicates whether a node has children is available.
      </description>
      <name>nodeHasChildrenVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of a request-scope variable under which a column
        index is available. It is a zero-based integer number.
      </description>
      <name>columnIndexVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The name of a request-scope variable under which the column id
        is available. It is a string variable that contains the id specified in the corresponding column tag.
      </description>
      <name>columnIdVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>A style for the entire TreeTable component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire TreeTable component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>This attribute should be used instead of the "style" attribute for specifying
        text-related styles (font, color, text-alignment etc.)
        Only the text-related styles can be configured using this attribute.
      </description>
      <name>textStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>This attribute should be used instead of the "styleClass" attribute for specifying
        text-related styles (font, color, text-alignment etc.)
        Only the text-related styles can be configured using this attribute.
      </description>
      <name>textClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TreeTable header section.</description>
      <name>headerSectionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TreeTable header section.</description>
      <name>headerSectionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TreeTable body section.</description>
      <name>bodySectionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TreeTable body section.</description>
      <name>bodySectionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TreeTable footer section.</description>
      <name>footerSectionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TreeTable footer section.</description>
      <name>footerSectionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is applied to the header of a sortable column.</description>
      <name>sortableHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name that is applied to the header of a sortable column.</description>
      <name>sortableHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is applied to the header of a sortable column in the rollover state.</description>
      <name>sortableHeaderRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name that is applied to the header of a sortable column in the rollover state.
      </description>
      <name>sortableHeaderRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for TreeTable rows.</description>
      <name>bodyRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for TreeTable rows.</description>
      <name>bodyRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for TreeTable odd rows, if it should be different from bodyRowStyle.</description>
      <name>bodyOddRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for TreeTable odd rows, if it should be different from bodyRowClass.</description>
      <name>bodyOddRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column header row.</description>
      <name>headerRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column header row.</description>
      <name>headerRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TreeTable header row.</description>
      <name>commonHeaderRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TreeTable header row.</description>
      <name>commonHeaderRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the column footer row.</description>
      <name>footerRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the column footer row.</description>
      <name>footerRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TreeTable footer row.</description>
      <name>commonFooterRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TreeTable footer row.</description>
      <name>commonFooterRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire sorted column.</description>
      <name>sortedColumnStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire sorted column.</description>
      <name>sortedColumnClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a sorted column's header.</description>
      <name>sortedColumnHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a sorted column's header.</description>
      <name>sortedColumnHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a sorted column's body.</description>
      <name>sortedColumnBodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a sorted column's body.</description>
      <name>sortedColumnBodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a sorted column's footer.</description>
      <name>sortedColumnFooterStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a sorted column's footer.</description>
      <name>sortedColumnFooterClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the row that displays a message when there is no data to show.</description>
      <name>noDataRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the row that displays a message when there is no data to show.</description>
      <name>noDataRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show a message when there is no data to show.</description>
      <name>noDataMessageAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for horizontal lines in the TreeTable body. Should be specified as the
        CSS "border" property but without the prefix "border:".
      </description>
      <name>horizontalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #e0e0e0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines in the TreeTable body. Should be specified as the
        CSS "border" property but without the prefix "border:". This attribute can also accept the comma-separated
        list of similarly-formatted gridline styles for specifying separators between different levels of column groups.
        The first item in this list corresponds to separators between the columns, the second one specifies styles for
        separators between group separators, and so on if more separators are required in case of a deeper hierarchy of
        column groups.
      </description>
      <name>verticalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #e0e0e0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the table header from the rest of the table.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>commonHeaderSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the table footer from the rest of the table.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>commonFooterSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the header section from the body section.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>headerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column headers. Should be specified as the
        CSS "border" property but without the prefix "border:". It can also be specified as a list of comma-separated
        gridline styles when column groups are used and group separators should be different from column separators.
        See verticalGridLines attribute for details.
      </description>
      <name>headerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple header rows when column groups are used. It can also be
        specified as a list of comma-separated gridline styles when there are multiple levels of nested column groups.
      </description>
      <name>multiHeaderSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple footer rows when column groups are used. It can also be
        specified as a list of comma-separated gridline styles when there are multiple levels of nested column groups.
      </description>
      <name>multiFooterSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the footer section from the body section.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>footerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column footers. Should be specified as the
        CSS "border" property but without the prefix "border:". It can also be specified as a list of comma-separated
        gridline styles when column groups are used and group separators should be different from column separators.
        See verticalGridLines attribute for details.
      </description>
      <name>footerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "none, 1px solid #a0a0a0" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the nodes that satisfy the filter criteria.</description>
      <name>filterAcceptedRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the nodes that satisfy the filter criteria.</description>
      <name>filterAcceptedRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the nodes that do not satisfy the filter criteria but are needed
        to keep the hierarchy visible.
      </description>
      <name>filterSubsidiaryRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the nodes that do not satisfy the filter criteria
        but are needed to keep the hierarchy visible.
      </description>
      <name>filterSubsidiaryRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the TreeTable component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TreeTable component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a TreeTable row in the rollover state.</description>
      <name>rolloverRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a TreeTable row in the rollover state.</description>
      <name>rolloverRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the TreeTable component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the TreeTable component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the TreeTable.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the TreeTable.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the TreeTable with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the TreeTable.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the TreeTable.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the TreeTable.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the TreeTable.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the TreeTable receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the TreeTable loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the TreeTable.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the TreeTable.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the TreeTable.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This is a hierarchy-aware column that shows hierarchy position
      of the node by identing it and provides controls for expanding/collapsing
      the child nodes. Can be specified only as a child tag for the {@link treeTable}
      component.
    </description>
    <name>treeColumn</name>
    <tag-class>org.openfaces.taglib.jsp.table.TreeColumnJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.TreeColumn</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. TreeColumn -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the column is shown as a tree column.
        This attribute allows you to dynamically change the column appearance so that it looks like
        an ordinary column specified with the {@link column} tag.
      </description>
      <name>showAsTree</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render expansion toggle image for the expanded node.
      </description>
      <name>expandedToggleImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render expansion toggle image for the collapced node.
      </description>
      <name>collapsedToggleImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;header&quot; facet, or serve for identifying the column name in such components as &lt;o:comopsitefilter&gt;
        or &lt;o:columnVisibilityMenu&gt;.
      </description>
      <name>header</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value that can serve as a convenience substitution for specifying &lt;h:outputText&gt; in the
        column's &quot;footer&quot; facet.
      </description>
      <name>footer</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines the row's value that is used during sorting. Is used to make column sortable.</description>
      <name>sortingExpression</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The comparator that is used to compare the values provided by the "sortingExpression" attribute.
      </description>
      <name>sortingComparator</name>
      <deferred-value>
        <type>java.util.Comparator</type>
      </deferred-value>
      <!-- @bindingType java.util.Comparator -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The horizontal offset between the node levels. Can be
        specified in pixels (px), millimeters (mm), em dash (em), etc.
      </description>
      <name>levelIndent</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "16px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the cell that contains expansion toggle (+ and - ) buttons.</description>
      <name>expansionToggleCellStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the cell that contains expansion toggle (+ and - ) buttons.</description>
      <name>expansionToggleCellClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The width of the column. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The alignment of the column content.</description>
      <name>align</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The vertical alignment of the column content.</description>
      <name>valign</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. This attribute can be used to disable
        manual resizing for a particular column.
      </description>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when column resizing is enabled for a table. Specifies the minimum width that this
        column can take when the user resizes this column. It can be specified using any CSS units except percent.
      </description>
      <name>minResizingWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Applicable only when horizontal scrolling is enabled for a table. Assigning true to this attribute
        "fixes" the column which means that it is excluded from horizontal scrolling and is always visible regardless of
        scroll position.
      </description>
      <name>fixed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire tree column.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire tree column.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the tree column's header.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the tree column's header.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the cell in the sub-header row.</description>
      <name>subHederStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the cell in the sub-header row.
      </description>
      <name>subHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the tree column's body.</description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the tree column's body.</description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the tree column's footer.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the tree column's footer.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the tree column.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the tree column.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the tree column with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the tree column.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the tree column.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the tree column.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the tree column.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the tree column's header.
      </description>
      <name>headerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the tree column's header.
      </description>
      <name>headerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the tree column's header with either mouse button.
      </description>
      <name>headerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the tree column's header.
      </description>
      <name>headerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the tree column's header.
      </description>
      <name>headerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the tree column's header.
      </description>
      <name>headerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the tree column's header.
      </description>
      <name>headerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the tree column's body.
      </description>
      <name>bodyOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the tree column's body.
      </description>
      <name>bodyOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the tree column's body with either mouse button.
      </description>
      <name>bodyOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the tree column's body.
      </description>
      <name>bodyOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the tree column's body.
      </description>
      <name>bodyOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the tree column's body.
      </description>
      <name>bodyOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the tree column's body.
      </description>
      <name>bodyOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the tree column's footer.
      </description>
      <name>footerOnclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the tree column's footer.
      </description>
      <name>footerOndblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the tree column's footer with either mouse button.
      </description>
      <name>footerOnmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the tree column's footer.
      </description>
      <name>footerOnmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the tree column's footer.
      </description>
      <name>footerOnmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the tree column's footer.
      </description>
      <name>footerOnmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the tree column's footer.
      </description>
      <name>footerOnmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This tag is used to specify every node in a static tree structure. Can be specified
      only in the {@link staticTreeStructure} tag.
    </description>
    <name>treeNode</name>
    <tag-class>org.openfaces.taglib.jsp.table.TreeNodeJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Specifies the node data object. Can be either a value-binding expression that
        references any object or just a String.
      </description>
      <name>value</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The node key object for this node.</description>
      <name>nodeKey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This tag is used to specify the static structure. You should
      place the staticTreeStructure tag into the {@link treeTable} tag.
      This tag should contain a hierarchy of the {@link treeNode} tags
      for each node.
    </description>
    <name>staticTreeStructure</name>
    <tag-class>org.openfaces.taglib.jsp.table.StaticTreeStructureJspTag</tag-class>
    <body-content>JSP</body-content>

  </tag>

  <tag>
    <description>This tag is used to specify a dynamic tree structure. The hierarchy
      in the dynamic tree structure is defined by specifying the
      expression for retrieving child nodes of a given node. You should
      place the staticTreeStructure tag into the {@link treeTable} tag.
    </description>
    <name>dynamicTreeStructure</name>
    <tag-class>org.openfaces.taglib.jsp.table.DynamicTreeStructureJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The expression for retrieving child nodes of a given node.
        This expression should provide a list of child node data objects for
        the parent node. The parent node whose children should be retrieved
        can be identified through request-scope variables whose
        names are specified with the "var", "nodePathVar", "nodeLevelVar", or "nodeHasChildrenVar"
        attributes of the {@link treeTable} tag.
      </description>
      <name>nodeChildren</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether the node has children or not.
        This information is needed to know whether the expansion toggle button (- and +) should be
        displayed near the node.
      </description>
      <name>nodeHasChildren</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The key node object that must uniquely identify the appropriate node.</description>
      <name>nodeKey</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

  </tag>

  <tag>
    <description>This component is used for single node selection. Can be specified only as
      a child tag for the {@link treeTable} component.
    </description>
    <name>singleNodeSelection</name>
    <tag-class>org.openfaces.taglib.jsp.table.SingleNodeSelectionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The node data object for a currently selected node.
        The value "null" means that no node is currently selected.
      </description>
      <name>nodeData</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The full path to a currently selected node.
        The value "null" means that no node is currently selected.
      </description>
      <name>nodePath</name>
      <deferred-value>
        <type>org.openfaces.component.table.TreePath</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table. TreePath -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the user can change selection.</description>
      <name>enabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a method-binding expression.
        Defining the "action" attribute causes form submission when the user changes selection.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the mouse.</description>
      <name>mouseSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the keyboard.</description>
      <name>keyboardSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected row.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected row.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed every time the user changes selection.</description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The component is used for multiple node selection. Can be specified only as
      a child tag for the {@link treeTable} component.
    </description>
    <name>multipleNodeSelection</name>
    <tag-class>org.openfaces.taglib.jsp.table.MultipleNodeSelectionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The node data objects for a currently selected node.
        The value "null" means that no node is currently selected.
      </description>
      <name>nodeDatas</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.util.List of Object -->
      <!-- @bindingType java.util.Set of Object -->
      <!-- @bindingType array of Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The full path to a currently selected node.
        The value "null" means that no node is currently selected.
      </description>
      <name>nodePaths</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.util.List of org.openfaces.component.table. TreePath -->
      <!-- @bindingType java.util.Set of org.openfaces.component.table. TreePath -->
      <!-- @bindingType array of org.openfaces.component.table. TreePath -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the user can change selection.</description>
      <name>enabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Is similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a method-binding expression.
        Defining the "action" attribute causes form submission when the user changes selection.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the mouse.</description>
      <name>mouseSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not selection can be made with the keyboard.</description>
      <name>keyboardSupport</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for selected rows.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for selected rows.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed every time the user changes selection.</description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- DROP DOWN FIELD TAG DECLARATION -->
  <tag>
    <description>Renders the DropDownField component that represents a text field with a set of
      predefined values in the drop-down list.&lt;br&gt;
      There are two ways to specify items in the drop-down list:
      &lt;ul&gt;
      &lt;li&gt; Use the {@link dropDownItem} child tag to specify each separate item.
      &lt;li&gt; Use the {@link dropDownItems} child tag.
      &lt;/ul&gt;
      These two approaches can be combined in any order.
    </description>
    <name>dropDownField</name>
    <tag-class>org.openfaces.taglib.jsp.input.DropDownFieldJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the DropDownField with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.DropDownField</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. DropDownField -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current value of the DropDownField component that is displayed in the text field.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether it is possible to specify only
        a value that exists in the list of this component's drop-down items ("false"),
        or whether it is possible to enter any value ("true").
      </description>
      <name>customValueAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not valueChangeListener
        should be executed immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during
        the Apply Request Values phase of the request processing lifecycle
        instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>MethodBinding representing a value change listener method that will be notified
        when a new value has been set for this input component. The expression must evaluate to a public
        method that takes a ValueChangeEvent parameter, with a return type of void.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>MethodBinding representing a validator method that will be called during
        Process Validations to perform correctness checks on the value of this component.
        The expression must evaluate to a public method that takes FacesContext, UIComponent,
        and Object parameters, with a return type of void.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Converter instance registered with this component.</description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the DropDownField requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the text field of the DropDownField component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the DropDownField component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The maximum number of characters that can be entered in the DropDownField.
        It is still possible to select any text from the drop-down list no matter how long it is
      </description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The name of a request-scope variable under which the current item
        object is available when specifying child components.
      </description>
      <name>var</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>Specifies whether the field completes incompletely entered text
        as the user types it. The text is completed to the first drop-down item that
        starts with the typed text. The part that was added as a result of auto-completion
        is marked as selected. See also the suggestionMinChars and suggestionDelay
        attributes which define when auto-completion starts.
      </description>
      <name>autoComplete</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether and how the drop-down list with suggestions should
        be shown when typing in the field. Any value except "none" means that suggestions
        are displayed. See also the suggestionMinChars and suggestionDelay attributes which
        define when auto-suggestion starts.
      </description>
      <name>suggestionMode</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. SuggestionMode -->
      <!-- @default "none" -->
      <!-- @value "stringStart" works on the client side. Shows suggestions that begin with the entered value -->
      <!-- @value "substring" works on the client side. Shows suggestions that contain the entered value -->
      <!-- @value "stringEnd" works on the client side. Shows suggestions that end with the entered value -->
      <!-- @value "custom" works on the server side using Ajax. Sends an Ajax request when
entering a value and returns a list of suggestions from the server -->
      <!-- @value "all" works on the client side. Shows all drop-down items in the list of suggestions -->
      <!-- @value "none" suggestion mode is turned off -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The minimal number of characters that should be typed for auto-completion
        and auto-suggestion features to be activated.
      </description>
      <name>suggestionMinChars</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The time period in milliseconds that specifies the delay
        after the last key press that should pass before starting auto-completion
        or auto-suggestion. This delay can be used to avoid too much
        Ajax requests to be sent to the server when the user is typing text,
        and only send one request when the user has stopped typing.
      </description>
      <name>suggestionDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 350 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Defines whether the button that opens the drop-down list is positioned to the right or to
        the left of the text field.
      </description>
      <name>buttonAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "right" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines how items in the drop-down list are aligned.</description>
      <name>listAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "left" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire DropDownField component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire DropDownField component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire DropDownField component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the DropDownField component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the DropDownField component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field.</description>
      <name>fieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the rollover state.</description>
      <name>rolloverFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the disabled state.</description>
      <name>disabledFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button.</description>
      <name>buttonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button in the rollover state.</description>
      <name>rolloverButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button in the disabled state.</description>
      <name>disabledButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down button in the pressed state.</description>
      <name>pressedButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down list.</description>
      <name>listStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down list in the rollover state.</description>
      <name>rolloverListStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a list item.</description>
      <name>listItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a list item in the rollover state.</description>
      <name>rolloverListItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the entire DropDownField component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire DropDownField component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire DropDownField component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field.</description>
      <name>fieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field in the rollover state.</description>
      <name>rolloverFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field in the disabled state.</description>
      <name>disabledFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button.</description>
      <name>buttonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button in the rollover state.</description>
      <name>rolloverButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button in the disabled state.</description>
      <name>disabledButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down button in the pressed state.</description>
      <name>pressedButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down list.</description>
      <name>listClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down list in the rollover state.</description>
      <name>rolloverListClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a list item.</description>
      <name>listItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a list item in the rollover state.</description>
      <name>rolloverListItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for an odd list item, if different from listItemStyle.</description>
      <name>oddListItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for an odd list item, if different from listItemClass.</description>
      <name>oddListItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the header row in the drop-down list.</description>
      <name>listHeaderRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the header row in the drop-down list.</description>
      <name>listHeaderRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the footer row in the drop-down list.</description>
      <name>listFooterRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the footer row in the drop-down list.</description>
      <name>listFooterRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for horizontal lines in the drop-down list.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>horizontalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines in the drop-down list.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>verticalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the header from the drop-down items.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>headerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column headers.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>headerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple header rows when column groups are used.</description>
      <name>multiHeaderSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple footer rows when column groups are used.</description>
      <name>multiFooterSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the footer from the drop-down items.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>footerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column footers.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>footerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>URL of the image file for the drop-down button.</description>
      <name>buttonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image file for the drop-down button in the disabled state.</description>
      <name>disabledButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A time period after which the drop-down list is closed automatically.
        The value "-1" means that the list does not close automatically.
      </description>
      <name>timeout</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -1 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the DropDownField's value has changed.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the drop-down list has opened.
      </description>
      <name>ondropdown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the drop-down list has closed.
      </description>
      <name>oncloseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the DropDownField.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the DropDownField.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the DropDownField.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the DropDownField with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the DropDownField.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the DropDownField.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the DropDownField.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the DropDownField.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the DropDownField receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the DropDownField loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the DropDownField.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the DropDownField.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!--<tag>-->
    <!--<description>An extended version of &lt;f:selectItem> tag that allows using child components. -->
    <!--</description>-->
    <!--<name>selectItem</name>-->
    <!--<tag-class>org.openfaces.taglib.jsp.select.SelectItemJspTag</tag-class>-->
    <!--<body-content>JSP</body-content>-->

    <!--<attribute>-->
      <!--<description>Flag indicating whether or not this component should be rendered (during Render Response Phase),-->
        <!--or processed on any subsequent form submit. The default value for this property is true.-->
      <!--</description>-->
      <!--<name>rendered</name>-->
      <!--<deferred-value>-->
        <!--<type>java.lang.String</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType java.lang.String &ndash;&gt;-->
      <!--&lt;!&ndash; @default false &ndash;&gt;-->
      <!--&lt;!&ndash; @el true &ndash;&gt;-->
    <!--</attribute>-->
    <!--<attribute>-->
      <!--<description>A value-binding expression that associates a list item with a backing bean property.-->
      <!--</description>-->
      <!--<name>binding</name>-->
      <!--<deferred-value>-->
        <!--<type>org.openfaces.component.select.OUISelectItem</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType org.openfaces.component.input. DropDownItem &ndash;&gt;-->
      <!--&lt;!&ndash; @default null &ndash;&gt;-->
      <!--&lt;!&ndash; @el only &ndash;&gt;-->
    <!--</attribute>-->
    <!--<attribute>-->
      <!--<description>The value for a list item. This value is converted to String and-->
        <!--shown in the text field when this item is selected.-->
      <!--</description>-->
      <!--<name>itemValue</name>-->
      <!--<deferred-value>-->
        <!--<type>java.lang.Object</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType Object &ndash;&gt;-->
      <!--&lt;!&ndash; @default null &ndash;&gt;-->
      <!--&lt;!&ndash; @el true &ndash;&gt;-->
    <!--</attribute>-->
    <!--<attribute>-->
      <!--<description>The label of a list item.</description>-->
      <!--<name>itemLabel</name>-->
      <!--<deferred-value>-->
        <!--<type>java.lang.String</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType Object &ndash;&gt;-->
      <!--&lt;!&ndash; @default null &ndash;&gt;-->
      <!--&lt;!&ndash; @el true &ndash;&gt;-->
    <!--</attribute>-->
    <!--<attribute>-->
      <!--<description>The text description of a list item.</description>-->
      <!--<name>itemDescription</name>-->
      <!--<deferred-value>-->
        <!--<type>java.lang.String</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType Object &ndash;&gt;-->
      <!--&lt;!&ndash; @default null &ndash;&gt;-->
      <!--&lt;!&ndash; @el true &ndash;&gt;-->
    <!--</attribute>-->
    <!--<attribute>-->
      <!--<description>Flag indicating whether the option created by this component is disabled.-->
        <!--Expressions must evaluate to a boolean. Default value is false.-->
      <!--</description>-->
      <!--<name>itemDisabled</name>-->
      <!--<deferred-value>-->
        <!--<type>java.lang.Boolean</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType boolean &ndash;&gt;-->
      <!--&lt;!&ndash; @default false &ndash;&gt;-->
      <!--&lt;!&ndash; @el true &ndash;&gt;-->
    <!--</attribute>-->
    <!--<attribute>-->
      <!--<description>A replacement for the itemValue, itemLabel, itemDescription and itemDisabled attributes. You can-->
        <!--this attribute as a value binding that refers to the javax.faces.model.SelectItem instance holding all of the-->
        <!--item's parameters.-->
      <!--</description>-->
      <!--<name>value</name>-->
      <!--<deferred-value>-->
        <!--<type>javax.faces.model.SelectItem</type>-->
      <!--</deferred-value>-->
      <!--&lt;!&ndash; @bindingType Object &ndash;&gt;-->
      <!--&lt;!&ndash; @default null &ndash;&gt;-->
      <!--&lt;!&ndash; @el only &ndash;&gt;-->
    <!--</attribute>-->
  <!--</tag>-->

  <tag>
    <description>A child tag of the {@link dropDownField} or {@link suggestionField} tags
      that is used to specify a separate list item. It is also possible to add child
      components to the o:dropDownItem tag.
    </description>
    <name>dropDownItem</name>
    <tag-class>org.openfaces.taglib.jsp.input.DropDownItemJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A flag that indicates whether or not a list item is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates a list item with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.DropDownItem</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. DropDownItem -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The value for a list item. This value is converted to String and
        shown in the text field when this item is selected.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>A child tag of the {@link dropDownField} or {@link suggestionField} tags
      that is used to specify a list of items.
    </description>
    <name>dropDownItems</name>
    <tag-class>org.openfaces.taglib.jsp.input.DropDownItemsJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>Specifies a set of drop-down items. Can be a value-binding expression that
        references array or collection of any objects or DropDownItem instances.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array of org.openfaces.component.input. DropDownItem -->
      <!-- @bindingType java.util.Collection of org.openfaces.component.input. DropDownItem -->
      <!-- @bindingType array of Object -->
      <!-- @bindingType java.util.Collection of Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

  </tag>

  <!-- SUGGESTION FIELD TAG DECLARATION -->
  <tag>
    <description>Renders the SuggestionField component that represents a text field with a set of
      predefined values in the drop-down list.&lt;br&gt;
      There are two ways to specify items in the drop-down list:
      &lt;ul&gt;
      &lt;li&gt; Use the {@link dropDownItem} child tag to specify each separate item.
      &lt;li&gt; Use the {@link dropDownItems} child tag.
      &lt;/ul&gt;
      These two approaches can be combined in any order.
    </description>
    <name>suggestionField</name>
    <tag-class>org.openfaces.taglib.jsp.input.SuggestionFieldJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the SuggestionField with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.SuggestionField</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. SuggestionField -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The value of the suggestionField component that is displayed in the text field.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the SuggestionField component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.
      </description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the SuggestionField component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the SuggestionField component in characters.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The maximum number of characters that can be entered in the SuggestionField.
        It is still possible to select any text from the drop-down list no matter how long it is
      </description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether it is possible to specify only
        a value that exists in the list of this component's drop-down items ("false"),
        or whether it is possible to enter any value ("true").
      </description>
      <name>customValueAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not valueChangeListener
        should be executed immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during
        the Apply Request Values phase of the request processing lifecycle
        instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the SuggestionField changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the SuggestionField's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the SuggestionField's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the SuggestionField requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The name of a request-scope variable under which the current item
        object is available when specifying child components.
      </description>
      <name>var</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>Specifies whether the field completes incompletely entered
        text as the user types it. The text is completed to the first drop-down
        item that starts with the typed text. The part that was added as a result
        of auto-completion is marked as selected. See also the suggestionMinChars
        and suggestionDelay attributes which define when auto-completion starts.
      </description>
      <name>autoComplete</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true-->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether and how the drop-down list with suggestions should
        be shown when typing in the field. Any value except "none" means that suggestions
        are displayed. See also the suggestionMinChars and suggestionDelay attributes which
        define when auto-suggestion starts.
      </description>
      <name>suggestionMode</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. SuggestionMode -->
      <!-- @default "stringStart" -->
      <!-- @value "stringStart" works on the client side. Shows suggestions that begin with the entered value -->
      <!-- @value "substring" works on the client side. Shows suggestions that contain the entered value -->
      <!-- @value "stringEnd" works on the client side. Shows suggestions that end with the entered value -->
      <!-- @value "custom" works on the server side using Ajax. Sends an Ajax request when
entering a value and returns a list of suggestions from the server -->
      <!-- @value "all" works on the client side. Shows all drop-down items in the list of suggestions -->
      <!-- @value "none" suggestion mode is turned off -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The minimal number of characters that should be typed for auto-completion
        and auto-suggestion features to be activated.
      </description>
      <name>suggestionMinChars</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 2 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The time period in milliseconds that specifies the delay
        after the last key press that should pass before starting auto-completion
        or auto-suggestion. This delay can be used to avoid too much
        Ajax requests to be sent to the server when the user is typing text,
        and only send one request when the user has stopped typing.
      </description>
      <name>suggestionDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 350 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether a drop-down suggestion list can be opened using the "Down Arrow" key.
      </description>
      <name>manualListOpeningAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Defines how items in the drop-down list are aligned.</description>
      <name>listAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "left" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire SuggestionField component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire SuggestionField component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire SuggestionField component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the SuggestionField component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the SuggestionField component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down list.</description>
      <name>listStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the drop-down list in the rollover state.</description>
      <name>rolloverListStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a list item.</description>
      <name>listItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a list item in the rollover state.</description>
      <name>rolloverListItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the entire SuggestionField component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire SuggestionField component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire SuggestionField component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down list.</description>
      <name>listClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the drop-down list in the rollover state.</description>
      <name>rolloverListClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a list item.</description>
      <name>listItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a list item in the rollover state.</description>
      <name>rolloverListItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for an odd list item, if different from listItemStyle.</description>
      <name>oddListItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for an odd list item, if different from listItemClass.</description>
      <name>oddListItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the header row in the drop-down list.</description>
      <name>listHeaderRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the header row in the drop-down list.</description>
      <name>listHeaderRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the footer row in the drop-down list.</description>
      <name>listFooterRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the footer row in the drop-down list.</description>
      <name>listFooterRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for horizontal lines in the drop-down list.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>horizontalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines in the drop-down list.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>verticalGridLines</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the header from the drop-down items.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>headerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column headers.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>headerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple header rows when column groups are used.</description>
      <name>multiHeaderSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates multiple footer rows when column groups are used.</description>
      <name>multiFooterSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a line that separates the footer from the drop-down items.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>footerHorizSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for vertical lines between column footers.
        Should be specified as the CSS "border" property but without the prefix "border:".
      </description>
      <name>footerVertSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>A time period after which the drop-down list is closed automatically.
        The value "-1" means that the list does not close automatically.
      </description>
      <name>timeout</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -1 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the SuggestionField's value has changed.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the drop-down list has opened.
      </description>
      <name>ondropdown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the drop-down list has closed.
      </description>
      <name>oncloseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the SuggestionField.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the SuggestionField.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the SuggestionField.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the SuggestionField with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the SuggestionField.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the SuggestionField.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the SuggestionField.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the SuggestionField.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the SuggestionField receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the SuggestionField loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the SuggestionField.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the SuggestionField.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- POPUP LAYER TAG DECLARATION -->
  <tag>
    <description>The PopupLayer component is used as a container for other components
      that is displayed over the page content as specified by its coordinates.
    </description>
    <name>popupLayer</name>
    <tag-class>org.openfaces.taglib.jsp.window.PopupLayerJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the PopupLayer with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.window.PopupLayer</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. PopupLayer -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The x coordinate of the component's upper-left corner relative to the upper-left corner of the
        document or an absolutely positioned immediate container of the PopupLayer component. Note that the "left"
        attribute should indicate the number of pixels, without the postfix "px".
      </description>
      <name>left</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The y coordinate of the component's upper-left corner relative to the upper-left corner of the
        document or an absolutely positioned immediate container of the PopupLayer component. Note that the "top"
        attribute should indicate the number of pixels, without the postfix "px".
      </description>
      <name>top</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the PopupLayer component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The height of the PopupLayer component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>height</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire PopupLayer component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire PopupLayer component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire PopupLayer component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire PopupLayer component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the visible part of the page which is not covered by a modal PopupLayer.</description>
      <name>modalLayerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the visible part of the page which is not covered by a modal PopupLayer.
      </description>
      <name>modalLayerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the PopupLayer component is visible.</description>
      <name>visible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the PopupLayer component is modal.</description>
      <name>modal</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the PopupLayer component
        is automatically dismissed when the user clicks outside of the component.
      </description>
      <name>hideOnOuterClick</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the PopupLayer component
        is automatically dismissed when the user presses Esc on a modal PopupLayer.
      </description>
      <name>hideOnEsc</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The timeout after which the PopupLayer component is automatically hidden.
        The value "-1" means that the PopupLayer component is not hidden automatically.
      </description>
      <name>hidingTimeout</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -1 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the dragging feature is enabled.</description>
      <name>draggable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user starts dragging the PopupLayer component.
      </description>
      <name>ondragstart</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user stops dragging the PopupLayer component.
      </description>
      <name>ondragend</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupLayer
        component is displayed on the client side.
      </description>
      <name>onshow</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupLayer component is hidden on the client side.
      </description>
      <name>onhide</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the PopupLayer.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the PopupLayer.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the PopupLayer with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the PopupLayer.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the PopupLayer.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the PopupLayer.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the PopupLayer.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the PopupLayer.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the PopupLayer.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the PopupLayer.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupLayer receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupLayer loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- WINDOW TAG DECLARATOIN -->
  <tag>
    <description>The Window component is a window-styled container for other JSF components that is displayed over the
      page content. The Window component has a caption and a content area, it can be dragged around on the page, and
      resized. Besides, it has the usual maximize/restore, minimize and close buttons in the caption.
    </description>
    <name>window</name>
    <tag-class>org.openfaces.taglib.jsp.window.WindowJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the Window with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.window.Window</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. Window -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the user can move the window by dragging its title.
      </description>
      <name>draggable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether the window can be dragged by its content area in addition to the usual
        dragging by window caption. This attribute is only applicable if draggable attribute is set to "true".
      </description>
      <name>draggableByContent</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the Window component is visible.</description>
      <name>visible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the Window component is modal.</description>
      <name>modal</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the visible part of the page which is not covered by the Window component.
      </description>
      <name>modalLayerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the visible part of the page which is not covered by a Window component.
      </description>
      <name>modalLayerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not to close the Window component
        when the user clicks anywhere outside it.
      </description>
      <name>hideOnOuterClick</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the Window component
        is automatically dismissed when the user presses Esc.
      </description>
      <name>hideOnEsc</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>The x coordinate of the component's upper-left corner
        relative to the upper-left corner of the document or an absolutely
        positioned immediate container of the Window component.
        Note that the "left" attribute should indicate the number of pixels,
        without the postfix "px".
      </description>
      <name>left</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The y coordinate of the component's upper-left corner relative to the upper-left corner of the
        document or an absolutely positioned immediate container of the Window component. Note that the "top" attribute
        should indicate the number of pixels, without the postfix "px".
      </description>
      <name>top</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the Window component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "300px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The height of the Window component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>height</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "200px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimal width that the Window component can have when the user is resizing the window. This
        attribute is applicable when "resizable" attribute is set to "true". This attribute can be specified
        in any units (px, mm, em, etc.) except percent.
      </description>
      <name>minWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "150px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimal height that the Window component can have when the user is resizing the window. This
        attribute is applicable when "resizable" attribute is set to "true". This attribute can be specified
        in any units (px, mm, em, etc.) except percent.
      </description>
      <name>minHeight</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "80px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that should be displayed in the caption. This is a convenient alternative for using
        the "caption" facet. If both "caption" facet and "caption" attribute is specified, the content specified in the
        facet is used.
      </description>
      <name>caption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire Window component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Window component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Window component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Window component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the Window title.</description>
      <name>captionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Window title.</description>
      <name>captionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the Window content area.</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Window content area.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the Window
        component is displayed on the client side.
      </description>
      <name>onshow</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the Window component is hidden on the client side.
      </description>
      <name>onhide</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the Window.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the Window.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the Window with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the Window.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the Window.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the Window.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the Window.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the Window.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the Window.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the Window.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This component can be placed inside of components with caption such as Window, Confirmation and
      FoldingPanel to customize the default set and appearance of component's caption buttons.
    </description>
    <name>captionArea</name>
    <tag-class>org.openfaces.taglib.jsp.CaptionAreaJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the CaptionArea with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.CaptionArea</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component. CaptionArea -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Defines whether this area should be placed at caption's right side or caption's left side.
      </description>
      <name>alignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "right" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire CaptionArea component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire CaptionArea component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire CaptionArea component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire CaptionArea component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the CaptionArea.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the CaptionArea.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the CaptionArea with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the CaptionArea.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the CaptionArea.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the CaptionArea.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the CaptionArea.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>This component can be placed inside of the CaptionArea component to add a custom caption button.
    </description>
    <name>captionButton</name>
    <tag-class>org.openfaces.taglib.jsp.CaptionButtonJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the CaptionButton with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.CaptionButton</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component. CaptionButton -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>URL of the image that should be displayed in this CaptionButton.</description>
      <name>imageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when mouse cursor is over the button.
      </description>
      <name>rolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when the mouse is pressed over the button,
        but not released yet.
      </description>
      <name>pressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when mouse cursor hovers over this button.</description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component. It can be defined as a
        MethodBinding that should point to an action method that is called when the user clicks this button.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user invokes this action.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire CaptionButton component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire CaptionButton component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire CaptionButton component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire CaptionButton component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire CaptionButton component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire CaptionButton component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the CaptionButton.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the CaptionButton.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        CaptionButton with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the CaptionButton.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the CaptionButton.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the CaptionButton.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the CaptionButton.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This component can be placed inside of the CaptionArea component (which is in turn located in
      FoldingPanel component) to customize the appearance of FoldingPanel's expansion toggle caption button.
    </description>
    <name>expansionToggleButton</name>
    <tag-class>org.openfaces.taglib.jsp.ExpansionToggleButtonJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the MaximizeWindowButton with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.ExpansionToggleButton</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component. ExpansionToggleButton -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Text for a tooltip that appears when mouse cursor hovers over this button.</description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the button's image when a container is collapsed.</description>
      <name>collapsedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the button's image when a container is collapsed and mouse cursor is over the button.
      </description>
      <name>collapsedRolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the button's image when a container is collapsed and the mouse is pressed over the button, but
        not released yet.
      </description>
      <name>collapsedPressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the button's image when a container is expanded.</description>
      <name>expandedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the button's image when a container is expanded and mouse cursor is over the button.
      </description>
      <name>expandedRolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the button's image when a container is collapsed and the mouse is pressed over the button, but
        not released yet.
      </description>
      <name>expandedPressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the button.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the button.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the button.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the button.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the button.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the button.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This component can be placed inside of the CaptionArea component to specify the caption button that
      allows closing the window.
    </description>
    <name>closeWindowButton</name>
    <tag-class>org.openfaces.taglib.jsp.window.CloseWindowButtonJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the CloseWindowButton with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.window.CloseWindowButton</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. CloseWindowButton -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Text for a tooltip that appears when mouse cursor hovers over this button.</description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image that should be displayed in this button.</description>
      <name>imageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when mouse cursor is over the button.
      </description>
      <name>rolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when the mouse is pressed over the button,
        but not released yet.
      </description>
      <name>pressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the button.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the button.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the button.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the button.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the button.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the button.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This component can be placed inside of the CaptionArea component to specify the caption button that
      allows maximizing the window.
    </description>
    <name>maximizeWindowButton</name>
    <tag-class>org.openfaces.taglib.jsp.window.MaximizeWindowButtonJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the MaximizeWindowButton with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.window.MaximizeWindowButton</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. MaximizeWindowButton -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Text for a tooltip that appears when mouse cursor hovers over this button.</description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image that should be displayed in this button when a window is in normal state.
      </description>
      <name>maximizeImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when mouse cursor is over the button,
        and a window is in normal state.
      </description>
      <name>maximizeRolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when the mouse is pressed over the button,
        but not released yet, and a window is in normal state.
      </description>
      <name>maximizePressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image that should be displayed in this button when the button is toggled.</description>
      <name>restoreImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when mouse cursor is over the button.
      </description>
      <name>restoreRolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when the button is in a toggled state and
        the mouse is pressed over the button, but not released yet.
      </description>
      <name>restorePressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the button.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the button.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the button.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the button.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the button.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the button.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>This component can be placed inside of the CaptionArea component to specify the caption button that
      allows minimizing the window.
    </description>
    <name>minimizeWindowButton</name>
    <tag-class>org.openfaces.taglib.jsp.window.MinimizeWindowButtonJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the MinimizeWindowButton with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.window.MinimizeWindowButton</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. MinimizeWindowButton -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Text for a tooltip that appears when mouse cursor hovers over this button.</description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image that should be displayed in this button when a window is in normal state.
      </description>
      <name>minimizeImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when mouse cursor is over the button,
        and a window is in normal state.
      </description>
      <name>minimizeRolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when the mouse is pressed over the button,
        but not released yet, and a window is in normal state.
      </description>
      <name>minimizePressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image that should be displayed in this button when the button is toggled.</description>
      <name>restoreImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when mouse cursor is over the button.
      </description>
      <name>restoreRolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image that should be displayed in this button when the button is in a toggled state and
        the mouse is pressed over the button, but not released yet.
      </description>
      <name>restorePressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the button.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the button.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the button.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the button.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the button.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the button.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- AJAXSETTINGS TAG DECLARATION -->
  <tag>
    <description>The AjaxSettings component is used for handling session expiration, customizing the progress message
      and defining Ajax related events. The {@link defaultProgressMessage}, {@link defaultSessionExpiration} and
      {@link silentSessionExpiration} components can be specified in the corresponding facets of the AjaxSettings
      component.
    </description>
    <name>ajaxSettings</name>
    <tag-class>org.openfaces.taglib.jsp.ajax.AjaxSettingsJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>JavaScript code that should be executed on the client when an error occurs
        while performing an Ajax request.
      </description>
      <name>onerror</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the current session is expired.
      </description>
      <name>onsessionexpired</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an Ajax request is started.
      </description>
      <name>onajaxstart</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an Ajax request is completed.
      </description>
      <name>onajaxend</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The DefaultProgressMessage component is used for customizing the progress message that appears
      when an Ajax request is in progress. Should be specified in the "progressMessage" facet of the AjaxSettings
      component.
    </description>
    <name>defaultProgressMessage</name>
    <tag-class>org.openfaces.taglib.jsp.ajax.DefaultProgressMessageJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Text for the progress message.</description>
      <name>text</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL of the image file that is rendered before text in the progress message.</description>
      <name>imageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the progress message.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class that is used for the progress message.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines the horizontal position in browser&apos;s window where the Ajax progress message should be
        shown.
      </description>
      <name>horizontalAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.HorizontalAlignment -->
      <!-- @default "right" -->
      <!-- @value "left" displays the progress message by the left side of a browser window -->
      <!-- @value "center" centers the progress message horizontally within browser's window -->
      <!-- @value "right" displays the progress message by the right side of a browser window -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines the horizontal position in browser&apos;s window where the Ajax progress message should be
        shown.
      </description>
      <name>verticalAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.VerticalAlignment -->
      <!-- @default "top" -->
      <!-- @value "top" displays the progress message by the top side of a browser window -->
      <!-- @value "center" centers the progress message vertically within browser's window -->
      <!-- @value "bottom" displays the progress message by the bottom side of a browser window -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies the transparency level in range [0..1] for the Ajax progress message.</description>
      <name>transparency</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies time in milliseconds that will elapse until Ajax progress message transparency gradually
        gains its full value (as specified by the &quot;transparency&quot; attribute).
      </description>
      <name>transparencyTransitionPeriod</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Setting this attribute to true allows shading the browser window while the Ajax is in progress, which
        makes it impossible to click any component until the Ajax request finishes.
      </description>
      <name>fillBackground</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies the transparency level in range [0..1] for the background layer of the Ajax progress
        message. Applicable only when fillBackground attribute is set to true.
      </description>
      <name>backgroundTransparency</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.6 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies time in milliseconds that will elapse until transparency of the background layer gradually
        gains its full value (as specified by the &quot;backgroundTransparency&quot; attribute). Applicable only when
        &quot;fillBackground&quot; attribute is set to true.
      </description>
      <name>backgroundTransparencyTransitionPeriod</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 150 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style for a background layer of Ajax progress message. Applicable only when
        &quot;fillBackground&quot; attribute is set to true.
      </description>
      <name>backgroundStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS class name for a background layer of Ajax progress message. Applicable only when &quot;fillBackground&quot;
        attribute is set to true.
      </description>
      <name>backgroundClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>If the DefaultSessionExpiration component is used, the confirmation that asks the user to reload
      the page appears when the current session is expired. This tag should be specified in the "sessionExpiration"
      facet
      of the AjaxSettings component. You can customize the session expiration confirmation by placing the
      &lt;o:confirmation> tag into the "confirmation" facet of the &lt;defaultSessionExpiration> tag and configuring its
      attributes appropriately.
    </description>
    <name>defaultSessionExpiration</name>
    <tag-class>org.openfaces.taglib.jsp.ajax.DefaultSessionExpirationJspTag</tag-class>
    <body-content>JSP</body-content>
  </tag>

  <tag>
    <description>If the SilentSessionExpiration component is used, the page is reloaded when the current
      session is expired. Should be specified in the "sessionExpiration" facet of the AjaxSettings component.
    </description>
    <name>silentSessionExpiration</name>
    <tag-class>org.openfaces.taglib.jsp.ajax.SilentSessionExpirationJspTag</tag-class>
    <body-content>JSP</body-content>
  </tag>

  <!-- FOCUSTRACKER TAG DECLARATION -->

  <tag>
    <description>Focus is a non-visual component that controls the focus on the page.
      You can specify the component in focus when the page is loaded and also save the focus between page submissions.
      Note that there can be only one Focus component on the page.
    </description>
    <name>focus</name>
    <tag-class>org.openfaces.taglib.jsp.util.FocusJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A value-binding expression that associates the Focus component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.util.Focus</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util. Focus -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>ID of the component that is in focus when the page is loaded. The "focusedComponentId" attribute
        should be defined in the same way as the "for" property of the standard HTMLOutputLabel component.
      </description>
      <name>focusedComponentId</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the focus is saved between page submissions.</description>
      <name>autoSaveFocus</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- SCROLLPOSTRACKER TAG DECLARATION -->

  <tag>
    <description>ScrollPosition is a non-visual component that controls the scroll position of the page. You can specify
      the scroll position when the page is loaded and also save the scroll position between page submissions.
      Note that there can be only one ScrollPosition component on the page.
    </description>
    <name>scrollPosition</name>
    <tag-class>org.openfaces.taglib.jsp.util.ScrollPositionJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A value-binding expression that associates the ScrollPosition component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.util.ScrollPosition</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util. ScrollPosition -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The position of the scroll when the page is loaded. In this attribute, you should
        specify the coordinates of the top left corner of a page's visible area.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.awt.Point -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the scroll position is saved between page submissions.
      </description>
      <name>autoSaveScrollPos</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An id of the scrollable component. If specified - the scroll position of the scrollable component
        will
        be saved, otherwise the scroll position of the page will be saved.
      </description>
      <name>for</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>


  <!-- CONFIRMATION TAG DECLARATION -->
  <tag>
    <description>The Confirmation component is a DHTML modal window containing a main instruction
      and two buttons using which the user can confirm or reject execution of some operation.
    </description>
    <name>confirmation</name>
    <tag-class>org.openfaces.taglib.jsp.window.ConfirmationJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the Confirmation component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.window.Confirmation</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. Confirmation -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>ID of the JSF component or of any HTML element whose event is listened to. It should be defined in
        the same way as the "for" property of the standard HTMLOutputLabel component.
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The name of a JavaScript function or event that should be confirmed before execution.</description>
      <name>event</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Turns on the "standalone" mode where the Confirmation is not attached to other component
        automatically,
        and can be used via the public API instead. The default value is false, which means that the component is
        attached
        to the parent component, or a component referred to by the "for" attribute if it is specified.
      </description>
      <name>standalone</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Defines which of the two buttons has focus when the Confirmation component opens.</description>
      <name>defaultButton</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.window. ButtonType -->
      <!-- @default "ok" -->
      <!-- @value "ok" the "OK" button is focused when the Confirmation is opened -->
      <!-- @value "cancel" the "Cancel" button is focused when the Confirmation is opened -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The main instruction text.</description>
      <name>message</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Confirm your action" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The supplementary text following the main instruction.</description>
      <name>details</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Press OK to perform the action" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the OK button.</description>
      <name>okButtonText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "OK" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the Cancel button.</description>
      <name>cancelButtonText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Cancel" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image file that is used to render the iconto the left of the main instruction.
      </description>
      <name>messageIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the icon to the left of the main instruction.
      </description>
      <name>showMessageIcon</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the user can move the confirmation window by dragging its title.
      </description>
      <name>draggable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether the confirmation window can be dragged by its content area in addition
        to the usual dragging by window caption. This attribute is only applicable if draggable attribute is set to
        "true".
      </description>
      <name>draggableByContent</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The x coordinate of the component's upper-left corner relative to the upper-left corner of
        the document or an absolutely positioned immediate container of the Confirmation component.
        Note that the "left" attribute should indicate the number of pixels, without the postfix "px".
      </description>
      <name>left</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The y coordinate of the component's upper-left corner relative to the upper-left corner of
        the document or an absolutely positioned immediate container of the Confirmation component
        Note that the "top" attribute should indicate the number of pixels, without the postfix "px".
      </description>
      <name>top</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the Confirmation component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "275 px" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The height of the Confirmation component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>height</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Confirmation component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Confirmation component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Confirmation component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Confirmation component.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the area where the icon is located.</description>
      <name>iconAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the area where the icon in the rollover state is located.</description>
      <name>rolloverIconAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the area where the instructions are located.</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the area where the instructions in the rollover state are located.</description>
      <name>rolloverContentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the main instruction.</description>
      <name>messageStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the main instruction in the rollover state.</description>
      <name>rolloverMessageStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the supplementary text.</description>
      <name>detailsStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the supplementary text in the rollover state.</description>
      <name>rolloverDetailsStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the area where the buttons are located.</description>
      <name>buttonAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the area where the buttons in the rollover state are located.</description>
      <name>rolloverButtonAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the OK button.</description>
      <name>okButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the OK button in the rollover state.</description>
      <name>rolloverOkButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the Cancel button.</description>
      <name>cancelButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the Cancel button in the rollover state.</description>
      <name>rolloverCancelButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the visible part of the page which is not covered by the Confirmation component.
      </description>
      <name>modalLayerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the area where the icon is located.</description>
      <name>iconAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the area where the icon in the rollover state is located.</description>
      <name>rolloverIconAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the area where the instructions are located.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the area where the instructions in the rollover state are located.</description>
      <name>rolloverContentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the main instruction.</description>
      <name>messageClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the main instruction in the rollover state.</description>
      <name>rolloverMessageClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the supplementary text.</description>
      <name>detailsClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the supplementary text in the rollover state.</description>
      <name>rolloverDetailsClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the area where the buttons are located.</description>
      <name>buttonAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the area where the buttons in the rollover state are located.</description>
      <name>rolloverButtonAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the OK button.</description>
      <name>okButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the OK button in the rollover state.</description>
      <name>rolloverOkButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Cancel button.</description>
      <name>cancelButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Cancel button in the rollover state.</description>
      <name>rolloverCancelButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the visible part of the page which is not covered by a Confirmation.
      </description>
      <name>modalLayerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The text that should be displayed in the caption. This is a convenient alternative for using
        the "caption" facet. If both "caption" facet and "caption" attribute is specified, the content specified in the
        facet is used.
      </description>
      <name>caption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the Confirmation title.</description>
      <name>captionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Confirmation title.</description>
      <name>captionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not to close the Confirmation component
        when the user clicks anywhere outside it.
      </description>
      <name>hideOnOuterClick</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the Confirmation component
        is automatically dismissed when the user presses Esc.
      </description>
      <name>hideOnEsc</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not to align the Confirmation component
        with the component that calls it. If the Confirmation is aligned with the component
        it was called from, it is displayed right under this component.
      </description>
      <name>alignToInvoker</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the Confirmation.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the Confirmation.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the Confirmation with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the Confirmation.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the Confirmation.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the Confirmation.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the Confirmation.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the Confirmation.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the Confirmation.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the Confirmation.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- HintLabel TAG DECLARATION -->
  <tag>
    <description>The HintLabel component displays single-line text
      which, if it doesn't fit in the allotted space, is displayed fully in a tooltip.
    </description>
    <name>hintLabel</name>
    <tag-class>org.openfaces.taglib.jsp.output.HintLabelJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the HintLabel component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.output.HintLabel</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.output. HintLabel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the HintLabel's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Text for the tooltip, if it should be different from the "value" attribute.</description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The amount of time between when the mouse pointer is placed over the HintLabel component and when the
        component is actually displayed. The "hintTimeout" attribute should be specified in milliseconds.
      </description>
      <name>hintTimeout</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 100 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not HTML or XML characters are escaped
        (displayed literally in a browser).
      </description>
      <name>escape</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire HintLabel component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire HintLabel component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the HintLabel component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the HintLabel component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the tooltip.</description>
      <name>hintStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the tooltip.</description>
      <name>hintClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text to be displayed in the component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the HintLabel.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the HintLabel.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the HintLabel with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the HintLabel.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        over the HintLabel.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the HintLabel.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the HintLabel.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- TABSET TAG DECLARATION -->
  <tag>
    <description>The TabSet component provides a set of tabs enabling the user to
      switch between different components, one at a time. Child tags:
      {@link tabSetItem}, {@link tabSetItems}.
    </description>
    <name>tabSet</name>
    <tag-class>org.openfaces.taglib.jsp.select.TabSetJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TabSet component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.select.TabSet</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select. TabSet -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Enables handling of tab selection change on the server side. This attribute is a MethodBinding that
        must point to the method that accepts a org.openfaces.event.SelectionChangeEvent.
      </description>
      <name>selectionChangeListener</name>
      <deferred-method>
        <method-signature>void selectionChange(org.openfaces.event.SelectionChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the TabSet changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The server-side value of a selected tab.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the TabSet's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the valueChangeListener should be executed immediately (during
        the Apply Request Values phase of the request processing lifecycle instead of Process Validations phase) and
        the component's input should be converted and validated immediately (during the Apply Request Values phase of
        the request processing lifecycle instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The index of a currently selected tab. The value "0" means that the first tab is selected.
      </description>
      <name>selectedIndex</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies whether this component can have input focus for keyboard control.</description>
      <name>focusable</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
      <!-- @bindingType java.lang.Boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire TabSet component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TabSet component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the focused area of TabSet component.</description>
      <name>focusAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the focused area of TabSet component.</description>
      <name>focusAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A focused style for the TabSet component.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A focused class for the TabSet component.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The interval between the tabs specified in pixels.</description>
      <name>gapWidth</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 2 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A border style for a selected tab and the TabSet component.</description>
      <name>frontBorderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A border style for non-selected tabs.</description>
      <name>backBorderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for each tab.</description>
      <name>tabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for each tab in the rollover state.</description>
      <name>rolloverTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected tab.</description>
      <name>selectedTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a focused tab.</description>
      <name>focusedTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected tab in the rollover state.</description>
      <name>rolloverSelectedTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the spaces before, after, and between the tabs.</description>
      <name>emptySpaceStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for each tab.</description>
      <name>tabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for each tab in the rollover state.</description>
      <name>rolloverTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected tab.</description>
      <name>selectedTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a focused tab.</description>
      <name>focusedTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected tab in the rollover state.</description>
      <name>rolloverSelectedTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the spaces before, after, and between the tabs.</description>
      <name>emptySpaceClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The alignment of the tabs.</description>
      <name>alignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select. TabAlignment -->
      <!-- @default "topOrLeft" -->
      <!-- @value "topOrLeft" -->
      <!-- @value "bottomOrRight" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The position of the tabs relative to the components they switch.</description>
      <name>placement</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select. TabPlacement -->
      <!-- @default "top" -->
      <!-- @value "top" -->
      <!-- @value "bottom" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when a tab is changed.</description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the TabSet.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the TabSet.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the TabSet with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the TabSet.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the TabSet.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the TabSet.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the TabSet.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>This tag is used to define a fixed set of tabs. Child components of the tabSetItem tag are rendered as
      the tab contents. This tag should be specified only in the {@link tabSet} tag.
    </description>
    <name>tabSetItem</name>
    <tag-class>org.openfaces.taglib.jsp.select.TabSetItemJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The server-side value of the TabSet item.</description>
      <name>itemValue</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang. Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not this tab is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>This tag is used to dynamically change the set of tabs. It should
      be specified only inside the {@link tabSet} tag.
    </description>
    <name>tabSetItems</name>
    <tag-class>org.openfaces.taglib.jsp.select.TabSetItemsJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>This attribute should be specified as a value-binding expression
        that references a list of tab items.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.List of TabSetItem component -->
      <!-- @bindingType java.lang.List of JSF component -->
      <!-- @bindingType java.lang.List of Object  -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <!-- TABBED PANE TAG DECLARATION -->
  <tag>
    <description>The TabbedPane component allows you to present related information on separate pages and can be viewed
      by users by clicking a corresponding tab. Each page of the TabbedPane component can contain a number of other
      JSF components. Child tags: {@link subPanel}, {@link subPanels}.
    </description>
    <name>tabbedPane</name>
    <tag-class>org.openfaces.taglib.jsp.panel.TabbedPaneJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TabbedPane component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.panel.TabbedPane</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.panel. TabbedPane -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the selectionChangeListener
        should be executed immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire TabbedPane component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire TabbedPane component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TabbedPane component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TabbedPane component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the focus area of TabbedPane component.</description>
      <name>focusAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies whether this component can have input focus for keyboard control.</description>
      <name>focusable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the focus area TabbedPane component.</description>
      <name>focusAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A focused style for the TabbedPane component.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A focused class for the TabbedPane component.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TabbedPane pages.</description>
      <name>containerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TabbedPane pages.</description>
      <name>containerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TabbedPane pages in the rollover state.</description>
      <name>rolloverContainerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TabbedPane pages in the rollover state.</description>
      <name>rolloverContainerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The index of a currently selected tab. The value "0" means that the first tab is selected.
      </description>
      <name>selectedIndex</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The interval between the tabs specified in pixels.</description>
      <name>tabGapWidth</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 2 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The edge along which the tabs are aligned.</description>
      <name>tabAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select. TabAlignment -->
      <!-- @default "topOrLeft" -->
      <!-- @value "topOrLeft" -->
      <!-- @value "bottomOrRight" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The position of the tabs.</description>
      <name>tabPlacement</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select. TabPlacement -->
      <!-- @default "top" -->
      <!-- @value "top" -->
      <!-- @value "bottom" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style applied to each individual tab.</description>
      <name>tabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style applied to each individual tab in the rollover state.</description>
      <name>rolloverTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected tab.</description>
      <name>selectedTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a focused tab.</description>
      <name>focusedTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected tab in the rollover state.</description>
      <name>rolloverSelectedTabStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A border style for the TabbedPane component and a selected tab.</description>
      <name>frontBorderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A border style for non-selected tabs.</description>
      <name>backBorderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style applied to the spaces before, after, and between the tabs.</description>
      <name>tabEmptySpaceStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for each individual tab.</description>
      <name>tabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>>A CSS class name for each individual tab in the rollover state.</description>
      <name>rolloverTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected tab.</description>
      <name>selectedTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a focused tab.</description>
      <name>focusedTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected tab in the rollover state.</description>
      <name>rolloverSelectedTabClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for spaces before, after, and between the tabs.</description>
      <name>tabEmptySpaceClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The way the data in the TabbedPane component is loaded.</description>
      <name>loadingMode</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util. LoadingMode -->
      <!-- @default "ajaxLazy" -->
      <!-- @value "client" The content of all tabs is loaded to the client side
on the first page load. So when the user changes a tab, the corresponding page is not reloaded. -->
      <!-- @value "ajaxLazy"  The tab content is retrieved from the server with Ajax request
on the first switch to the tab. Once requested, the content is stored on the client and is shown without additional
server requests. -->
      <!-- @value "ajaxAlways"  The tab content is retrieved from the server with Ajax request
on every switch to the tab.-->
      <!-- @value "server"  Every time a tab is changed, a corresponding tabbed page is reloaded with the tab content. -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when a tab is changed.</description>
      <name>onselectionchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Enables handling of tab selection on the server side. This attribute is MethodBinding that must point
        to the method that accepts a org.openfaces.event.SelectionChangeEvent.
      </description>
      <name>selectionChangeListener</name>
      <deferred-method>
        <method-signature>void selectionChangeListener(org.openfaces.event.SelectionChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the TabbedPane.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the TabbedPane.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the TabbedPane with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the TabbedPane.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the TabbedPane.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the TabbedPane.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the TabbedPane.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key down over the TabbedPane.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the TabbedPane.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the TabbedPane.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when onfocus event bubbles up from some of TabbedPane's child
        component.
      </description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when onblur event bubbles up from some of TabbedPane's child
        component.
      </description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The SubPanel tag is used to specify a page in multi-page components such as TabbedPane. You can specify
      the content to be displayed in the panel's caption (e.g. the appropriate tab in TabbedPane) using the "caption"
      facet. The components that define the page content should be added as children of the SubPanel tag.
    </description>
    <name>subPanel</name>
    <tag-class>org.openfaces.taglib.jsp.panel.SubPanelJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the appropriate tab in the TabbedPane is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the SubPanel with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.panel.SubPanel</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.panel. SubPanel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The text that should be displayed in the caption. This is a convenient alternative for using
        the "caption" facet. If both "caption" facet and "caption" attribute is specified, the content specified in the
        facet is used.
      </description>
      <name>caption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The SubPanels tag is used to retrieve dynamically changing data
      from a backing bean. This tag should be specified only in the {@link tabbedPane} tag.
    </description>
    <name>subPanels</name>
    <tag-class>org.openfaces.taglib.jsp.panel.SubPanelsJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>This attribute should be specified as a value-binding expression
        that references a collection of org.openfaces.component.panel.SubPanel objects.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType collection of org.openfaces.component.panel. SubPanel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <!-- FOLDING PANEL TAG DECLARATION -->
  <tag>
    <description>The FoldingPanel component is a container for other components that can be collapsed or expanded by
      the user. It consists of a bar displaying the caption, an expandable/collapsible container, and a toggle button to
      switch between the two states.
    </description>
    <name>foldingPanel</name>
    <tag-class>org.openfaces.taglib.jsp.panel.FoldingPanelJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the FoldingPanel component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.panel.FoldingPanel</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.panel. FoldingPanel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates the state of the FoldingPanel component. The value "true"
        means that the FoldingPanel is expanded.
      </description>
      <name>expanded</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies whether this component can have input focus for keyboard control.</description>
      <name>focusable</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
      <!-- @bindingType java.lang.Boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that should be displayed in the caption. This is a convenient alternative for using
        the "caption" facet. If both "caption" facet and "caption" attribute is specified, the content specified in the
        facet is used.
      </description>
      <name>caption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire FoldingPanel component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire FoldingPanel component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire FoldingPanel component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire FoldingPanel component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the FoldingPanel's caption.</description>
      <name>captionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the FoldingPanel's caption.</description>
      <name>captionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the focused FoldingPanel.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the focused FoldingPanel.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the caption of FoldingPanel's focused container.</description>
      <name>focusedCaptionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the caption of FoldingPanel's focused container.</description>
      <name>focusedCaptionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the content of FoldingPanel's focused container.</description>
      <name>focusedContentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the content of FoldingPanel's focused container.</description>
      <name>focusedContentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the FoldingPanel's container.</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the FoldingPanel's container.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when
        the FoldingPanel's state is changed, i.e. when it is collapsed or expanded by the user.
      </description>
      <name>onstatechange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The direction where the FoldingPanel is expanded.</description>
      <name>foldingDirection</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.panel. FoldingDirection -->
      <!-- @default "down" -->
      <!-- @value "up" -->
      <!-- @value "down" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>

    <!-- common client-side events declaration -->
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the FoldingPanel.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the FoldingPanel.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the FoldingPanel with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the FoldingPanel.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the FoldingPanel.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the
        FoldingPanel.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the FoldingPanel.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the FoldingPanel receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the FoldingPanel loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the FoldingPanel.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the FoldingPanel.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the FoldingPanel.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The way the child components in the FoldingPanel component are loaded.</description>
      <name>loadingMode</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util. LoadingMode -->
      <!-- @default "ajaxLazy" -->
      <!-- @value "client"  the FoldingPanel component renders all content on first load regardless
 of the component's expanded state. -->
      <!-- @value "ajaxLazy"  expanding the FoldingPanel makes the embedded content to be loaded from the server with
      Ajax request. Once loaded, it will be cached on the client and shown without additional server requests on further expansions.
       -->
      <!-- @value "ajaxAlways"  expanding the FoldingPanel makes the embedded content to be loaded from the server with
      Ajax request. Unlike ajaxLazy mode, ajaxAlways doesn't cache the loaded content and reloads the content each time
      the FoldingPanel is expanded.  -->
      <!-- @value "server"  the FoldingPanel component submits the page to re-render itself in the expanded state. -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- TWO LIST SELECTION TAG DECLARATION -->
  <tag>
    <description>The TwoListSelection component serves the same purpose as the standard HtmlSelectManyListbox in JSF,
      but has a different appearance and provides a number of extra features. It consists of two list boxes separated
      by a set of buttons that let the user move selected items from one list to the other and reorder the selected
      items. The list on the left contains available items which the user can add to (or from) the list
      on the right in order to make a selection.
    </description>
    <name>twoListSelection</name>
    <tag-class>org.openfaces.taglib.jsp.select.TwoListSelectionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TwoListSelection component with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.select.TwoListSelection</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select. TwoListSelection -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the TwoListSelection's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the TwoListSelection's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the TwoListSelection requires a value.
      </description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the TwoListSelection changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the valueChangeListener should be executed immediately (during
        the Apply Request Values phase of the request processing lifecycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A list of selected items in the TwoListSelection.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType list of Object -->
      <!-- @bindingType array of Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Text for the header of the left list.</description>
      <name>leftListboxHeader</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the header of the right list.</description>
      <name>rightListboxHeader</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The maximum number of items to be displayed at a time in the lists.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 10 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.
      </description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not sorting is enabled. Sorting is allowed only in the right list.
        This attribute makes sense only if the text to be displayed in the header of the right list is specified.
      </description>
      <name>sortingAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the ordering feature is enabled.
        Ordering is allowed only in the right list.
      </description>
      <name>reorderingAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an item(s) is added to the selected list.
      </description>
      <name>onadd</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an item(s)
        is removed from the selected list.
      </description>
      <name>onremove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an item(s)
        is added or removed to/from the selected list.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the TwoListSelection.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the TwoListSelection.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the TwoListSelection with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the
        TwoListSelection.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the
        TwoListSelection.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the TwoListSelection.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button
        over the TwoListSelection.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the TwoListSelection.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the TwoListSelection.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a
        key over the TwoListSelection.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the "Add All" and "Remove All" buttons are shown.</description>
      <name>allowAddRemoveAll</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the user places the mouse pointer over the "Add All" button.
      </description>
      <name>addAllHint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Add all" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the user places the mouse pointer over the "Add" button.
      </description>
      <name>addHint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Add selected" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the user places the mouse pointer over the "Remove All" button.
      </description>
      <name>removeAllHint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Remove all" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the user places the mouse pointer over the "Remove" button.
      </description>
      <name>removeHint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Remove selected" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the user places the mouse pointer over the "Up" button.
      </description>
      <name>moveUpHint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Move Up" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the user places the mouse pointer over the "Down" button.
      </description>
      <name>moveDownHint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Move Down" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "Add All" button.</description>
      <name>addAllText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Add All" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "Add" button.</description>
      <name>addText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Add" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "Remove All" button.</description>
      <name>removeAllText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Remove All" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "Remove" button.</description>
      <name>removeText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Remove" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "Up" button.</description>
      <name>moveUpText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Up" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "Down" button.</description>
      <name>moveDownText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Down" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the TwoListSelection headers.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection headers.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire TwoListSelection component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire TwoListSelection component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TwoListSelection component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TwoListSelection list boxes.</description>
      <name>listStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection list boxes.</description>
      <name>listClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TwoListSelection's command buttons.</description>
      <name>buttonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection's command buttons.</description>
      <name>buttonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <!-- disabled styles and classes-->
    <attribute>
      <description>A style for the TwoListSelection headers in the disabled state.</description>
      <name>disabledHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection headers in the disabled state.</description>
      <name>disabledHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire TwoListSelection component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire TwoListSelection component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TwoListSelection list boxes in the disabled state.</description>
      <name>disabledListStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection list boxes in the disabled state.</description>
      <name>disabledListClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the TwoListSelection's command buttons in the disabled state.</description>
      <name>disabledButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the TwoListSelection's command buttons in the disabled state.</description>
      <name>disabledButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>
  <!-- Client Validation Support -->
  <tag>
    <description>The ClientValidationSupport tag provides configuration
      of client-side validation for the enclosing form.
    </description>
    <name>clientValidationSupport</name>
    <tag-class>org.openfaces.taglib.jsp.validation.ClientValidationSupportJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the clientValidationSupport component
        with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.validation.ClientValidationSupport</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.validation. ClientValidationSupport -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The form-wide settings of the OpenFaces validation framework.</description>
      <name>clientValidation</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.validation. ClientValidationMode -->
      <!-- @default "off" -->
      <!-- @value "off" client-side validation is turned off for the components within a form. -->
      <!-- @value "onDemand" client-side validation is turned on for the enclosing form,
  but it is not automatically triggered. Client-side API should be used
  to trigger client-side validation. -->
      <!-- @value "onSubmit" client-side validation is turned on for the enclosing form
and it is automatically triggered on any form submission. -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the default validation presentation component is automatically
        added to each component with a client-side validator if no validation presentation component is found to display
        results of the client-side validation.
      </description>
      <name>useDefaultClientValidationPresentation</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the default validation presentation
        component is automatically added to each component with a server-side validator
        if no validation presentation component is found to display results
        of the server-side validation.
      </description>
      <name>useDefaultServerValidationPresentation</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The CustomValidator component allows you to write custom code to validate a value.
      The code is written in JavaScript on the client side and in Java on the server side.
    </description>
    <name>validateCustom</name>
    <tag-class>org.openfaces.taglib.jsp.validation.ValidateCustomJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>JavaScript code returning a boolean value ("true" for the valid value). The following variables are
        available: input - the DOM element for which the validator was specified; value - the value of the element to
        validate.
      </description>
      <name>clientFunction</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A summary description of a validation error. The default value is specified in the OpenFaces Message
        Bundle.
      </description>
      <name>summary</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default  "Validation Error" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A detailed description of a validation error. The default value is specified in the OpenFaces Message
        Bundle.
      </description>
      <name>detail</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default  "validation error in input ''{0}''" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The method to validate the value on the server. The following variables are available:
        context - FacesContext; component - validated component; value - a validated value.
        The code must return a boolean value ("true" for the valid value).
      </description>
      <name>serverFunction</name>
      <deferred-method>
        <method-signature>
          <![CDATA[
          boolean customValidatorTest(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
          ]]>
        </method-signature>
      </deferred-method>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <tag>
    <description>The EmailValidator ensures that the component has a well-formed
      e-mail address as the value.
    </description>
    <name>validateEmail</name>
    <tag-class>org.openfaces.taglib.jsp.validation.ValidateEmailJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A summary description of a validation error. The default value
        is specified in the OpenFaces Message Bundle.
      </description>
      <name>summary</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Email Validator Error" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A detailed description of a validation error.
        The default value is specified in the OpenFaces Message Bundle.
      </description>
      <name>detail</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "''{0}'': not a valid Email" -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The URLValidator ensures that the component has a valid URL.</description>
    <name>validateUrl</name>
    <tag-class>org.openfaces.taglib.jsp.validation.ValidateUrlJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A summary description of a validation error. The default value
        is specified in the OpenFaces Message Bundle.
      </description>
      <name>summary</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "URL Validation Error" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A detailed description of a validation error.
        The default value is specified in the OpenFaces Message Bundle.
      </description>
      <name>detail</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "''{0}'': not a valid URL" -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The RegexValidator ensures that the value being validated matches the pattern
      described as a regular expression in the "pattern" attribute.
    </description>
    <name>validateRegex</name>
    <tag-class>org.openfaces.taglib.jsp.validation.ValidateRegexJspTag</tag-class>
    <body-content>empty</body-content>

    <attribute>
      <description>String representation of a regular expression in the appropriate form in JavaScript.</description>
      <name>pattern</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A summary description of a validation error. The default value
        is specified in the OpenFaces Message Bundle.
      </description>
      <name>summary</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ReqExp Validator Error" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A detailed description of a validation error.
        The default value is specified in the OpenFaces Message Bundle.
      </description>
      <name>detail</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "''{0}'': do not match regexp" -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The EqualValidator checks that the values of two input components are the same.</description>
    <name>validateEqual</name>
    <tag-class>org.openfaces.taglib.jsp.validation.ValidateEqualJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A summary description of a validation error. The default value
        is specified in the OpenFaces Message Bundle.
      </description>
      <name>summary</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Equal Validator Error" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A detailed description of a validation error.
        The default value is specified in the OpenFaces Message Bundle.
      </description>
      <name>detail</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "''{0}'' must be equal to the ''{1}''" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The identifier of the component whose value must be equal to the value
        of the component this validator is assigned to.
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
  </tag>

  <tag>
    <description>The MessageParam component allows you to specify parameters
      for validation messages within any OpenFaces validator.
    </description>
    <name>messageParam</name>
    <tag-class>org.openfaces.taglib.jsp.validation.MessageParameterJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A string that is used as a parameter for formatting a validator or converter messages.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The FloatingIconMessage component allows you to display a
      validation error of a validated component by changing its appearance
      and adding a floating icon over the component.
    </description>
    <name>floatingIconMessage</name>
    <tag-class>org.openfaces.taglib.jsp.validation.FloatingIconMessageJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the FloatingIconMessage component with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.validation.FloatingIconMessage</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.message. FloatingIconMessage -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>ID of the component being validated.</description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>URL of the image file that is used to render the
        icon next to the component in case of failed validation.
      </description>
      <name>imageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the "summary" portion of displayed
        messages should be included in the error description.
      </description>
      <name>showSummary</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the "detail" portion of displayed
        messages should be included in the error description.
      </description>
      <name>showDetail</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The vertical offset of the icon from the top of the invalidated component.</description>
      <name>offsetTop</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -4 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The horizontal offset of the icon from the leftmost side of the invalidated component.</description>
      <name>offsetLeft</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default -4 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the invalidated component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the invalidated component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the icon.</description>
      <name>noImage</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to apply styles to show a validation error.</description>
      <name>noStyle</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the icon.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the icon.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the icon with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the icon.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the icon.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the icon.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button
        over the icon.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- StateChangeListener tag declaration -->
  <tag>
    <description>The StateChangeListener is used to enable you to handle state change of the FoldingPanel component
      on the server side. This tag can be specified only in the {@link foldingPanel} component.
    </description>
    <name>stateChangeListener</name>
    <tag-class>org.openfaces.taglib.jsp.StateChangeListenerJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A state change listener which is the implementation of
        org.openfaces.event.StateChangeListener interface.
      </description>
      <name>type</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- SelectionChangeListener tag declaration -->
  <tag>
    <description>The SelectionChangeListener is used to enable you to handle tab selection change on the server side.
      This tag can be specified only in the {@link tabSet} or {@link tabbedPane} components.
    </description>
    <name>selectionChangeListener</name>
    <tag-class>org.openfaces.taglib.jsp.SelectionChangeListenerJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A selection change listener which is the implementation of
        org.openfaces.event.SelectionChangeListener interface.
      </description>
      <name>type</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- CHART TAG DECLARATION -->
  <tag>
    <description>The Chart component is used to present data in a graphical form enabling the user to see trends,
      comparisons, or percentage of the whole. The component constitutes the entire chart area, including the chart
      itself and all its elements (title, legend, background). The component is based on the JFreeChart engine
      and exposes a friendly API with JSF-specific features and enhancements. Child tags: {@link pieChartView},
      {@link lineChartView}, {@link barChartView}, {@link chartTitle}, {@link chartLegend}.
    </description>
    <name>chart</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The width of the Chart component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang. String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the Chart component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.chart.Chart</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. Chart -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The height of the Chart component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>height</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A set of data to be used for processing and displaying in the chart.</description>
      <name>model</name>
      <deferred-value>
        <type>org.openfaces.component.chart.ChartModel</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartModel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Specifies the chart type. There are three types of chart available: pie, bar, line.</description>
      <name>view</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartViewType -->
      <!-- @default null -->
      <!-- @value "line" -->
      <!-- @value "bar" -->
      <!-- @value "pie" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text that is shown as the chart title above the chart.</description>
      <name>titleText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Chart component. Note that this attribute is applied to the
        component's image itself (the appropriate HTML tag on a page), so you shouldn't specify font and color
        properties in this attribute. Use textStyle attribute for specifying such properties instead.
      </description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Chart component. Note that this attribute is applied to the
        component's image itself (the appropriate HTML tag on a page), so you shouldn't specify font and color
        properties in this attribute. Use textStyle attribute for specifying such properties instead.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is used when generating an image for the Chart component. It should be used for
        specifying font and color properties. See also the style and styleClass attributes.
      </description>
      <name>textStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the chart legend is visible.</description>
      <name>legendVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
  </tag>

  <tag>
    <description>The PieChartView component is used to create and customize a pie chart. It can be specified
      only as a child tag of the {@link chart} component. Child tags:
      {@link pieSectorProperties}, {@link chartLabels}, {@link chartNoDataMessage}.
    </description>
    <name>pieChartView</name>
    <tag-class>org.openfaces.taglib.jsp.chart.PieChartViewJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A style for the PieChartView component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A comma-separated list of colors that are applied to pie sectors. Colors are applied clockwise
        in the order the data series are defined or sorted. You can specify colors only as RGB values.
      </description>
      <name>colors</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the callout labels are visible.</description>
      <name>labelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the PieChartView component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.chart.PieChartView</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. PieChartView -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the mouse pointer is placed over the chart.</description>
      <name>tooltip</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL where the user is redirected to after clicking on the chart.</description>
      <name>url</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a MethodBinding that should point
        to an action method that is called when the user clicks on the chart.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user clicks on the chart.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies percentage of transparency for the chart. Can take floating-point values from "0" to "1".
      </description>
      <name>foregroundAlpha</name>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
      <!-- @bindingType java.lang.Float -->
      <!-- @default 1 -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the PieChartView.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the PieChartView.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the PieChartView.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The LineChartView component is used to create and customize a line chart. Can be specified
      only as a child tag of the {@link chart} component. Child tags: {@link chartAxis},
      {@link numberAxis}, {@link dateAxis}, {@link categoryAxis}, {@link chartAxisTicks},
      {@link chartLabels}, {@link chartNoDataMessage}, {@link chartGridLines},
      {@link lineProperties}.
    </description>
    <name>lineChartView</name>
    <tag-class>org.openfaces.taglib.jsp.chart.LineChartViewJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A style for the LineChartView component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies orientation for the LineChartView component.</description>
      <name>orientation</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. Orientation  -->
      <!-- @default "vertical" -->
      <!-- @value "vertical" -->
      <!-- @value "horizontal" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the data labels are visible.</description>
      <name>labelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the LineChartView component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.chart.LineChartView</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. LineChartView -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the mouse pointer is placed over the chart.</description>
      <name>tooltip</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL where the user is redirected to after clicking on the chart.</description>
      <name>url</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies which axes are shown in the chart.</description>
      <name>showAxes</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both"  -->
      <!-- @value "key" -->
      <!-- @value "value" -->
      <!-- @value "both" -->
      <!-- @value "none" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "key" axis title.</description>
      <name>keyAxisLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Text for the "value" axis title.</description>
      <name>valueAxisLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component. It can either specify a string
        defining the static outcome of the selection change action, or it can be defined as a MethodBinding that should
        point to an action method that is called when the user clicks on the chart.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component. A MethodBinding that
        should point to an action listener that is called when the user clicks on the chart.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A comma-separated list of colors that are applied to lines. Colors are applied in the order
        the data series are defined or sorted. You can specify colors only as RGB values.
      </description>
      <name>colors</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the data markers on the line chart are visible.</description>
      <name>shapesVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies percentage of transparency for the chart. Can take float-pointing values from "0" to "1".
      </description>
      <name>foregroundAlpha</name>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
      <!-- @bindingType java.lang.Float -->
      <!-- @default 1 -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the LineChartView.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the LineChartView.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the LineChartView.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The BarChartView component is used to create and customize a bar chart. Can be specified
      only as a child tag of the {@link chart} component. Child tags: {@link chartAxis},
      {@link numberAxis}, {@link dateAxis}, {@link categoryAxis}, {@link chartAxisTicks},
      {@link chartLabels}, {@link chartNoDataMessage}, {@link chartGridLines}.
    </description>
    <name>barChartView</name>
    <tag-class>org.openfaces.taglib.jsp.chart.BarChartViewJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A style for the BarChartView component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies orientation for the BarChartView component.</description>
      <name>orientation</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. Orientation  -->
      <!-- @default "vertical" -->
      <!-- @value "vertical" -->
      <!-- @value "horizontal" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the data labels are visible.</description>
      <name>labelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the BarChartView component with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.chart.BarChartView</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. BarChartView -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the mouse pointer is placed over the chart.</description>
      <name>tooltip</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL where the user is redirected to after clicking on the chart.</description>
      <name>url</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies which axes are shown.</description>
      <name>showAxes</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both"  -->
      <!-- @value "key" -->
      <!-- @value "value" -->
      <!-- @value "both" -->
      <!-- @value "none" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the "key" axis title.</description>
      <name>keyAxisLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Text for the "value" axis title.</description>
      <name>valueAxisLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a MethodBinding that should point
        to an action method that is called when the user clicks on the chart.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should be point to an action listener that is called
        when the user clicks on the chart.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A comma-separated list of colors that are applied to bars. Colors are applied in the order the
        data series are defined or sorted. You can specify colors only as RGB values.
      </description>
      <name>colors</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies percentage of transparency for the chart. Can take float-pointing values from "0" to "1".
      </description>
      <name>foregroundAlpha</name>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
      <!-- @bindingType java.lang.Float -->
      <!-- @default 1 -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the BarChartView.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the BarChartView.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the BarChartView.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The ChartAxis tag is used to customize a chart axis of any type. This tag should be defined as a child
      tag for the chart-type components ({@link barChartView} and {@link lineChartView}).
    </description>
    <name>chartAxis</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartAxisJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the axis.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the axis title.</description>
      <name>labelVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show ticks on the axis.</description>
      <name>ticksVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show tick-mark labels on the axis.</description>
      <name>ticksLabelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies for which axes to apply the values of the attributes specified in the chartAxis tag.
      </description>
      <name>domain</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both" -->
      <!-- @value "both" for both axes-->
      <!-- @value "value" for the "Value" axis -->
      <!-- @value "key" for the "Key" axis -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The NumberAxis tag is used to customize an axis with numeric values or keys. This tag should be defined
      as a child tag for the chart-type components ({@link barChartView} and {@link lineChartView}).
    </description>
    <name>numberAxis</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartNumberAxisJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the axis.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the axis title.</description>
      <name>labelVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show ticks on the axis.</description>
      <name>ticksVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show tick-mark labels on the axis.</description>
      <name>ticksLabelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies for which axes to apply the values of the attributes specified in the numberAxis tag.
      </description>
      <name>domain</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both" -->
      <!-- @value "both" for both axes-->
      <!-- @value "value" for the "Value" axis -->
      <!-- @value "key" for the "Key" axis -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimum scale value to be displayed on the axis.</description>
      <name>lowerBound</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType java.lang.Double -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The maximum scale value to be displayed on the axis.</description>
      <name>upperBound</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType java.lang.Double -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
  </tag>

  <tag>
    <description>The DateAxis tag is used to customize an axis with date values or keys. This tag should be defined as
      a child tag for the chart-type components ({@link barChartView} and {@link lineChartView}).
    </description>
    <name>dateAxis</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartDateTimeAxisJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the axis.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the axis title.</description>
      <name>labelVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show ticks on the axis.</description>
      <name>ticksVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not o show tick-mark labels on the axis.</description>
      <name>ticksLabelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies for which axes to apply the values of the attributes specified in the dateAxis tag.
      </description>
      <name>domain</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both" -->
      <!-- @value "both" for both axes-->
      <!-- @value "value" for the "Value" axis -->
      <!-- @value "key" for the "Key" axis -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimum scale value to be displayed on the axis.</description>
      <name>lowerBound</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType java.lang.Double -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The maximum scale value to be displayed on the axis.</description>
      <name>upperBound</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType java.lang.Double -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The format of dates displayed on the tick-mark labels.</description>
      <name>dateFormat</name>
      <deferred-value>
        <type>java.text.DateFormat</type>
      </deferred-value>
      <!-- @bindingType java.text.DateFormat -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <tag>
    <description>The CategoryAxis tag is used to customize an axis for a chart with discrete data.
      This tag should be defined as a child tag for the chart-type components
      ({@link barChartView} and {@link lineChartView}).
    </description>
    <name>categoryAxis</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartCategoryAxisJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the axis.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the axis title.</description>
      <name>labelVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show ticks on the axis.</description>
      <name>ticksVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show tick-mark labels on the axis.</description>
      <name>ticksLabelsVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Specifies for which axes to apply the values of the attributes specified in the categoryAxis tag.
      </description>
      <name>domain</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both" -->
      <!-- @value "both" for both axes-->
      <!-- @value "value" for the "Value" axis -->
      <!-- @value "key" for the "Key" axis -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies how axis labels are oriented, especially when it's necessary to avoid overlapping.
      </description>
      <name>position</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. CategoryAxisLabelPosition -->
      <!-- @default "standard" -->
      <!-- @value "standard" labels are aligned horizontally -->
      <!-- @value "up_90" labels are rotated bottom-up by 90 degrees -->
      <!-- @value "up_45" labels are rotated bottom-up by 45 degrees -->
      <!-- @value "down_90" labels are rotated top-to-bottom by 90 degrees -->
      <!-- @value "down_45" labels are rotated top-to-bottom by 45 degrees  -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The ChartAxisTicks tag is used to apply a style for the chart axis ticks. This tag should be defined
      as a child tag for the chart-type components ({@link barChartView} and {@link lineChartView}).
    </description>
    <name>chartAxisTicks</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartAxisTicksJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the chart axis ticks.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>The ChartTitle tag is used to customize the chart title.
      This tag should be defined as a child tag for the {@link chart} component.
    </description>
    <name>chartTitle</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartTitleJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>Text for the chart title.</description>
      <name>text</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the chart title.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL where the user is redirected to after clicking on the chart title.</description>
      <name>url</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for a tooltip that appears when the mouse pointer is placed over the chart title.</description>
      <name>tooltip</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component.
        It can either specify a string defining the static outcome
        of the selection change action, or it can be defined as a MethodBinding that should point
        to an action method that is called when the user clicks on the chart title.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user clicks on the chart title.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The PieSectorProperties tag is used to apply a style to the pie sectors and specify whether or not
      a pie sector is pulled out upon mouse click. This tag should be defined as a child tag for the
      {@link pieChartView} component.
    </description>
    <name>pieSectorProperties</name>
    <tag-class>org.openfaces.taglib.jsp.chart.PieSectorPropertiesJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the pie sector that meet the condition specified in the "condition" attribute.
      </description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies whether or not the pie sector that meets the condition in the "condition" attribute is
        pulled out and the distance at which this sector is moved away. Can take float-pointing values from "0" to "1"
        to indicate how far from the center the sector should be pulled out, as a percentage of the radius.
      </description>
      <name>pulled</name>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
      <!-- @bindingType java.lang.Float -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The condition according to which a style is applied to the pie sector.</description>
      <name>condition</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <tag>
    <description>The ChartLabels tag is used to apply style for data labels This tag should be defined as a child tag
      for the chart-type components ({@link pieChartView}, {@link barChartView}, {@link lineChartView}).
    </description>
    <name>chartLabels</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartLabelsJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the data labels.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The ChartNoDataMessage tag is used to specify the text that is shown if there is no data to display in
      the chart. This tag should be defined as a child tag for the chart-type components ({@link pieChartView},
      {@link barChartView}, {@link lineChartView}).
    </description>
    <name>chartNoDataMessage</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartNoDataMessageJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>Text that is displayed when no data for the chart is displayed.</description>
      <name>text</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style that is applied to the message text.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The ChartLegend tag is used to customize a chart legend.
      This tag should be defined as a child tag for the chart-type
      components ({@link pieChartView}, {@link barChartView}, {@link lineChartView}).
    </description>
    <name>chartLegend</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartLegendJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The position of the legend relative to the chart.</description>
      <name>position</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. LegendPosition -->
      <!-- @default "bottom" -->
      <!-- @value "top" -->
      <!-- @value "bottom" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the legend.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The ChartGridLines tag is used to customize gridlines for pie and line charts. This tag should be
      defined as a child tag for the {@link barChartView} and {@link lineChartView} components.
    </description>
    <name>chartGridLines</name>
    <tag-class>org.openfaces.taglib.jsp.chart.ChartGridLinesJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>Specifies to which gridlines a style is applied.</description>
      <name>domain</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.chart. ChartDomain  -->
      <!-- @default "both" -->
      <!-- @value "both" a style is applied to both lines-->
      <!-- @value "value" a style is applied to lines that are parallel to the "value" axis -->
      <!-- @value "key" a style is applied to lines that are parallel to the "key" axis -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not a gridline(s) is visible.</description>
      <name>visible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A style for the gridlines.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The LineProperties tag is used to customize lines in the line chart. This tag should be defined as a
      child tag for the {@link lineChartView} component.
    </description>
    <name>lineProperties</name>
    <tag-class>org.openfaces.taglib.jsp.chart.LinePropertiesJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>A style for the lines.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the data markers on the lines of data series that
        meet the condition are visible.
      </description>
      <name>shapesVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the legend for the lines of data series that
        meet the condition.
      </description>
      <name>showInLegend</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show data series that meet the condition.</description>
      <name>hideSeries</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The condition under which the attributes specified in the lineProperties tag are applied to the
        lines.
      </description>
      <name>condition</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <!-- DynamicImage TAG DECLARATION -->
  <tag>
    <description>The DynamicImage is a component that, unlike the standard JSF HtmlGraphicImage component
      which displays an image already stored as an application file, provides the ability to display
      an image which is dynamically generated at run time, or which is not available as an application
      file but, for example, is retrieved from a database.
    </description>
    <name>dynamicImage</name>
    <tag-class>org.openfaces.taglib.jsp.output.DynamicImageJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the DynamicImage component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.output.DynamicImage</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.output. DynamicImage -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The data model of the image to be generated dynamically. There are two ways to specify the data
        model:&lt;br/&gt; Specify the image as a byte array. In this case, the data attribute should be set as a
        value-binding expression that references the byte array representing the image file.&lt;br/&gt;
        Specify the data model as an implementation of the java.awt.image.RenderedImage interface.
        The "data" attribute should be specified as a value-binding expression that references
        the value of the java.awt.image.RenderedImage type.
      </description>
      <name>data</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType byte[] -->
      <!-- @bindingType java.awt.image.RenderedImage -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the DynamicImage component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>width</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The height of the DynamicImage component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>height</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DynamicImage component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DymanicImage component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DynamicImage component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DynamicImage component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The "alt" text that is shown if the image is not loaded by the browser.</description>
      <name>alt</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the DynamicImage.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the DynamicImage.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        DynamicImage with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the DynamicImage.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the DynamicImage.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the DynamicImage.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the DynamicImage.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key down over the DynamicImage.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the DynamicImage.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the DynamicImage.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!--Calendar tag declaration-->
  <tag>
    <description>The Calendar component enables the user to select a date from a one-month
      calendar and navigate between months and years. Child tags: {@link dateRanges},
      {@link simpleDateRange}.
    </description>
    <name>calendar</name>
    <tag-class>org.openfaces.taglib.jsp.calendar.CalendarJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the Calendar component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.calendar.Calendar</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.calendar. Calendar -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the calendar's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the Calendar requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether this component can have input focus for keyboard control.</description>
      <name>focusable</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
      <!-- @bindingType java.lang.Boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire Calendar component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style of the Calendar component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the Calendar component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Calendar component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Calendar component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for all dates.</description>
      <name>dayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for all dates in the rollover state.</description>
      <name>rolloverDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dates of a non-current month.</description>
      <name>inactiveMonthDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dates of a non-current month in the rollover state.</description>
      <name>rolloverInactiveMonthDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the selected date.</description>
      <name>selectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the selected date in the rollover state.</description>
      <name>rolloverSelectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for today's date.</description>
      <name>todayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for today's date in the rollover state.</description>
      <name>rolloverTodayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the disabled dates.</description>
      <name>disabledDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the disabled dates in the rollover state.</description>
      <name>rolloverDisabledDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the row displaying weekday names.</description>
      <name>daysHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the weekend dates.</description>
      <name>weekendDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the weekend dates in the rollover state.</description>
      <name>rolloverWeekendDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the calendar header.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the calendar body.</description>
      <name>bodyStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the calendar footer.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the entire Calendar component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Calendar component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Calendar component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for all dates.</description>
      <name>dayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for all dates in the rollover state.</description>
      <name>rolloverDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dates of a non-current month.</description>
      <name>inactiveMonthDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dates of a non-current month in the rollover state.</description>
      <name>rolloverInactiveMonthDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the selected dates.</description>
      <name>selectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the selected dates in the rollover state.</description>
      <name>rolloverSelectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for today's date.</description>
      <name>todayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for today's date in the rollover state.</description>
      <name>rolloverTodayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for disabled dates.</description>
      <name>disabledDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for disabled dates in the rollover state.</description>
      <name>rolloverDisabledDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the row displaying weekday names.</description>
      <name>daysHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the weekend dates.</description>
      <name>weekendDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the weekend dates in the rollover state.</description>
      <name>rolloverWeekendDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the calendar header.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the calendar body.</description>
      <name>bodyClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the calendar footer.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A currently selected date.</description>
      <name>value</name>
      <deferred-value>
        <type>java.util.Date</type>
      </deferred-value>
      <!-- @bindingType java.util.Date -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Time zone in which to interpret any time information in the date String. Value must be either a VB
        expression that evaluates to a java.util.TimeZone instance, or a String that is a timezone ID as described in
        the javadocs for java.util.TimeZone.getTimeZone().
      </description>
      <name>timeZone</name>
      <deferred-value>
        <type>java.util.TimeZone</type>
      </deferred-value>
      <!-- @bindingType java.util.TimeZone -->
      <!-- @default The server's default time zone -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The first day of the week which is used by the Calendar component
        to arrange days by weeks. It can take the values from "1" (Sunday) to "7" (Monday).
      </description>
      <name>firstDayOfWeek</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 1 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the valueChangeListener should be executed immediately (during
        the Apply Request Values phase of the request processing lifecycle instead of Process Validations phase) and
        the component's input should be converted and validated immediately (during the Apply Request Values phase of
        the request processing lifecycle instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The locale used by the Calendar component. You can specify the "locale" attribute
        as a value-binding expression or as String in "ll_CC_vv" format, where:&lt;br/&gt;
        ll stands for the language - lowercase two-letter ISO-639 code.&lt;br/&gt;
        CC stands for the country - uppercase two-letter ISO-3166 code (optional).&lt;br/&gt;
        vv stands for the variant - vendor and browser specific code (optional).&lt;br/&gt;
      </description>
      <name>locale</name>
      <deferred-value>
        <type>java.util.Locale</type>
      </deferred-value>
      <!-- @bindingType java.util.Locale -->
      <!-- @default client's locale -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the Calendar changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user changes a selected date.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client on the first load
        of the Calendar component and then when the user changes months or years.
      </description>
      <name>onperiodchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the Calendar.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the Calendar.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the Calendar with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the Calendar.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the Calendar.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the Calendar.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the Calendar.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the Calendar receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the Calendar loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the Calendar.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the Calendar.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a
        key over the Calendar.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The label for the "Today" button.</description>
      <name>todayText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Today" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The label for the "None" button.</description>
      <name>noneText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to keep time portion of the bound date value.</description>
      <name>keepTime</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the calendar footer.</description>
      <name>showFooter</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The DateRanges tag is used to specify date ranges in the Calendar. Can be specified only
      as a child tag for the {@link calendar} component. Child tag: {@link simpleDateRange}
    </description>
    <name>dateRanges</name>
    <tag-class>org.openfaces.taglib.jsp.calendar.DateRangesJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the dates in the ranges are disabled.</description>
      <name>disableExcludes</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the dates outside the ranges are disabled.</description>
      <name>disableIncludes</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dates in all the date ranges.</description>
      <name>dayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dates in all the date ranges in the rollover state.</description>
      <name>rolloverDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dates in all the date ranges.</description>
      <name>dayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dates in all the date ranges in the rollover state.</description>
      <name>rolloverDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected date.</description>
      <name>selectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected date.</description>
      <name>selectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected date in the rollover state.</description>
      <name>rolloverSelectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected date in the rollover state.</description>
      <name>rolloverSelectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>This attribute is used to specify the actual ranges.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType collection of org.openfaces.component.calendar. SimpleDateRange -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <tag>
    <description>The DateRanges tag is used to specify one date range. Can be defined only
      as a child tag for the {@link calendar} component.
    </description>
    <name>simpleDateRange</name>
    <tag-class>org.openfaces.taglib.jsp.calendar.SimpleDateRangeJspTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>The start date of the range.</description>
      <name>fromDate</name>
      <required>true</required>
      <deferred-value>
        <type>java.util.Date</type>
      </deferred-value>
      <!-- @bindingType java.util.Date -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The end date of the range.</description>
      <name>toDate</name>
      <required>true</required>
      <deferred-value>
        <type>java.util.Date</type>
      </deferred-value>
      <!-- @bindingType java.util.Date -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for each date cell in the range.</description>
      <name>dayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for each date cell in the range when the mouse pointer is over this cell.</description>
      <name>rolloverDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for each date cell in the range.</description>
      <name>dayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for each date cell in the range when the mouse pointer is over this cell.
      </description>
      <name>rolloverDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected date.</description>
      <name>selectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected date in the rollover state.</description>
      <name>rolloverSelectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected date.</description>
      <name>selectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected date in the rollover state.</description>
      <name>rolloverSelectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!--DateChooser tag declaration-->
  <tag>
    <description>The DateChooser component allows the user to enter a date either by typing it in the text field or
      selecting it from the calendar that appears when clicking a button next to text field. The selected date is
      displayed in the text field in the specified format.
    </description>
    <name>dateChooser</name>
    <tag-class>org.openfaces.taglib.jsp.input.DateChooserJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the DateChooser component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.DateChooser</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. DateChooser -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the DateChooser's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the DateChooser requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether this component can have input focus for keyboard control.</description>
      <name>focusable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Allows disabling typing in the date with keyboard when this attribute is set to false.</description>
      <name>typingAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the text field of the DateChooser component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the DateChooser component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image file that is used to render the button that opens the pop-up calendar.</description>
      <name>buttonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL of the image file that is used to render the button that opens the pop-up calendar in the
        disabled state.
      </description>
      <name>disabledButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire DateChooser component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the DateChooser component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the DateChooser component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire DateChooser component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the pop-up calendar.</description>
      <name>calendarStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for all dates.</description>
      <name>dayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field.</description>
      <name>fieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the disabled state.</description>
      <name>disabledFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the button that opens the pop-up calendar.</description>
      <name>buttonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the button in the disabled state.</description>
      <name>disabledButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the button in the pressed state.</description>
      <name>pressedButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for all dates in the rollover state.</description>
      <name>rolloverDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dates of a non-current month.</description>
      <name>inactiveMonthDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the dates of a non-current month in the rollover state.</description>
      <name>rolloverInactiveMonthDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected date.</description>
      <name>selectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a selected date in the rollover state.</description>
      <name>rolloverSelectedDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for today's date.</description>
      <name>todayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for today's date in the rollover state.</description>
      <name>rolloverTodayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the row displaying weekday names.</description>
      <name>daysHeaderStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the weekend dates.</description>
      <name>weekendDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the weekend dates in the rollover state.</description>
      <name>rolloverWeekendDayStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the header of the pop-up calendar.</description>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the footer of the pop-up calendsar.</description>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the entire DateChooser component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire DateChooser component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the pop-up calendar.</description>
      <name>calendarClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for all dates.</description>
      <name>dayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field.</description>
      <name>fieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field in the disabled state.</description>
      <name>disabledFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the button that opens the pop-up calendar</description>
      <name>buttonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the button in the disabled state.</description>
      <name>disabledButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the button in the pressed state.</description>
      <name>pressedButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for all dates in the rollover state.</description>
      <name>rolloverDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dates of a non-current month.</description>
      <name>inactiveMonthDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the dates of a non-current month in the rollover state.</description>
      <name>rolloverInactiveMonthDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected date.</description>
      <name>selectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for a selected date in the rollover state.</description>
      <name>rolloverSelectedDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for today's date.</description>
      <name>todayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for today's date in the rollover state.</description>
      <name>rolloverTodayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the row displaying weekday names.</description>
      <name>daysHeaderClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the weekend dates.</description>
      <name>weekendDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the weekend dates in the rollover state.</description>
      <name>rolloverWeekendDayClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the header of the pop-up calendar.</description>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the footer of the pop-up calendar.</description>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The first day of the week which is used by the pop-up calendar
        to arrange days by weeks. It can take the values from "1" (Sunday) to "7" (Monday).
      </description>
      <name>firstDayOfWeek</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 1 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The current value of the DateChooser component component that is displayed in the text field.
      </description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Time zone in which to interpret any time information in the date String. Value must be either a VB
        expression that evaluates to a java.util.TimeZone instance, or a String that is a timezone ID as described in
        the javadocs for java.util.TimeZone.getTimeZone().
      </description>
      <name>timeZone</name>
      <deferred-value>
        <type>java.util.TimeZone</type>
      </deferred-value>
      <!-- @bindingType java.util.TimeZone -->
      <!-- @default The server's default time zone -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts a ValueChangeEvent. If the value of the
        DateChooser changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the valueChangeListener should be executed immediately (during
        the Apply Request Values phase of the request processing lifecycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user changes a date.</description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>This attribute defines which of the predefined date formats for a given locale should be used.
      </description>
      <name>dateFormat</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "medium" -->
      <!-- @value "short" the same as "SHORT" format in the java.text.DateFormat -->
      <!-- @value "medium" the same as "MEDIUM" format in the java.text.DateFormat -->
      <!-- @value "long" the same as "LONG" format in the java.text.DateFormat -->
      <!-- @value "full" the same as "FULL" format in the java.text.DateFormat -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The date format with the pattern similar to that in the java.text.SimpleDateFormat class.
      </description>
      <name>pattern</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The locale used by DateChooser component. You can specify the "locale" attribute
        as a value-binding expression or as a String in "ll_CC_vv" format, where:&lt;br/&gt;
        ll stands for the language - lowercase two-letter ISO-639 code.&lt;br/&gt;
        CC stands for the country - uppercase two-letter ISO-3166 code (optional).&lt;br/&gt;
        vv stands for the variant - vendor and browser specific code (optional).&lt;br/&gt;
      </description>
      <name>locale</name>
      <deferred-value>
        <type>java.util.Locale</type>
      </deferred-value>
      <!-- @bindingType java.util.Locale -->
      <!-- @default client's locale -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the button in the rollover state that opens the pop-up calendar.</description>
      <name>rolloverButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the button in the rollover state that opens the pop-up calendar.</description>
      <name>rolloverButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the rollover state.</description>
      <name>rolloverFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A class for the text field in the rollover state.</description>
      <name>rolloverFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the DateChooser.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the DateChooser.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the DateChooser.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the DateChooser with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the DateChooser.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the DateChooser.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the DateChooser.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the DateChooser.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the DateChooser receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the DateChooser loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the DateChooser.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the DateChooser.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The label for the "Today" button in the pop-up calendar.</description>
      <name>todayText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Today" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The label for the "None" button in the pop-up calendar.</description>
      <name>noneText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not to keep time portion of the bound date value.</description>
      <name>keepTime</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not to show the footer of the pop-up calendar.</description>
      <name>showFooter</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- LoadBundle tag declaration -->
  <tag>
    <description>The LoadBundle component is used for loading a resource bundle localized for the Locale of the
      current view, and expose it (as a Map) in the request attributes of the current request. The o:loadBundle
      component is similar to the f:loadBundle from the RI or MyFaces JSF implementation but can be used in the
      components with Ajax enabled.
    </description>
    <name>loadBundle</name>
    <tag-class>org.openfaces.taglib.jsp.util.LoadBundleJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The name of a request scope variable under which the resource bundle is exposed as a Map.
      </description>
      <name>var</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>The base name of the resource bundle to be loaded.</description>
      <name>basename</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- CommandButton tag declaration -->
  <tag>
    <description>This is an analog of the standard &lt;h:commandButton> component extended with Ajax features making it
      possible to use Ajax request instead of form submission to execute an action and reload components. By default it
      behaves as its standard analog though Ajax functionality will be turned on if you specify its "render" attribute,
      which is similar to that of &lt;o:ajax> component and specifies the list of components that should be reloaded
      when the button is clicked. An additional optional attribute is "execute", which just like in the &lt;o:ajax>
      component allows specifying a list of components whose data should be submitted to the server for processing
      during the Ajax request.
    </description>
    <name>commandButton</name>
    <tag-class>org.openfaces.taglib.jsp.command.CommandButtonJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A value-binding expression that associates the CommandButton with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.command.CommandButton</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.command.CommandButton -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component. It can be defined as a
        MethodBinding that should point to an action method that is called when the user clicks this button.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user invokes this action.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not actionListener should be executed immediately (during the Apply
        Request Values phase of the request processing lifecycle instead of Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified
        can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated
        list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The text displayed in the button.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Input type string for the rendered &lt;input> tag. Can be "submit", "reset", or "button".
      </description>
      <name>type</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "submit" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the CommandButton component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the InputText component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the component.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the component.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the component with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the
        component.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the component with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the component.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the component.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the component.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the component.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the component.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the component.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the component loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the component receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An advisory title for the text field of this filter component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Alternate textual description of the element rendered by this component.</description>
      <name>alt</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The base direction of directionally neutral text. Valid values are &quot;LTR&quot; (left-to-right)
        and &quot;RTL&quot; (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Absolute or relative URL of the image to be displayed for this button. If specified, this &quot;input&quot;
        element will be of type &quot;image&quot;. Otherwise, it will be of the type specified by the &quot;type&quot;
        property with a label specified by the &quot;value&quot; property. If there are child components inside of the
        &lt;o:commandButton&gt; tag, the &quot;image&quot; attribute&apos;s value will be ignored and child components
        will be displayed as the button&apos;s content.
      </description>
      <name>image</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- CommandLink tag declaration -->
  <tag>
    <description>This is an analog of the standard &lt;h:commandLink&gt; component extended with Ajax features making it
      possible to use Ajax request instead of form submission to execute an action and reload components. By default it
      behaves as its standard analog though Ajax functionality will be turned on if you specify its &quot;render&quot;
      attribute, which is similar to that of &lt;o:ajax&gt; component and specifies the list of components that should
      be reloaded when the link is clicked. An additional optional attribute is &quot;execute&quot;, which just like
      in the &lt;o:ajax&gt; component allows specifying a list of components whose data should be submitted to the
      server for processing during the Ajax request.
    </description>
    <name>commandLink</name>
    <tag-class>org.openfaces.taglib.jsp.command.CommandLinkJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A value-binding expression that associates the CommandLink with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.command.CommandLink</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.command.CommandLink -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandLink component. It can be defined as a
        MethodBinding that should point to an action method that is called when the user clicks this link.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandLink component.
        A MethodBinding that should point to an action listener that is called when the user invokes this action.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not actionListener should be executed immediately (during the Apply
        Request Values phase of the request processing lifecycle instead of Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified
        can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated
        list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The text displayed in the link.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the CommandLink component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the InputText component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the component.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the component.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the component with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the
        component.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the component with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the component.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the component.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the component.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the component.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the component.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the component.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the component loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the component receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An advisory title for the text field of this filter component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The base direction of directionally neutral text. Valid values are &quot;LTR&quot; (left-to-right)
        and &quot;RTL&quot; (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The character encoding of the resource designated by this hyperlink.</description>
      <name>charset</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!--k @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The position and shape of the hot spot on the screen (for use in client-side image maps).
      </description>
      <name>coords</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The language code of the resource designated by this hyperlink.</description>
      <name>hreflang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The relationship from the current document to the anchor specified by this hyperlink. The value of
        this attribute is a space-separated list of link types.
      </description>
      <name>rel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this
        attribute is a space-separated list of link types.
      </description>
      <name>rev</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The shape of the hot spot on the screen (for use in client-side image maps). Valid values are:
        default (entire region); rect (rectangular region); circle (circular region); and poly (polygonal region).
      </description>
      <name>shape</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Name of a frame where the resource retrieved via this hyperlink is to be displayed.</description>
      <name>target</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The content type of the resource designated by this hyperlink.</description>
      <name>type</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- Debug tag declaration -->
  <tag>
    <description>This component is under construction.</description>
    <name>debug</name>
    <tag-class>org.openfaces.taglib.jsp.util.DebugJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A value-binding expression that associates the Debug component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.util.Debug</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util. Debug -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the Window component is visible.</description>
      <name>visible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The x coordinate of the component's upper-left corner
        relative to the upper-left corner of the document or an absolutely
        positioned immediate container of the Window component.
        Note that the "left" attribute should indicate the number of pixels,
        without the postfix "px".
      </description>
      <name>left</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The y coordinate of the component's upper-left corner relative to the upper-left corner of the
        document or an absolutely positioned immediate container of the Window component. Note that the "top" attribute
        should indicate the number of pixels, without the postfix "px".
      </description>
      <name>top</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the Window component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The height of the Window component. Can be specified in any units (px, mm, em, etc.).</description>
      <name>height</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimal width that the Window component can have when the user is resizing the window. This
        attribute is applicable when "resizable" attribute is set to "true". This attribute can be specified
        in any units (px, mm, em, etc.) except percent.
      </description>
      <name>minWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimal height that the Window component can have when the user is resizing the window. This
        attribute is applicable when "resizable" attribute is set to "true". This attribute can be specified
        in any units (px, mm, em, etc.) except percent.
      </description>
      <name>minHeight</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire Window component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Window component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Window component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Window component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the Window title.</description>
      <name>captionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Window title.</description>
      <name>captionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the Window content area.</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Window content area.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- InputText tag declaration -->
  <tag>
    <description>The InputText component is an input component that give feature display prompt text, if value of
      component is not set.
    </description>
    <name>inputText</name>
    <tag-class>org.openfaces.taglib.jsp.input.InputTextJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A value-binding expression that associates the InputText with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.InputText</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. InputText -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>The current value of this component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the InputText component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the InputText component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the InputText component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the InputText component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style of the InputText component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name of the InputText component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not valueChangeListener should be executed immediately (during the
        Apply Request Values phase of the request processing lifecycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the InputText's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A converter for the InputText's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the InputText changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the InputText requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The width of the InputText component in characters.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether the "autocomplete" attribute is rendered for this input element, which
        makes a browser provide suggestions based on the previosly typed values.
      </description>
      <name>autocomplete</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ltr" -->
      <!-- @value "ltr" left to right -->
      <!-- @value "rtl" right to left -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the InputText component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the InputText.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the InputText.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the InputText with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the InputText.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the InputText with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the InputText.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the InputText.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the InputText.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the InputText.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the InputText.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the InputText.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the InputText loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the InputText receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the InputText's value has changed.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Javascript code executed when text within this element is selected by the user.</description>
      <name>onselect</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An access key for the InputText component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Alternate textual description of the element rendered by this component.</description>
      <name>alt</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Flag indicating that this component will prohibit changes by
        the user. The element may receive focus unless it has also been disabled.
      </description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The maximum number of characters that can be entered in the InputText.</description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- InputTextarea tag declaration -->
  <tag>
    <description>The InputTextarea component is an input component that give feature display prompt text, if value of
      component is not set.
    </description>
    <name>inputTextarea</name>
    <tag-class>org.openfaces.taglib.jsp.input.InputTextareaJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>The current value of this component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The number of columns to be displayed.</description>
      <name>cols</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The number of rows to be displayed.</description>
      <name>rows</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default Integer.MIN_VALUE -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the InputTextarea component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the InputTextarea component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the InputTextarea component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the InputTextarea component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style of the InputTextarea component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name of the InputTextarea component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not valueChangeListener should be executed immediately (during the
        Apply Request Values phase of the request processing lifecycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during the Apply Request Values phase of the
        request processing lifecycle instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the InputTextarea's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A converter for the InputTextarea's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the InputTextarea changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the InputTextarea requires a value.
      </description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>autoGrowing</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A value-binding expression that associates the InputTextarea with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.InputTextarea</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input. InputTextarea -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "ltr" -->
      <!-- @value "ltr" left to right -->
      <!-- @value "rtl" right to left -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the InputTextarea component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the InputTextarea.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the InputTextarea.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the InputTextarea with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the
        InputTextarea.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the InputTextarea with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        onto the InputTextarea.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the InputTextarea.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the InputTextarea.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the InputTextarea.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the InputTextarea.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the InputTextarea.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the InputTextarea loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the InputTextarea receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the InputTextarea's value has changed.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Javascript code executed when text within this element is selected by the user.</description>
      <name>onselect</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An access key for the InputTextarea component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Flag indicating that this component will prohibit changes by the user. The element may receive focus
        unless it has also been disabled.
      </description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- Menu tag declaration -->

  <tag>
    <name>popupMenu</name>
    <tag-class>org.openfaces.taglib.jsp.command.PopupMenuJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the TwoListSelection component with
        a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.command.PopupMenu</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.command.PopupMenu -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>ID of the component to wich the PopupMenu should be attached.</description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Name of client side event which shows the PopupMenu.</description>
      <name>event</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Turns on the "standalone" mode where the PopupMenu is not attached to other component automatically,
        and can be used via the public API instead. The default value is false, which means that the component is
        attached
        to the parent component, or a component referred to by the "for" attribute if it is specified.
      </description>
      <name>standalone</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass between user makes mouseover of
        menu item and child PopupMenu becomes visible.
      </description>
      <name>submenuShowDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 500 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass between user makes mouseout
        of menu item and child PopupMenu hides.
      </description>
      <name>submenuHideDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 500 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not PopupMenu shows indent area with menu item images.</description>
      <name>indentVisible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An URL of image which is marker to show user that some menu item has submenu.</description>
      <name>submenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image file that is used for disabled menu items which have submenu.</description>
      <name>disabledSubmenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image file that is used for selected menu items which have submenu.</description>
      <name>selectedSubmenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An URL of default image for menu items.</description>
      <name>itemIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of default image for selected menu items.</description>
      <name>selectedItemIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of default image for disabled menu items.</description>
      <name>disabledItemIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>A style for the PopupMenu component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the PopupMenu component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the PopupMenu component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the PopupMenu component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for menu item of the PopupMenu component.</description>
      <name>itemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for menu item of the PopupMenu component.</description>
      <name>itemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for selected menu items of the PopupMenu component.</description>
      <name>selectedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for selected menu items of the PopupMenu component.</description>
      <name>selectedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for desabled menu items of the PopupMenu component.</description>
      <name>disabledItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for disabled menu items of the PopupMenu component.</description>
      <name>disabledItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for content of menu items of the PopupMenu component.</description>
      <name>itemContentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of menu items of the PopupMenu component.</description>
      <name>itemContentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A default style for indent area of the PopupMenu component.</description>
      <name>indentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the PopupMenu component.</description>
      <name>indentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A default style for submenu icon area of menu items of the PopupMenu component.</description>
      <name>itemSubmenuIconStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for submenu icon area of menu items of the PopupMenu component.</description>
      <name>itemSubmenuIconClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the PopupMenu.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the PopupMenu.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the
        button with either mouse PopupMenu.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the PopupMenu.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the PopupMenu.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the PopupMenu.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the PopupMenu.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupMenu receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupMenu loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the PopupMenu.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the PopupMenu.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupMenu shows.</description>
      <name>onshow</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the PopupMenu hides.</description>
      <name>onhide</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <name>menuItem</name>
    <tag-class>org.openfaces.taglib.jsp.command.MenuItemJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A value-binding expression that associates the MenuItem with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.command.MenuItem</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.command.MenuItem -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The string that displays as text of the MenuItem.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "action" attribute of the HTMLCommandButton component. It can be defined as a
        MethodBinding that should point to an action method that is called when the user clicks the MenuItem.
      </description>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user clicks on the MenuItem.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An URL of image for the menu item.</description>
      <name>iconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the disabled menu item.</description>
      <name>disabledIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the selected menu item.</description>
      <name>selectedIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An URL of image that represents submenu marker of the menu item.</description>
      <name>submenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image that represents submenu marker of the disabled menu item.</description>
      <name>disabledSubmenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image that represents submenu marker of the selected menu item.</description>
      <name>selectedSubmenuImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the MenuItem.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the MenuItem.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the MenuItem in selected state.</description>
      <name>selectedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item in selected state.</description>
      <name>selectedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the disabled MenuItem.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the disabled menu item.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for content of the menu item.</description>
      <name>contentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of the menu item.</description>
      <name>contentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for indent area of the menu item.</description>
      <name>indentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the menu item.</description>
      <name>indentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for submenu icon area of the menu item.</description>
      <name>submenuIconAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for submenu icon area of the menu item.</description>
      <name>submenuIconAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the MenuItem.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the MenuItem.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the button with either mouse MenuItem.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the MenuItem.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the MenuItem.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the MenuItem.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the MenuItem.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the MenuItem receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the MenuItem loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the MenuItem.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the MenuItem.</description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <name>menuSeparator</name>
    <tag-class>org.openfaces.taglib.jsp.command.MenuSeparatorJspTag</tag-class>
    <body-content>empty</body-content>

    <attribute>
      <description>A style for the MenuSeparator.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the MenuSeparator.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- GraphicText tag declaration -->
  <tag>
    <description>GraphicText is a component that displays styled rotated text. It has API similar to the standard
      &lt;h:outputText> component, though unlike the &lt;h:outputText> component, the GraphicText component displays
      a text with an image generated on the server. This component can be useful for displaying vertical headers in a
      table having a lot of thin columns, vertical TabSet components, etc.
    </description>
    <name>graphicText</name>
    <tag-class>org.openfaces.taglib.jsp.output.GraphicTextJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A converter for the GraphicText's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Flag indicating whether or not this component should be rendered
        (during Render Response Phase), or processed on any subsequent form submit.
        The default value for this property is true.
      </description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The GraphicText component value.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire GraphicText component. Note that this attribute is applied to the
        component's image itself (the &lt;img&gt; tag), so you shouldn't specify font and color properties in this
        attribute. Use textStyle attribute for specifying font and color properties instead.
      </description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire GraphicText component. Note that this attribute is applied to the
        component's image itself (the &lt;img&gt; tag), so you shouldn't specify font and color properties in this
        attribute. Use textStyle attribute for specifying font and color properties instead.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the GraphicText component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the GraphicText component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for a text displayed in the GraphicText component. It should be used for specifying font and
        color properties. See also the style and styleClass attributes.
      </description>
      <name>textStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Text for the tooltip of the Message.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the GraphicText with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.output.GraphicText</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.output.GraphicText -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Rotation angle for the GraphicText in degrees. Also has 4 predefined constants.</description>
      <name>direction</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default "leftToRight" - Degrees equivalent: 0. -->
      <!-- "rightToLeft" - Degrees equivalent: 180. -->
      <!-- "topToBottom" - Degrees equivalent: 270. -->
      <!-- "bottomToTop" - Degrees equivalent: 90. -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the GraphicText.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the GraphicText.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the GraphicText with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the GraphicText.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the GraphicText.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the GraphicText.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the GraphicText.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- Ajax tag declaration -->
  <tag>
    <name>ajax</name>
    <tag-class>org.openfaces.taglib.jsp.ajax.AjaxJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the ajax with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.ajax.Ajax</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.ajax.Ajax -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Attaches the Ajax component to the specified event of the parent component.</description>
      <name>event</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Allows attaching this Ajax component to an arbitrary component or HTML tag instead of
        attaching to the parent component. This attribute specifies ID of the JSF component or of any HTML element to
        which this component should be attached to. It should be defined in the same way as the "for" property of the
        standard HTMLOutputLabel component.
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Turns on the "standalone" mode where the Ajax component is not attached to other component
        automatically,
        and can be used via the public API instead. The default value is false, which means that the component is
        attached
        to the parent component, or a component referred to by the "for" attribute if it is specified.
      </description>
      <name>standalone</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value of "true" indicates the Ajax component should not be rendered.
      </description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user fire an event.
      </description>
      <name>listener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components, which will be rerendered after successful Ajax request.
        Evaluates to Iterable. If a literal is specified
        can be a single id or a comma-separated list if id's.
      </description>
      <name>render</name>
      <required>true</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Id's of components whose data should be submitted and processed on the server in addition to the
        reloaded components. The difference with render is that components listed in execute will
        just process the submitted data, but won't be rerendered. This can often be needed when the reloaded data
        depends on some other component on a page.
        Evaluates to Iterable. If a literal is specified can be a single id or a comma-separated
        list if id's.
      </description>
      <name>execute</name>
      <required>false</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
      <!-- @bindingType java.util.Object -->
      <!-- @el true -->
    </attribute>

    <!--<attribute>-->
    <!--<name>submitInvoker</name>-->
    <!--<description>A flag that indicates whether or not the component to which this Ajax component is-->
    <!--attached should be submitted in addition to the reloaded component(s), and components specified with the-->
    <!--execute attribute.-->
    <!--</description>-->
    <!-- @bindingType boolean -->
    <!-- @default true -->
    <!-- @el true -->
    <!--</attribute>-->
    <attribute>
      <description>A flag that indicates whether or not actionListener should be executed immediately (during the Apply
        Request Values phase of the request processing lifecycle instead of Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Allows reducing the number of Ajax requests by skipping the frequently-happinging events. This
        attribute specifies the delay in milliseconds that should elapse after an event that activates this component
        to start an actual request for reloading components (and invoking an appropriate action if specified). If
        there will be another event during this delay, this event will postpone the request according to the specified
        delay instead of performing an additional request. As a result there will be only one request for all events
        that come more frequently than specified in this attribute.
      </description>
      <name>delay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an error occurs
        while performing an Ajax request.
      </description>
      <name>onerror</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an event occurred.
      </description>
      <name>onevent</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an Ajax request is started.</description>
      <name>onajaxstart</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when an Ajax request is completed.
      </description>
      <name>onajaxend</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>Displays a time-table for one day. A time-table consists of a set of events with different time spans
      arranged within a day.
    </description>
    <name>dayTable</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.DayTableJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A value-binding expression that associates the DayTable with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.DayTable</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. DayTable -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies name of the request-scope variable under which the current event object is available
        when rendering event areas and processing server-side events from event area components.
      </description>
      <name>eventVar</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "event" -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>A day for which this dayTable is going to show events.</description>
      <name>day</name>
      <deferred-value>
        <type>java.util.Date</type>
      </deferred-value>
      <!-- @bindingType java.util.Date -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The locale used by the DayTable component. You can specify the "locale" attribute
        as a value-binding expression or as String in "ll_CC_vv" format, where:&lt;br/&gt;
        ll stands for the language - lowercase two-letter ISO-639 code.&lt;br/&gt;
        CC stands for the country - uppercase two-letter ISO-3166 code (optional).&lt;br/&gt;
        vv stands for the variant - vendor and browser specific code (optional).&lt;br/&gt;
      </description>
      <name>locale</name>
      <deferred-value>
        <type>java.util.Locale</type>
      </deferred-value>
      <!-- @bindingType java.util.Locale -->
      <!-- @default client's locale -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Time zone in which to interpret any time information in the date String. Value must be either a VB
        expression that evaluates to a java.util.TimeZone instance, or a String that is a timezone ID as described in
        the javadocs for java.util.TimeZone.getTimeZone().
      </description>
      <name>timeZone</name>
      <deferred-value>
        <type>java.util.TimeZone</type>
      </deferred-value>
      <!-- @bindingType java.util.TimeZone -->
      <!-- @default The server's default time zone -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A set of events those should be shown in this timetable. Each entry in this set
        should be an instance of org.openfaces.component.timetable.TimetableEvent class.
      </description>
      <name>events</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array -->
      <!-- @bindingType java.util.Collection -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Using this attribute turns on the multi-resource mode for this DayTable. This attribute specifies a
        set of resources those should be displayed in this timetable. Each entry in this set should be an instance of
        the org.openfaces.component.timetable.TimetableResource class.
      </description>
      <name>resources</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array -->
      <!-- @bindingType java.util.Collection -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Defines the amount of events that are preloaded on the client when a page with the DayTable component
        is loaded.
      </description>
      <name>preloadedEvents</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. PreloadedEvents-->
      <!-- @default "all" -->
      <!-- @value "none" events for days other than the current one are not preloaded and are loaded only when a user
                         switches the current day -->
      <!-- @value "all" all events are preloaded and no loading is required when switching between the days -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not a user can edit events in this DayTable component.</description>
      <name>editable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Allows handling of client-side event changes performed by the user for saving these changes into the
        underlying storage on the server. This attribute is a MethodBinding that must point to the method that accepts
        a org.openfaces.component.timetable.TimetableChangeEvent parameter.
      </description>
      <name>timetableChangeListener</name>
      <deferred-method>
        <method-signature>void timetableChangeListener(org.openfaces.component.timetable.TimetableChangeEvent)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when any data is edited inside of the DayTable. Note that
        the changes that don't affect the underlying data (such as switching the current day) don't trigger the onchange
        event.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Time the marks the start of the day period that will be shown in this DayTable component.
        By default the entire day's time is shown. The time should be specified as a string in the "HH:mm" format,
        e.g. "16:00". Only the hour component of the specified time is used currently.
      </description>
      <name>startTime</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Time the marks the end of the day period that will be shown in this DayTable component.
        By default the entire day's time is shown. The time should be specified as a string in the "HH:mm" format,
        e.g. "16:00". Only the hour component of the specified time is used currently.
      </description>
      <name>endTime</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Works only for scrollable DayTables. Specifies the time to which the top DayTable's top edge will be
        scrolled. The time should be specified as a string in the "HH:mm" format, e.g. "10:00".
      </description>
      <name>scrollTime</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether a time is written right against an appropriate hour separator line ("againstMark"),
        or below hour separator line ("underMark" -- default).
      </description>
      <name>timeTextPosition</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. TimeTextPosition-->
      <!-- @default "underMark" -->
      <!-- @value "underMark" -->
      <!-- @value "againstMark" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire DayTable component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire DayTable component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the DayTable component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the DayTable component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the DayTable.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the DayTable.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over the DayTable with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the DayTable.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the DayTable.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the DayTable.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the DayTable.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>headerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>headerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>footerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>footerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>resourceHeadersRowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>resourceHeadersRowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>rowStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>rowClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>timeColumnStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>timeColumnClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>timePattern</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "H" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>timeSuffixPattern</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "mm" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>majorTimeInterval</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 60 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>minorTimeInterval</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 60 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>showTimeForMinorIntervals</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>majorTimeStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>majorTimeClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>minorTimeStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>minorTimeClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>timeSuffixStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>timeSuffixClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies a color that should be used for all events without explicitl speicified color. See
        TimetableEvent claess'es "color" property.
      </description>
      <name>defaultEventColor</name>
      <deferred-value>
        <type>java.awt.Color</type>
      </deferred-value>
      <!-- @bindingType java.awt.Color -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies a color that should be used for all reserved time events.</description>
      <name>reservedTimeEventColor</name>
      <deferred-value>
        <type>java.awt.Color</type>
      </deferred-value>
      <!-- @bindingType java.awt.Color -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>reservedTimeEventStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>reservedTimeEventClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>Specifies time in milliseconds for smooth transition between time-slots when using drag and drop.
        Smooth transition during drag and drop can be turned off by specifying 0 in this attribute.
      </description>
      <name>dragAndDropTransitionPeriod</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 70 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies time in milliseconds for smooth transition of event rectangle to its original location
        upon an attempt to move an event to a disallowed location (e.g. reserved time). Smooth transition can be turned
        off by specifying 0 in this attribute.
      </description>
      <name>dragAndDropCancelingPeriod</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 200 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies time in milliseconds that is requird to change event highlighting smoothly when
        enters/exits an "undroppable" state, that is when an event is hovered over a disallowed location such as a
        reserved time. Smooth state highlighting transition can be turned off by specifying 0 in this attribute.
      </description>
      <name>undroppableStateTransitionPeriod</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 250 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An event becomes semi-transparent when it enters an undroppable state. An event can have the
        undroppable state in the process of drag and drop when the user moves the event over a disallowed location such
        as a reserved time. An attempt to drop the event in such location will result in returning the event to its
        original location. This attribute specifies the level of event rectangle's transparency in an undroppable state
        in range 0..1. 1 corresponds to the fully transparent event, and 0 means that event's transparency won't be
        affected.
      </description>
      <name>undroppableEventTransparency</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.5 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>resourceColumnSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>resourceHeadersRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>timeColumnSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>primaryRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>secondaryRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>timeColumnPrimaryRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>timeColumnSecondaryRowSeparator</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


  </tag>

  <tag>
    <description>Displays a time-table for one day. A time-table consists of a set of events with different time spans
      arranged within a day.
    </description>
    <name>daySwitcher</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.DaySwitcherJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A value-binding expression that associates the DaySwitcher with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.DaySwitcher</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable.DaySwitcher -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>ID of a DayTable component that should be synchronized with this component. It should be defined in
        the same way as the "for" property of the standard HTMLOutputLabel component. If this attribute is not specified
        then this filter component should be located inside of a DayTable component.
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>This attribute defines which of the predefined date formats for a given locale should be used for
        text.
      </description>
      <name>dateFormat</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "medium" -->
      <!-- @value "short" the same as "SHORT" format in the java.text.DateFormat -->
      <!-- @value "medium" the same as "MEDIUM" format in the java.text.DateFormat -->
      <!-- @value "long" the same as "LONG" format in the java.text.DateFormat -->
      <!-- @value "full" the same as "FULL" format in the java.text.DateFormat -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The date format with the pattern similar to that in the java.text.SimpleDateFormat
        class.
      </description>
      <name>pattern</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>This attribute defines which of the predefined date formats for a given locale should be used for
        upper text.
      </description>
      <name>upperDateFormat</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "medium" -->
      <!-- @value "short" the same as "SHORT" format in the java.text.DateFormat -->
      <!-- @value "medium" the same as "MEDIUM" format in the java.text.DateFormat -->
      <!-- @value "long" the same as "LONG" format in the java.text.DateFormat -->
      <!-- @value "full" the same as "FULL" format in the java.text.DateFormat -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The date format with the pattern similar to that in the
        java.text.SimpleDateFormat class.
      </description>
      <name>upperPattern</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>

    <attribute>
      <description>The locale used by DateChooser component. You can specify the "locale" attribute
        as a value-binding expression or as a String in "ll_CC_vv" format, where:&lt;br/&gt;
        ll stands for the language - lowercase two-letter ISO-639 code.&lt;br/&gt;
        CC stands for the country - uppercase two-letter ISO-3166 code (optional).&lt;br/&gt;
        vv stands for the variant - vendor and browser specific code (optional).&lt;br/&gt;
      </description>
      <name>locale</name>
      <deferred-value>
        <type>java.util.Locale</type>
      </deferred-value>
      <!-- @bindingType java.util.Locale -->
      <!-- @default client's locale -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Time zone in which to interpret any time information in the date String. Value must be either a VB
        expression that evaluates to a java.util.TimeZone instance, or a String that is a timezone ID as described in
        the javadocs for java.util.TimeZone.getTimeZone().
      </description>
      <name>timeZone</name>
      <deferred-value>
        <type>java.util.TimeZone</type>
      </deferred-value>
      <!-- @bindingType java.util.TimeZone -->
      <!-- @default The server's default time zone -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the user can change selection.</description>
      <name>enabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonPressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonPressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>previousButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>nextButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nextButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nextButtonRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nextButtonRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nextButtonPressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nextButtonPressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nextButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>textStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>textClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>textRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>textRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>upperTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>upperTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>upperTextRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>upperTextRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>timetableEvent</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.TimetableEventJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A style for timetable events.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for timetable events.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for timetable events in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for rollover events in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether HTML markup that might be present in vent names should be escaped to avoid
        unintended HTML formatting in a displayed text. Assigning false allows HTML formatting in event names.
      </description>
      <name>escapeName</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies whether HTML markup that might be present in vent descriptions should be escaped to avoid
        unintended HTML formatting in a displayed text. Assigning false allows HTML formatting in event descriptions.
      </description>
      <name>escapeDescription</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nameStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>nameClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>descriptionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>descriptionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Allows customizing transparency effect for events' background. This should be a floating-point number
        in range 0..1. 0 corresponds to fully opaque background, and 1 corresponds to fully transparent background.
      </description>
      <name>backgroundTransparency</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.2 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Event background color is calculated automatically based on event color. This attribute allows
        customizing intensity of event's background color. This should be a floating-point number in range 0..1.
        0 corresponds to a least-intense color -- white, and 1 corresponds to a fully intense color -- a color specified
        for this event. The functionality of automatic calculation of background color can be overridden by
        explicitly specifying background using eventStyle and eventClass attributes.
      </description>
      <name>backgroundIntensity</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.25 -->
      <!-- @el true -->
    </attribute>

    <!-- common client-side events declaration -->
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over a timetable event.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over a timetable event.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over a timetable event with either
        mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto a timetable event.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over a timetable event.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the
        timetable event.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over a timetable event.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed after each event element is created on client-side. This
        callback allows introducing additional customization of event elements based on application requirements.
      </description>
      <name>oncreate</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>eventEditorDialog</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.EventEditorDialogJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A value-binding expression that associates the EventEditorDialog with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.EventEditorDialog</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. EventEditorDialog-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A style for the entire EventEditorDialog component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire EventEditorDialog component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire EventEditorDialog component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire EventEditorDialog component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the user can move the window by dragging its title.
      </description>
      <name>draggable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether the window can be dragged by its content area in addition to the usual
        dragging by window caption. This attribute is only applicable if draggable attribute is set to "true".
      </description>
      <name>draggableByContent</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the dialog is centered on the screen when it is shown. If this
        attribute is set to false then the dialog is shown at a position defined by the left and top CSS attributes
        defined in the dialog's style.
      </description>
      <name>centered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>A style for the visible part of the page which is not covered by the EventEditorDialog component.
      </description>
      <name>modalLayerStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the visible part of the page which is not covered by a EventEditorDialog
        component.
      </description>
      <name>modalLayerClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The x coordinate of the component's upper-left corner
        relative to the upper-left corner of the document or an absolutely
        positioned immediate container of the EventEditorDialog component.
        Note that the "left" attribute should indicate the number of pixels,
        without the postfix "px".
      </description>
      <name>left</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The y coordinate of the component's upper-left corner relative to the upper-left corner of the
        document or an absolutely positioned immediate container of the EventEditorDialog component. Note that the "top"
        attribute
        should indicate the number of pixels, without the postfix "px".
      </description>
      <name>top</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The width of the EventEditorDialog component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>width</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The height of the EventEditorDialog component. Can be specified in any units (px, mm, em, etc.).
      </description>
      <name>height</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimal width that the EventEditorDialog component can have when the user is resizing the window.
        This
        attribute is applicable when "resizable" attribute is set to "true". This attribute can be specified
        in any units (px, mm, em, etc.) except percent.
      </description>
      <name>minWidth</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The minimal height that the EventEditorDialog component can have when the user is resizing the
        window. This
        attribute is applicable when "resizable" attribute is set to "true". This attribute can be specified
        in any units (px, mm, em, etc.) except percent.
      </description>
      <name>minHeight</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the Window title.</description>
      <name>captionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Window title.</description>
      <name>captionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the Window content area.</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the Window content area.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <name>createEventCaption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Create Event" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>editEventCaption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Edit Event" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>nameLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Name:" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>resourceLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Resource:" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>startLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Start:" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>endLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "End:" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>descriptionLabel</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Description:" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>okButtonText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "OK" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>cancelButtonText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Cancel" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>deleteButtonText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>labelStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>labelClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>okButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>okButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>cancelButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>cancelButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>deleteButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>deleteButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "Delete" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the EventEditorDialog
        component is displayed on the client side.
      </description>
      <name>onshow</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the EventEditorDialog component is hidden on the client
        side.
      </description>
      <name>onhide</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the EventEditorDialog.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the EventEditorDialog.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the EventEditorDialog with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the
        EventEditorDialog.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the
        EventEditorDialog.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the EventEditorDialog.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the
        EventEditorDialog.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the EventEditorDialog.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the EventEditorDialog.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the EventEditorDialog.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>customEventEditor</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.CustomEventEditorJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A value-binding expression that associates the EventEditorPage with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.CustomEventEditor</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. CustomEventEditor-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>JavaScript code that should show the custom editor for event creation.
      </description>
      <name>oncreate</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should show the custom editor for event editing.
      </description>
      <name>onedit</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>


  <tag>
    <name>eventActionBar</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.EventActionBarJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A style for the EventActionBar component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventActionBar component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>noteText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Color of an action bar is automatically calculated based on the appropriate event's color. This
        attribute allows customizing action bar's background color intensity. This should be a floating-point number
        in range 0..1. 1 corresponds to fully intense color, the same as event color, and 0 corresponds the least
        intense color, white. The functionality of automatic calculation of background color can be overridden by
        explicitly specifying background using style and styleClass attributes.
      </description>
      <name>backgroundIntensity</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.5 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This attribute allows customizing background color intensity for action bar's buttons in the
        rollover state. This should be a floating-point number in range 0..1. 1 corresponds to fully intense color, the
        same as event color, and 0 corresponds the least intense color, white. The functionality of automatic
        calculation of background color can be overridden by explicitly specifying background using styling attributes
        in eventAction tag.
      </description>
      <name>actionRolloverBackgroundIntensity</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.75 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>This attribute allows customizing background color intensity for action bar's buttons in the pressed
        state. This should be a floating-point number in range 0..1. 1 corresponds to fully intense color, the same as
        event color, and 0 corresponds the least intense color, white. The functionality of automatic
        calculation of background color can be overridden by explicitly specifying background using styling attributes
        in eventAction tag.
      </description>
      <name>actionPressedBackgroundIntensity</name>
      <deferred-value>
        <type>java.lang.Double</type>
      </deferred-value>
      <!-- @bindingType double -->
      <!-- @default 0.75 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the EventActionBar.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the EventActionBar.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the EventActionBar with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the
        EventActionBar.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the
        EventActionBar.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the EventActionBar.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the EventActionBar.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the EventActionBar.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the EventActionBar.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the EventActionBar.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>eventArea</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.EventAreaJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A style for the EventArea component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventArea component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>horizontalAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. HorizontalAlignment -->
      <!-- @default "left" -->
      <!-- @value "leftOutside" makes an area to be displayed to the left of an event rectangle -->
      <!-- @value "left" makes the left edge of an area to be algined with the left edge of an event rectangle -->
      <!-- @value "center" makes an area centered horizontally relative to an event rectangle -->
      <!-- @value "right" makes the right edge of an area to be algined with the right edge of an event rectangle -->
      <!-- @value "rightOutside" makes an area to be displayed to the right of an event rectangle -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>verticalAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. VerticalAlignment -->
      <!-- @default "below" -->
      <!-- @value "above" makes an area to be displayed above an event rectangle -->
      <!-- @value "top" makes the top edge of an area to be algined with the top edge of an event rectangle -->
      <!-- @value "center" makes an area centered vertically relative to an event rectangle -->
      <!-- @value "bottom" makes the bottom edge of an area to be algined with the bottom edge of an event rectangle -->
      <!-- @value "below" makes an area to be displayed below an event rectangle -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the EventArea.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the EventArea.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks
        over the EventArea with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the EventArea.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the EventArea.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the EventArea.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the EventArea.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the EventArea.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the EventArea.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the EventArea.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>eventAction</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.EventActionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the EventAction with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.EventAction</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. EventAction -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A style for the EventAction component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventAction component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the EventAction component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventAction component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the EventAction component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventAction component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>imageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>rolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>pressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies the text that will be shown in a tool-tip when the mouse hovers over this action button.
      </description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the event action button.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Similar to the "actionListener" attribute of the HTMLCommandButton component.
        A MethodBinding that should point to an action listener that is called when the user invokes this action.
      </description>
      <name>actionListener</name>
      <deferred-method>
        <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>deleteEventAction</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.DeleteEventActionJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the EventAction with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.EventAction</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. EventAction -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Specifies the text that will be shown in a tool-tip when the mouse hovers over this action button.
      </description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A boolean value that specifies whether confirmation should be shown before deleting the event.
      </description>
      <name>showConfirmation</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the EventAction component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventAction component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the EventAction component in a rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventAction component in a rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the EventAction component in a pressed state.</description>
      <name>pressedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the EventAction component in a pressed state.</description>
      <name>pressedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>imageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>rolloverImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>pressedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Specifies the text that will be shown in a tool-tip when the mouse hovers over this action button.
      </description>
      <name>hint</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <name>eventEditorPage</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.EventEditorPageJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>A value-binding expression that associates the EventEditorPage with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.timetable.EventEditorPage</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. EventEditorPage -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>URL of a page that should be used for editing timetable event.</description>
      <name>url</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>action</name>
      <deferred-method>
        <method-signature>java.lang.Object action()</method-signature>
      </deferred-method>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>modeParamName</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "mode" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>eventIdParamName</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "eventId" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>eventStartParamName</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "eventStart" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>eventEndParamName</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "eventEnd" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>resourceIdParamName</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "resourceId" -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>Allows customizing various aspects of timetable editing behavior.</description>
    <name>timetableEditingOptions</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.TimetableEditingOptionsJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Assigning false to this attribute makes it impossible for a user to create events with intersecting
        time spans. Note that events belonging to different resources are considered independent and this attribute
        doesn't prohibit simultaneous events for different resources.
      </description>
      <name>overlappedEventsAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Assigning false to this attribute makes it impossible for a user to move events between resources.
      </description>
      <name>eventResourceEditable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Assigning false to this attribute makes it impossible for a user to change event durations.
      </description>
      <name>eventDurationEditable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Event duration in minutes that is assigned to newly created events by default.</description>
      <name>defaultEventDuration</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 30 -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that defines whether the events are to be saved automatically as a user edits them (true),
        or event changes should be saved only as a result of form submission (false).
      </description>
      <name>autoSaveChanges</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>

  </tag>

  <tag>
    <description>Turns on and allows customizing the box that is displayed when the mouse hovers over the event to show
      event contents that might not fully fit in the normal event display.
    </description>
    <name>eventPreview</name>
    <tag-class>org.openfaces.taglib.jsp.timetable.EventPreviewJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <name>eventNameStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>eventNameClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>eventDescriptionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>eventDescriptionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>horizontalAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. HorizontalAlignment -->
      <!-- @default "left" -->
      <!-- @value "leftOutside" makes a preview to be displayed to the left of an event rectangle -->
      <!-- @value "left" makes the left edge of a preview to be algined with the left edge of an event rectangle -->
      <!-- @value "center" makes a preview centered horizontally relative to an event rectangle -->
      <!-- @value "right" makes the right edge of a preview to be algined with the right edge of an event rectangle -->
      <!-- @value "rightOutside" makes a preview to be displayed to the right of an event rectangle -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <name>verticalAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.timetable. VerticalAlignment -->
      <!-- @default "below" -->
      <!-- @value "above" makes a preview to be displayed above an event rectangle -->
      <!-- @value "top" makes the top edge of a preview to be algined with the top edge of an event rectangle -->
      <!-- @value "center" makes a preview centered vertically relative to an event rectangle -->
      <!-- @value "bottom" makes the bottom edge of a preview to be algined with the bottom edge of an event rectangle -->
      <!-- @value "below" makes a preview to be displayed below an event rectangle -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Distance against the alignment edge that is specified with horizontalAlignment attribute. Can be
        specified in any fixed CSS units. This attribute is applicable for all alignments except "center".
      </description>
      <name>horizontalDistance</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "0" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Distance against the alignment edge that is specified with verticalAlignment attribute. Can be
        specified in any fixed CSS units. This attribute is applicable for all alignments except "center".
      </description>
      <name>verticalDistance</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "10px" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Delay in milliseconds that specifies how much time should pass after hoving an element with mouse
        before showing the event preview.
      </description>
      <name>showingDelay</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 400 -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- BORDER LAYOUT PANE TAG DECLARATION -->
  <tag>
    <description>The BorderLayoutPanel component is a container that is composed of several SidePanels and a central
      "content" area. A content area takes all of free space that remains after all SidePanels were placed.
    </description>
    <name>borderLayoutPanel</name>
    <tag-class>org.openfaces.taglib.jsp.panel.BorderLayoutPanelJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the BorderLayoutPanel with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.panel.BorderLayoutPanel</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.panel.BorderLayoutPanel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A style for the entire BorderLayoutPanel container.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire BorderLayoutPanel container in rollover state</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the BorderLayoutPanel's content area.</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire BorderLayoutPanel container.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A ClassName for the entire BorderLayoutPanel container in rollover state</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the BorderLayoutPanel's content area.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when content width or height was changed.</description>
      <name>oncontentresize</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the BorderLayoutPanel.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the BorderLayoutPanel.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the BorderLayoutPanel with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the
        BorderLayoutPanel.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the
        BorderLayoutPanel.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the BorderLayoutPanel.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the BorderLayoutPanel.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the BorderLayoutPanel.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the BorderLayoutPanel.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the BorderLayoutPanel.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <tag>
    <description>The sidePanel component is one side resizable container.</description>
    <name>sidePanel</name>
    <tag-class>org.openfaces.taglib.jsp.panel.SidePanelJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the SidePanel with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.panel.SidePanel</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.borderlayoutpanel. SidePanel -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>Specify width of SidePanel when alignment specified as "left" or "right" or height of SidePanel when
        alignment specified as "top" or "bottom"
      </description>
      <name>size</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "50%" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A limitation of SidePanel size take's into account when user moves SidePanel splitter or calling
        O$.resizeSidePanel JavaScript function. By default its value calculating via splitter size (splitter outer width
        for SidePanels with "left" or "rigth" alignment or splittser outer height for SidePanels with "top" or "bottom"
        alignment).
      </description>
      <name>minSize</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default splitter size-->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A limitation of SidePanel size take's into account when user moves SidePanel splitter or calling
        O$.resizeSidePanel JavaScript function.
      </description>
      <name>maxSize</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default "100%" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specify SidePanel resizing direction and splitter position.</description>
      <name>alignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.borderlayoutpanel. SidePanelAlignment -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @value "top" -->
      <!-- @value "bottom" -->
      <!-- @default "left" -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The text that should be displayed in the caption. This is a convenient alternative for using
        the "caption" facet. If both "caption" facet and "caption" attribute is specified, the content specified in the
        facet is used.
      </description>
      <name>caption</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the entire SidePanel component except the splitter area.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the entire SidePanel component except the splitter area in the rollover state.
      </description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the SidePanel's caption area</description>
      <name>captionStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the SidePanel's content area</description>
      <name>contentStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the SidePanel's splitter area.</description>
      <name>splitterStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the SidePanel's splitter area in the rollover state</description>
      <name>splitterRolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the entire SidePanel component except the splitter area</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the entire SidePanel component except the splitter area in the rollover state.
      </description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the SidePanel's caption area.</description>
      <name>captionClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the SidePanel's content area.</description>
      <name>contentClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the SidePanel's splitter area.</description>
      <name>splitterClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name of the SidePanel's splitter area in the rollover state.</description>
      <name>splitterRolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates is it splitter draggable ability enabled.</description>
      <name>resizable</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates is it SidePanel collapsing on splitter mouse click ability enabled.
      </description>
      <name>collapsible</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates is it SidePanel initially stay in collapsed state.</description>
      <name>collapsed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user change SidePanel size by splitter
        dragging.
      </description>
      <name>onsplitterdrag</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the SidePanel become to a collapsed state.
      </description>
      <name>oncollapse</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the SidePanel restore from a collapsed
        state.
      </description>
      <name>onrestore</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the SidePanel.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the SidePanel.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the SidePanel with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the SidePanel.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the SidePanel.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the SidePanel.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the SidePanel.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the SidePanel receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the SidePanel loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the SidePanel.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the SidePanel.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the SidePanel.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- SPINNER TAG DECLARATION -->
  <tag>
    <name>spinner</name>
    <tag-class>org.openfaces.taglib.jsp.input.SpinnerJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the Spinner with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.input.Spinner</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.input.Spinner-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current value of the Spinner component that is displayed in the text field.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the Spinner requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An advisory title for the text field of the Spinner component.</description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component. Used when constructing validation messages for
        this component in the same way as for the standard &lt;h:inputText> component.
      </description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.</description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An access key for the Spinner component.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Allows disabling typing in the the value with keyboard so the user will only be able to use the
        up/down butttons to select the value if this attribute is set to false.
      </description>
      <name>typingAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>cycled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>minValue</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Number -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>maxValue</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Number -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>step</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Number -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>disabledIncreaseButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>disabledDecreaseButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>increaseButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>decreaseButtonImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Defines whether the buttons is positioned to the right or to the left of the text field.
      </description>
      <name>buttonAlignment</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.Side -->
      <!-- @default "right" -->
      <!-- @value "left" -->
      <!-- @value "right" -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the entire Spinner component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Spinner component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Spinner component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire Spinner component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the entire Spinner component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the entire Spinner component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the Spinner component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the Spinner component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field.</description>
      <name>fieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field.</description>
      <name>fieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the rollover state.</description>
      <name>rolloverFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field in the rollover state.</description>
      <name>rolloverFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the text field in the disabled state.</description>
      <name>disabledFieldStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the text field in the disabled state.</description>
      <name>disabledFieldClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for increase/decrease value buttons.</description>
      <name>buttonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for increase/decrease value buttons.</description>
      <name>buttonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for increase/decrease value buttons in the rollover state.</description>
      <name>rolloverButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for increase/decrease value buttons in the rollover state.</description>
      <name>rolloverButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for increase/decrease value buttons in the disabled state.</description>
      <name>disabledButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for increase/decrease value buttons in the disabled state.</description>
      <name>disabledButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for increase/decrease value buttons in the pressed state.</description>
      <name>pressedButtonStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for increase/decrease value buttons in the pressed state.</description>
      <name>pressedButtonClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>This prompt text will be shown when value of component is empty.</description>
      <name>promptText</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the prompt text.</description>
      <name>promptTextStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A CSS class name for the prompt text.</description>
      <name>promptTextClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the Spinner's value has changed.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the Spinner.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the Spinner.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the Spinner.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the Spinner with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the Spinner.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the Spinner.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the Spinner.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the Spinner.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the Spinner receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the Spinner loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the Spinner.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the Spinner.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed when the user change the Spinner value.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

  <!-- FOREACH TAG DECLARATION -->
  <tag>
    <description>An iterator component that renders the specified set of components multiple times based on its
      parameters
    </description>
    <name>forEach</name>
    <tag-class>org.openfaces.taglib.jsp.util.ForEachJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the ForEach with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.util.ForEach</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util.ForEach-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>An value-binding expression that specifies the collection that iterate for. The items can be of any
        type adaptable to UIData: array, collection, javax.servlet.jsp.jstl.sql.Result, java.sql.ResultSet, Object
        (scalar data).
      </description>
      <name>items</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Iteration start index. Defaults to 0 if not specified.</description>
      <name>begin</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Iteration end index. Defaults to Integer.MAX_VALUE (2147483647) if not specified.</description>
      <name>end</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 2147483647 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Iteration step index. Defaults to 1 if not specified.</description>
      <name>step</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 1 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Name of the request-scope variable under which the current iteration step object is available.
      </description>
      <name>var</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Name of the request-scope variable under which the current iteration status object (of type
        org.openfaces.component.util.IterationStatus) is available.
      </description>
      <name>varStatus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Allows specifying the name of the tag that the iterated content should be wrapped into. By default
        no outer tag is rendered unless outer-tag-specific attributes are specified (id, style or styleClass), in which
        case the default &lt;span&gt; outer tag is rendered even if no wrapperTagName is specified.
      </description>
      <name>wrapperTagName</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style of the entire ForEach component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the entire ForEach component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the ForEach component.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the ForEach component.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the ForEach component with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the
        ForEach component.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the
        ForEach component.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the ForEach component.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button
        over the ForEach component.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the ForEach component receives focus.</description>
      <name>onfocus</name>

      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the ForEach component loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the ForEach component.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the ForEach component.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the ForEach component.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- SelectBooleanCheckbox TAG DECLARATION -->
  <tag>
    <description>The SelectBooleanCheckbox component is an extended version of the standard
      &lt;h:selectBooleanCheckbox&gt; component that adds such possibilities as tri-state support, customizing checkbox
      images and state-dependent styles.
    </description>
    <name>selectBooleanCheckbox</name>
    <tag-class>org.openfaces.taglib.jsp.select.SelectBooleanCheckboxJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the SelectBooleanCheckbox with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.select.SelectBooleanCheckbox</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select.SelectBooleanCheckbox-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current value of the SelectBooleanCheckbox component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
      <!-- @bindingType java.lang.Boolean -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the SelectBooleanCheckbox requires a value.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component.</description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the SelectBooleanCheckbox component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the SelectBooleanCheckbox component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the SelectBooleanCheckbox component in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the SelectBooleanCheckbox component in the disabled state.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the SelectBooleanCheckbox component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the SelectBooleanCheckbox component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style of the SelectBooleanCheckbox component when it is focused.</description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name of the SelectBooleanCheckbox component when it is focused.</description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the value of the SelectBooleanCheckbox has
        changed.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the SelectBooleanCheckbox.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the SelectBooleanCheckbox.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the SelectBooleanCheckbox.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks over
        the SelectBooleanCheckbox with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the
        SelectBooleanCheckbox.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the
        SelectBooleanCheckbox.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the
        SelectBooleanCheckbox.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases the mouse button over the
        SelectBooleanCheckbox.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the SelectBooleanCheckbox receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the SelectBooleanCheckbox loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the SelectBooleanCheckbox.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the SelectBooleanCheckbox.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>An access key for the SelectBooleanCheckbox component.
      </description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of the component in the focus transition chain for the current document.
      </description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An advisory title for the SelectBooleanCheckbox component.
      </description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Language code for this component. Rendered as the HTML lang attribute.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the SelectOneRadio component is selected by the user.</description>
      <name>onselect</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A flag that indicates whether or not the third undefined state
        is available.
      </description>
      <name>triStateAllowed</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>
        A sequence of states the user is allowed to cycle through.
        Can contain state constants : 'selected', 'unselected' and 'undefined'.
        Evaluates to Iterable of String. If a literal is specified the states must be space delimited.
      </description>
      <name>stateList</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the selected state of the SelectBooleanCheckbox.
      </description>
      <name>selectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the unselected state of the SelectBooleanCheckbox.
      </description>
      <name>unselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the undefined state of the SelectBooleanCheckbox.
      </description>
      <name>undefinedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the selected and rolled over state of the SelectBooleanCheckbox.
      </description>
      <name>rolloverSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the unselected and rolled over state of the SelectBooleanCheckbox.
      </description>
      <name>rolloverUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the undefined and rolled over state of the SelectBooleanCheckbox.
      </description>
      <name>rolloverUndefinedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the selected and pressed state of the SelectBooleanCheckbox.
      </description>
      <name>pressedSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the unselected and pressed state of the SelectBooleanCheckbox.
      </description>
      <name>pressedUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the undefined and pressed state of the SelectBooleanCheckbox.
      </description>
      <name>pressedUndefinedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the selected and disabled state of the SelectBooleanCheckbox.
      </description>
      <name>disabledSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the unselected and disabled state of the SelectBooleanCheckbox.
      </description>
      <name>disabledUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file that is used to render the image
        that corresponds to the undefined and disabled state of the SelectBooleanCheckbox.
      </description>
      <name>disabledUndefinedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the SelectBooleanCheckbox component in the selected state.</description>
      <name>selectedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the SelectBooleanCheckbox component in the selected state.</description>
      <name>selectedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the SelectBooleanCheckbox component in the unselected state.</description>
      <name>unselectedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the SelectBooleanCheckbox component in the unselected state.</description>
      <name>unselectedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the SelectBooleanCheckbox component in the undefined state.</description>
      <name>undefinedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the SelectBooleanCheckbox component in the undefined state.</description>
      <name>undefinedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- SelectOneRadio TAG DECLARATION -->

  <tag>
    <description><![CDATA[   ]]></description>
    <name>selectOneRadio</name>
    <tag-class>org.openfaces.taglib.jsp.select.SelectOneRadioJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier for this component. This value must be unique within the
        closest parent component that is a naming container.
      </description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Flag that indicates whether or not valueChangeListener
        should be executed immediately (during the Apply Request Values phase of the
        request processing life-cycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during
        the Apply Request Values phase of the request processing life-cycle
        instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the DropDownField changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the DropDownField's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the DrowDownField's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Flag indicating that this component will prohibit changes by the user.
        The element may receive focus unless it has also been disabled. A value of false
        causes no attribute to be rendered, while a value of true causes the attribute to
        be rendered as readonly="readonly".
      </description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Width (in pixels) of the border to be drawn around the table containing the options list.
      </description>
      <name>border</name>
      <deferred-value>
        <type>java.lang.Integer</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Orientation of the options list to be created.
        Valid values are "pageDirection" (list is laid out vertically),
        or "lineDirection" (list is laid out horizontally).
        If not specified, the default value is "lineDirection".
      </description>
      <name>layout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value-binding expression that associates the SelectOneRadio with a backing bean
        property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.select.SelectOneRadio</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select.SelectOneRadio-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current value of the SelectOneRadio component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.Boolean -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Flag indicating that the user is required to provide a submitted
        value for this input component.
      </description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component.</description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is rendered.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is rendered. This value must be passed through
        as the "class" attribute on generated markup.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the enabled state.</description>
      <name>enabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the enabled state. This value must be passed through
        as the "class" attribute on generated markup.
      </description>
      <name>enabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the disabled state. This value must be passed through
        as the "class" attribute on generated markup.
      </description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the rollover state,
        i.e. when pointer is over this component.
      </description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the rollover state, i.e. when pointer is over this component.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the focused state,
        i.e. when focus is set to this component.
      </description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the focused state, i.e. focus is set to this component.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Javascript code executed when this element loses focus
        and its value has been modified since gaining focus.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Javascript code executed when a key is pressed and released over this component.</description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user clicks the pointer button over the SelectOneRadio.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed on the client when the user double-clicks
        the pointer button over the SelectOneRadio.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a pointer button is pressed down over the SelectOneRadio.</description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a pointer is moved onto the SelectOneRadio.</description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user moves a pointer within the SelectOneRadio.</description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user moves a pointer away from the SelectOneRadio.</description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user releases the mouse button over the SelectOneRadio.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the SelectOneRadio receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the SelectOneRadio loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a key is pressed down over the SelectOneRadio.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a key is released over the SelectOneRadio.</description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Access key that, when pressed, transfers focus to this element.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of this element in the tabbing order for the current document.
        This value must be an integer between 0 and 32767.
      </description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Advisory title information about markup elements generated for this component.
      </description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Code describing the language used in the generated markup for this component.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when text within the component is selected by the user.
      </description>
      <name>onselect</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>URL to the image file, corresponding to the selected state of the SelectOneRadio.</description>
      <name>selectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the unselected state of the SelectOneRadio.</description>
      <name>unselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the rolled over state of the selected component.
      </description>
      <name>rolloverSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the rolled over state of the unselected component.
      </description>
      <name>rolloverUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the pressed state of the selected SelectOneRadio.
      </description>
      <name>pressedSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the pressed state of the unselected SelectOneRadio.
      </description>
      <name>pressedUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the disabled state of the selected SelectOneRadio.
      </description>
      <name>disabledSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the disabled state of the unselected SelectOneRadio.
      </description>
      <name>disabledUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the focused state.</description>
      <name>focusedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the focused state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>focusedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the selected state.</description>
      <name>selectedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the selected state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>selectedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the rollover state.</description>
      <name>rolloverItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the rollover state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>rolloverItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the pressed state.</description>
      <name>pressedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the pressed state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>pressedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>

  <!-- SelectManyCheckbox TAG DECLARATION -->

  <tag>
    <description><![CDATA[   ]]></description>
    <name>selectManyCheckbox</name>
    <tag-class>org.openfaces.taglib.jsp.select.SelectManyCheckboxJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier for this component. This value must be unique within the
        closest parent component that is a naming container.
      </description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Flag that indicates whether or not valueChangeListener
        should be executed immediately (during the Apply Request Values phase of the
        request processing life-cycle instead of Process Validations phase) and the
        component's input should be converted and validated immediately (during
        the Apply Request Values phase of the request processing life-cycle
        instead of the Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method that accepts
        a ValueChangeEvent. If the value of the SelectManyCheckbox changes, this method is executed.
      </description>
      <name>valueChangeListener</name>
      <deferred-method>
        <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A MethodBinding that should point to the method in the backing bean
        that is called to validate the SelectManyCheckbox's value.
      </description>
      <name>validator</name>
      <deferred-method>
        <method-signature>
          void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
        </method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A converter for the SelectManyCheckbox's value. Should be specified as
        a value-binding expression or converter identifier.
      </description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Flag indicating that this component will prohibit changes by the user.
        The element may receive focus unless it has also been disabled. A value of false
        causes no attribute to be rendered, while a value of true causes the attribute to
        be rendered as readonly="readonly".
      </description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Width (in pixels) of the border to be drawn around the table containing the options list.
      </description>
      <name>border</name>
      <deferred-value>
        <type>java.lang.Integer</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Orientation of the options list to be created.
        Valid values are "pageDirection" (list is laid out vertically),
        or "lineDirection" (list is laid out horizontally).
        If not specified, the default value is "lineDirection".
      </description>
      <name>layout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The value-binding expression that associates the SelectManyCheckbox with a backing bean
        property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.select.SelectManyCheckbox</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.select.SelectManyCheckbox-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The current value of the SelectManyCheckbox component.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType list of Object -->
      <!-- @bindingType array of Object -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Flag indicating that the user is required to provide a submitted
        value for this input component.
      </description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A flag that enables or disables the component.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A localized user presentable name for this component.</description>
      <name>label</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is rendered.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is rendered. This value must be passed through
        as the "class" attribute on generated markup.
      </description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the enabled state.</description>
      <name>enabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the enabled state. This value must be passed through
        as the "class" attribute on generated markup.
      </description>
      <name>enabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the disabled state.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the disabled state. This value must be passed through
        as the "class" attribute on generated markup.
      </description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the rollover state,
        i.e. when pointer is over this component.
      </description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the rollover state, i.e. when pointer is over this component.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when this component is in the focused state,
        i.e. when focus is set to this component.
      </description>
      <name>focusedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when this element is in the focused state, i.e. focus is set to this component.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>focusedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Javascript code executed when this element loses focus
        and its value has been modified since gaining focus.
      </description>
      <name>onchange</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Javascript code executed when a key is pressed and released over this component.</description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user clicks the pointer button over the SelectManyCheckbox.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed on the client when the user double-clicks
        the pointer button over the SelectOneRadio.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a pointer button is pressed down over the SelectManyCheckbox.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a pointer is moved onto the SelectManyCheckbox.</description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user moves a pointer within the SelectManyCheckbox.</description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user moves a pointer away from the SelectManyCheckbox.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the user releases the mouse button over the SelectManyCheckbox.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the SelectManyCheckbox receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when the SelectManyCheckbox loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a key is pressed down over the SelectManyCheckbox.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code executed when a key is released over the SelectManyCheckbox.</description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>Access key that, when pressed, transfers focus to this element.</description>
      <name>accesskey</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Position of this element in the tabbing order for the current document.
        This value must be an integer between 0 and 32767.
      </description>
      <name>tabindex</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Advisory title information about markup elements generated for this component.
      </description>
      <name>title</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The base direction of directionally neutral text. Valid values are "LTR" (left-to-right) and "RTL"
        (right-to-left).
      </description>
      <name>dir</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Code describing the language used in the generated markup for this component.</description>
      <name>lang</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when text within the component is selected by the user.
      </description>
      <name>onselect</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>


    <attribute>
      <description>URL to the image file, corresponding to the selected state of the SelectManyCheckbox.</description>
      <name>selectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the unselected state of the SelectManyCheckbox.</description>
      <name>unselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the rolled over state of the selected component.
      </description>
      <name>rolloverSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the rolled over state of the unselected component.
      </description>
      <name>rolloverUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the pressed state of the selected SelectManyCheckbox.
      </description>
      <name>pressedSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the pressed state of the unselected SelectManyCheckbox.
      </description>
      <name>pressedUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the disabled state of the selected SelectManyCheckbox.
      </description>
      <name>disabledSelectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>URL to the image file, corresponding to the disabled state of the unselected SelectManyCheckbox.
      </description>
      <name>disabledUnselectedImageUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the focused state.</description>
      <name>focusedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the focused state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>focusedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the selected state.</description>
      <name>selectedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the selected state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>selectedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the rollover state.</description>
      <name>rolloverItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the rollover state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>rolloverItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>CSS style(s) to be applied when an item of this component is in the pressed state.</description>
      <name>pressedItemStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Space-separated list of CSS style class(es) to be applied
        when an item of this component is in the pressed state.
        This value must be passed through as the "class" attribute on generated markup.
      </description>
      <name>pressedItemClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType Object -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>


  <tag>
    <name>validateAll</name>
    <tag-class>org.openfaces.taglib.jsp.validation.AnnotationValidationJspTag</tag-class>
    <body-content>JSP</body-content>
  </tag>

  <!-- COMPOSITE FILTER TAG DECLARATION -->
  <tag>
    <name>compositeFilter</name>
    <tag-class>org.openfaces.taglib.jsp.filter.CompositeFilterJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the CompositeFilter with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.filter.CompositeFilter</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter.CompositeFilter-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A style for the CompositeFilter.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the CompositeFilter.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>ID of a filterable component that should be filtered with this component. It should be defined in
        the same way as the "for" property of the standard HTMLOutputLabel component.
      </description>
      <name>for</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>
        A flag that indicates whether or not the component should automatically detect a list of
        properties from a filterable component defined by "for" attribute.
      </description>
      <name>autoDetect</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Set of criteria.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter. CompositeFilterCriterion -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>No filter text.</description>
      <name>noFilterMessage</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A map where custom operation name texts can be supplied, e.g. for localization purposes.
      </description>
      <name>labels</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType Map<String, String> -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
  </tag>

  <!-- FILTER PROPERTY TAG DECLARATION -->
  <tag>
    <name>filterProperty</name>
    <tag-class>org.openfaces.taglib.jsp.filter.FilterPropertyJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the FilterProperty with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.filter.FilterProperty</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.filter.FilterProperty-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description></description>
      <name>name</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @required true-->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Property type (tetx, number, date or select)</description>
      <name>type</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @required true-->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Display name for property.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @required true-->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Specifies a data provider.</description>
      <name>dataProvider</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType array -->
      <!-- @bindingType java.util.Collection -->
      <!-- @bindingType java.sql.ResultSet -->
      <!-- @bindingType javax.servlet.jsp.jstl.sql.Result -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>Converter</description>
      <name>converter</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>minValue</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Number -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>maxValue</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Number -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>
      </description>
      <name>step</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType java.lang.Number -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The date format with the pattern similar to that in the java.text.SimpleDateFormat class.
      </description>
      <name>pattern</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>Time zone in which to interpret any time information in the date String. Value must be either a VB
        expression that evaluates to a java.util.TimeZone instance, or a String that is a timezone ID as described in
        the javadocs for java.util.TimeZone.getTimeZone().
      </description>
      <name>timeZone</name>
      <deferred-value>
        <type>java.util.TimeZone</type>
      </deferred-value>
      <!-- @bindingType java.util.TimeZone -->
      <!-- @default The server's default time zone -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description></description>
      <name>caseSensitive</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el false -->
    </attribute>

  </tag>
  <tag>
    <description>A menu item that can be inserted into the column menu for DataTable/TreeTable components to provide
      colum sorting capability.
    </description>
    <name>sortAscendingMenuItem</name>
    <tag-class>org.openfaces.taglib.jsp.table.SortAscendingMenuItemJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A value-binding expression that associates the menu item with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.SortAscendingMenuItem</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table.SortAscendingMenuItem-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The string that displays as text of the menu item.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the menu item.</description>
      <name>iconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the disabled menu item.</description>
      <name>disabledIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the selected menu item.</description>
      <name>selectedIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the menu item.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the menu item in selected state.</description>
      <name>selectedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item in selected state.</description>
      <name>selectedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the disabled menu item.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the disabled menu item.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for content of the menu item.</description>
      <name>contentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of the menu item.</description>
      <name>contentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for indent area of the menu item.</description>
      <name>indentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the menu item.</description>
      <name>indentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the menu item.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the menu item.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the button with either mouse menu item.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the menu item.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the menu item.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the menu
        item.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the menu item.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the menu item receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the menu item loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the menu item.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the menu item.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
  </tag>
  <tag>
    <description>A menu item that can be inserted into the column menu for DataTable/TreeTable components to provide
      colum sorting capability.
    </description>
    <name>sortDescendingMenuItem</name>
    <tag-class>org.openfaces.taglib.jsp.table.SortDescendingMenuItemJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A value-binding expression that associates the menu item with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.SortDescendingMenuItem</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table.SortDescendingMenuItem-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The string that displays as text of the menu item.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the menu item.</description>
      <name>iconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the disabled menu item.</description>
      <name>disabledIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the selected menu item.</description>
      <name>selectedIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the menu item.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the menu item in selected state.</description>
      <name>selectedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item in selected state.</description>
      <name>selectedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the disabled menu item.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the disabled menu item.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for content of the menu item.</description>
      <name>contentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of the menu item.</description>
      <name>contentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for indent area of the menu item.</description>
      <name>indentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the menu item.</description>
      <name>indentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the menu item.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the menu item.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the button with either mouse menu item.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the menu item.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the menu item.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the menu
        item.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the menu item.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the menu item receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the menu item loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the menu item.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the menu item.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>
  <tag>
    <description>A menu item that can be inserted into the column menu of DataTable/TreeTable components to provide
      column hiding capability.
    </description>
    <name>hideColumnMenuItem</name>
    <tag-class>org.openfaces.taglib.jsp.table.HideColumnMenuItemJspTag</tag-class>
    <body-content>JSP</body-content>

    <attribute>
      <description>A value-binding expression that associates the menu item with a backing bean property.</description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.table.SortDescendingMenuItem</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.table.SortDescendingMenuItem-->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>The string that displays as text of the menu item.</description>
      <name>value</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the menu item.</description>
      <name>iconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the disabled menu item.</description>
      <name>disabledIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>An URL of image for the selected menu item.</description>
      <name>selectedIconUrl</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>A style for the menu item.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the menu item in selected state.</description>
      <name>selectedStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the menu item in selected state.</description>
      <name>selectedClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the disabled menu item.</description>
      <name>disabledStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the disabled menu item.</description>
      <name>disabledClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for content of the menu item.</description>
      <name>contentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for content of the menu item.</description>
      <name>contentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for indent area of the menu item.</description>
      <name>indentAreaStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for indent area of the menu item.</description>
      <name>indentAreaClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the menu item.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the menu item.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the button with either mouse menu item.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the menu item.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the menu item.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer away from the menu
        item.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the menu item.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the menu item receives focus.</description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the menu item loses focus.</description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key over the menu item.</description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the menu item.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>
  <tag>
    <description>The LayeredPane component is a container which allows switching between different sets of displayed
      components. Each set of components, called a page, is declared within the LayeredPane component and it's
      possible to use both server-side and client-side API for selecting the currently displayed page. LayeredPane
      provides different page loading modes to allow quick client-side switching or Ajax-based page switching.
    </description>
    <name>layeredPane</name>
    <tag-class>org.openfaces.taglib.jsp.panel.LayeredPaneJspTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The component identifier.</description>
      <name>id</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el false -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the component is visible.</description>
      <name>rendered</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default true -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A value-binding expression that associates the LayeredPane component with a backing bean property.
      </description>
      <name>binding</name>
      <deferred-value>
        <type>org.openfaces.component.panel.LayeredPane</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.panel. LayeredPane -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>

    <attribute>
      <description>A style for the entire LayeredPane component.</description>
      <name>style</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the entire LayeredPane component.</description>
      <name>styleClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A style for the LayeredPane component in the rollover state.</description>
      <name>rolloverStyle</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>A CSS class name for the LayeredPane component in the rollover state.</description>
      <name>rolloverClass</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>The way the data in the LayeredPane component is loaded.</description>
      <name>loadingMode</name>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
      <!-- @bindingType org.openfaces.component.util. LoadingMode -->
      <!-- @default "ajaxLazy" -->
      <!-- @value "client" The content of all pages is loaded to the client side on the first page load. So when a page 
                  is selected no content needs to be loaded from the server. -->
      <!-- @value "ajaxLazy"  The page content is retrieved from the server with Ajax request upon
                  the first switch to the page. Once requested, the content is stored on the client and is shown without
                  additional server requests. -->
      <!-- @value "ajaxAlways"  The page content is retrieved from the server with Ajax request on every switch to the
                   page.-->
      <!-- @value "server"  Every time a when selecting a page, the whole browser's page is reloaded to show the
                  LayeredPane's page content. -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>The index of a currently selected page. The value "0" means that the first page is selected.
      </description>
      <name>selectedIndex</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
      <!-- @bindingType int -->
      <!-- @default 0 -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>Enables handling of page selection on the server side. This attribute is MethodBinding that must
        point
        to the method that accepts a org.openfaces.event.SelectionChangeEvent.
      </description>
      <name>selectionChangeListener</name>
      <deferred-method>
        <method-signature>void selectionChangeListener(org.openfaces.event.SelectionChangeEvent)</method-signature>
      </deferred-method>
      <!-- @bindingType javax.el.MethodExpression -->
      <!-- @default null -->
      <!-- @el only -->
    </attribute>
    <attribute>
      <description>A flag that indicates whether or not the selectionChangeListener
        should be executed immediately (during the Apply Request Values phase of the
        request processing life-cycle instead of Process Validations phase).
      </description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
      <!-- @bindingType boolean -->
      <!-- @default false -->
      <!-- @el true -->
    </attribute>

    <attribute>
      <description>JavaScript code that should be executed on the client when the user clicks
        the left mouse button over the component.
      </description>
      <name>onclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user double-clicks
        the left mouse button over the component.
      </description>
      <name>ondblclick</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user clicks the component with either mouse button.
      </description>
      <name>onmousedown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer onto the component.
      </description>
      <name>onmouseover</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer over the component.
      </description>
      <name>onmousemove</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user moves the mouse pointer
        away from the component.
      </description>
      <name>onmouseout</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a mouse button over the component.
      </description>
      <name>onmouseup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses right mouse button over the component
        (or performs the other context menu invocation action depending on the platform).
      </description>
      <name>oncontextmenu</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user presses a key down over the component.
      </description>
      <name>onkeydown</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when the user releases a key over the component.
      </description>
      <name>onkeyup</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed on the client when the user presses and releases a key
        over the component.
      </description>
      <name>onkeypress</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when onfocus event bubbles up from some of component's child
        component.
      </description>
      <name>onfocus</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>
    <attribute>
      <description>JavaScript code that should be executed when onblur event bubbles up from some of component's child
        component.
      </description>
      <name>onblur</name>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
      <!-- @bindingType java.lang.String -->
      <!-- @default null -->
      <!-- @el true -->
    </attribute>

  </tag>

</taglib>
